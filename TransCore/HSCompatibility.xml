<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

<!-- COMPATIBILITY TYPES =======================================================

	This module contains types that have been DEPRECATED and superceded by 
	newer types.

							API
	OLD TYPE				VERSION		NEW TYPE

	stCargoCrate			26			stGenericCargoCrate
	stNavSign				19			stCommonwealthNavSign
	dsFleetDockServices		23			Use rpgDockServices function and <Trade>

	-->

	<!-- Cargo Crate -->

	<StationType UNID="&stCargoCrate;"
			name=				"abandoned cargo crate"
			sovereign=			"&svIndependent;"
			dockScreen=			"&dsAbandonedCrate;"

			structuralHitPoints="10"
			ejectaType=			"&vtWreckEjecta;"

			scale=				"ship"
			mobile=				"true"
			mass=				"50"
			destroyWhenEmpty=	"true"
			noMapIcon=			"true"
			>

		<ImageVariants>
			<Image			imageID="&rsStations1;" imageX="480" imageY="256" imageWidth="32" imageHeight="32" />
			<Image			imageID="&rsStations1;" imageX="480" imageY="288" imageWidth="32" imageHeight="32" />
			<Image			imageID="&rsStations1;" imageX="480" imageY="320" imageWidth="32" imageHeight="32" />
			<Image			imageID="&rsStations1;" imageX="480" imageY="352" imageWidth="32" imageHeight="32" />
		</ImageVariants>

		<Events>
			<GetExplosionType>
				(intContainerGetExplosionType gSource)
			</GetExplosionType>

			<OnDamage>
				(intContainerOnDamage gSource aDamageHP)
			</OnDamage>
		</Events>

		<DockingPorts
				portCount=		"2"
				portRadius=		"24"
				maxDist=		"3"
				/>

	</StationType>

	<StationType UNID="&stNavSign;"
			name=				"(navigational beacon)"
			sovereign=			"&svIndependent;"
			dockScreen=			"&dsNavSign;"
			abandonedScreen=	"&dsAbandonedNavSign;"
			noMapLabel=			"true"

			mass=				"5000"
			armorID=			"&itLightTitaniumPlate;"
			hitPoints=			"10"

			sign=				"true"
			>

		<Image imageID="&rsStations1;" imageX="0" imageY="668" imageWidth="128" imageHeight="64"/>

		<DockingPorts>
			<Port x="-80"		y="0" />
		</DockingPorts>
	</StationType>

	<!-- Fleet Dock Services -->

	<DockScreen UNID="&dsFleetDockServices;"	nestedScreen="true">
		<Panes>
			<Default>
				<OnPaneInit>
					(block Nil
						; Set the description
						(scrSetDesc gScreen "You are at the docking services deck.")
						)
				</OnPaneInit>

				<Actions>
					<Action name="Refuel" key="R">
						(block Nil
							; Figure out what kind of fuel to use
							(intSetCompatibleFuelEx '((&itPteracniumFuelRod; 88) (&itXenotiteFuelRod; 88) (&itHeliumAssembly; 88)))

							; Free refueling if level 3 or higher
							(if (geq (objGetData gPlayerShip "fleetLevel") 3)
								(setq gCost 0)
								)

							(scrShowScreen gScreen "&dsRefuel;")
							)
					</Action>

					<Action name="Repair or Replace Armor" key="A" >
						(block Nil
							(setq gTechLevel 10)
							(setq gArmorSegment 0)
							(setq gCheckMilitaryID True)
							; Dock services are free if at fleetLevel 4 or greater
							(setq gMargin (if (geq (objGetData gPlayerShip "fleetLevel") 4) 0 100))
							(scrShowScreen gScreen "&dsRepairArmor;")
							)
					</Action>

					<Action name="Install Device" key="D" >
						(block Nil
							(setq gTechLevel 9)
							(setq gTechModifier Nil)
							(setq gCheckMilitaryID True)
							(setq gMargin (if (geq (objGetData gPlayerShip "fleetLevel") 4) 0 100))
							(scrShowScreen gScreen "&dsInstallDevice;")
							)
					</Action>

					<Action name="Remove Device" key="V" >
						(block Nil
							(setq gMargin (if (geq (objGetData gPlayerShip "fleetLevel") 4) 0 100))
							(scrShowScreen gScreen "&dsRemoveDevice;")
							)
					</Action>

					<Action name="Upgrade Reactor" key="P" >
						(scrShowScreen gScreen &dsRPGInstallDeviceFromList;
							{
							itemList: (rpgGetReactorUpgradeList gSource gPlayerShip "r L:1-9;")
							priceAdj: 100
							checkMilitaryID: Nil
							noItemsText: "The technology required to upgrade your reactor is not available at this station."
							})
					</Action>

					<Action name="Done" cancel="1" key="N">
						(scrExitScreen gScreen)
					</Action>
				</Actions>
			</Default>
		</Panes>
	</DockScreen>

</TranscendenceModule>
