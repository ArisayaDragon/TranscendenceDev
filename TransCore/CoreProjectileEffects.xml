<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>
	
<!-- DEFAULT PROJECTILE EFFECTS ================================================

	These effects may be used in weapons to create some standard effects, such
	as a laser beam.

-->
	
	<EffectType UNID="&efLaserBeamDefault;"
			instance=			"owner"
			>
		<Effect>
			<Ray
					style=			"smooth"
					shape=			"tapered"
					/>
		</Effect>

		<Events>
			<GetParameters>
				;	This event allows us to initialize effect parameters based 
				;	on weapon properties. In particular, we adjust the size of 
				;	the effect based on the amount of average damage.
				;
				;	For weapon effects, gData has the following fields:
				;
				;	damageHP: The average number of hit points of damage.
				;	speed: The speed of the shot (as a percent of lightspeed).
				;
				;	The event must return a structure with each field representing
				;	a parameter for the effect. For Ray effects, valid fields are:
				;	intensity, length, width, primaryColor, and secondaryColor.

				(block (
					(damageHP (@ gData 'damageHP))
					(laserColor (coreCalcLaserColor damageHP))
					)

					{
						length:
							(mathScale 
								damageHP						; average damage of weapon
								1								; min damage
								30								; max damage
								60								; min beam length
								220								; max beam length
								50								; scale gamma
								)
						width: (mathScale damageHP 1 30 12 28 50)
						intensity: 35

						primaryColor: (@ laserColor 'primaryColor)
						secondaryColor: (@ laserColor 'secondaryColor)
						}
					)
			</GetParameters>
		</Events>
	</EffectType>

	<EffectType UNID="&efKineticBoltDefault;"
			instance=			"owner"
			>
		<Effect>
			<Ray
					style=			"smooth"
					shape=			"diamond"
					primaryColor=	"#CCF7FF"
					secondaryColor=	"#667B80"
					/>
		</Effect>

		<Events>
			<GetParameters>
				(block (damageHP)
					(setq damageHP (@ gData 'damageHP))
					
					{
						length:
							(mathScale 
								damageHP						; average damage of weapon
								4								; min damage
								40								; max damage
								(divide (@ gData 'speed) 2)		; min bullet length (based on speed)
								(@ gData 'speed)				; max bullet length
								50								; scale gamma
								)
						width: (mathScale damageHP 4 40 12 28 50)
						intensity: 40
						}
					)
			</GetParameters>
		</Events>
	</EffectType>

	<EffectType UNID="&efParticleBeamDefault;"
			instance=			"creator"
			>
		<Effect>
			<Ray
					style=			"grainy"
					shape=			"oval"
					primaryColor=	"#65ff2c"
					secondaryColor=	"#808417"
					>
				<Events>
					<GetParameters>
						(block (
							(damageHP (@ gData 'damageHP))
							)

							{
								length:
									(mathScale 
										damageHP						; average damage of weapon
										2								; min damage
										60								; max damage
										40								; min beam length
										150								; max beam length
										50								; scale gamma
										)
								width: (mathScale damageHP 2 60 6 16 50)
								intensity: 80
								}
							)
					</GetParameters>
				</Events>
			</Ray>
			
			<ParticleComet
					particleCount=	"200"
					primaryColor=	"#65ff2c"
					>
				<Events>
					<GetParameters>
						(block (
							(damageHP (@ gData 'damageHP))
							)

							{
								particleCount: (mathScale damageHP 2 60 100 300 50)
								length: (mathScale damageHP 2 60 60 220 50)
								width: (mathScale damageHP 2 60 6 16 50)
								}
							)
					</GetParameters>
				</Events>
			</ParticleComet>
		</Effect>
	</EffectType>

	<EffectType UNID="&efBlastShellDefault;"
			instance=			"owner"
			>
		
		<Effect>
			<Ray
					style=			"smooth"
					shape=			"tapered"
					primaryColor=	"#feffa1"
					secondaryColor=	"#f76e24"
					length=			"12"
					width=			"6"
					xformRotation=	"10"
					>
				<Events>
					<GetParameters>
						(block (damageHP primaryColor secondaryColor)
							(setq damageHP (@ gData 'damageHP))

							{
								length:	(mathScale damageHP	6 80 16 64 50)
								width: (mathScale damageHP 6 80 6 24 50)
								intensity: 10
								}
							)
					</GetParameters>
				</Events>
			</Ray>
			
			<Ray
					style=			"smooth"
					shape=			"tapered"
					primaryColor=	"#feffa1"
					secondaryColor=	"#f76e24"
					xformRotation=	"-10"
					>
				<Events>
					<GetParameters>
						(block (damageHP primaryColor secondaryColor)
							(setq damageHP (@ gData 'damageHP))

							{
								length:	(mathScale damageHP	6 80 16 64 50)
								width: (mathScale damageHP 6 80 6 24 50)
								intensity: 10
								}
							)
					</GetParameters>
				</Events>
			</Ray>
			
			<Ray
					style=			"smooth"
					shape=			"tapered"
					primaryColor=	"#feffa1"
					secondaryColor=	"#f76e24"
					>
			
				<Events>
					<GetParameters>
						(block (damageHP primaryColor secondaryColor)
							(setq damageHP (@ gData 'damageHP))

							{
								length:
									(mathScale 
										damageHP						; average damage of weapon
										6								; min damage
										80								; max damage
										60								; min beam length
										220								; max beam length
										50								; scale gamma
										)
								width: (mathScale damageHP 6 80 6 22 50)
								intensity: 30
								}
							)
					</GetParameters>
				</Events>
			</Ray>
		</Effect>
	</EffectType>

	<EffectType UNID="&efIonBeamDefault;"
			instance=			"creator"
			>
		<Effect>
			<Ray
					style=			"jagged"
					shape=			"tapered"
					primaryColor=	"#00d5ff"
					secondaryColor=	"#006b80"
					>
				<Events>
					<GetParameters>
						(block (damageHP primaryColor secondaryColor)
							(setq damageHP (@ gData 'damageHP))

							{
								length:
									(mathScale 
										damageHP						; average damage of weapon
										5								; min damage
										70								; max damage
										60								; min beam length
										260								; max beam length
										50								; scale gamma
										)
								width: (mathScale damageHP 5 70 20 40 50)
								intensity: 40
								}
							)
					</GetParameters>
				</Events>
			</Ray>
			
			<ParticleComet
					particleCount=	"200"
					primaryColor=	"#00d5ff"
					>
				<Events>
					<GetParameters>
						(block (
							(damageHP (@ gData 'damageHP))
							)

							{
								particleCount: (mathScale damageHP 5 70 100 300 50)
								length: (mathScale damageHP 5 70 60 220 50)
								width: (mathScale damageHP 5 70 6 16 50)
								}
							)
					</GetParameters>
				</Events>
			</ParticleComet>
		</Effect>
	</EffectType>

	<EffectType UNID="&efThermoShellDefault;"
			instance=			"creator"
			>
		
		<Effect>
			<ParticleJet
					emitRate=			"20"
					emitSpeed=			"2-10"
					particleLifetime=	"5-15"
					spreadAngle=		"45"
					>
				<Events>
					<GetParameters>
						(block (damageHP lifetimeAdj)
							(setq damageHP (@ gData 'damageHP))
							(setq lifetimeAdj (mathScale damageHP 20 80 1 5 50))

							{
								particleLifetime: (cat lifetimeAdj "-" (multiply lifetimeAdj 3))
								}
							)
					</GetParameters>
				</Events>
				
				<ParticleEffect>
					<Particle
							style=			"plain"
							minWidth=		"1"
							maxWidth=		"2"
							primaryColor=	"#ffe695"
							secondaryColor=	"#ff5400"
							/>
				</ParticleEffect>
			</ParticleJet>
			
			<ParticleJet
					emitRate=			"20"
					emitSpeed=			"40-60"
					spreadAngle=		"1"
					>
				<Events>
					<GetParameters>
						(block (damageHP lifetimeAdj)
							(setq damageHP (@ gData 'damageHP))
							(setq lifetimeAdj (mathScale damageHP 20 80 2 8 50))

							{
								particleLifetime: (cat lifetimeAdj "-" (multiply lifetimeAdj 3))
								}
							)
					</GetParameters>
				</Events>
				
				<ParticleEffect>
					<Particle
							style=			"plain"
							minWidth=		"1"
							maxWidth=		"3"
							primaryColor=	"#ffe695"
							secondaryColor=	"#ff5400"
							/>
				</ParticleEffect>
			</ParticleJet>
			
			<Ray
					style=			"smooth"
					shape=			"tapered"
					primaryColor=	"#ffe695"
					secondaryColor=	"#ff5400"
					>
				<Events>
					<GetParameters>
						(block (damageHP primaryColor secondaryColor)
							(setq damageHP (@ gData 'damageHP))

							{
								length:	(mathScale damageHP	20 160 90 180 50)
								width: (mathScale damageHP 20 160 16 45 50)
								intensity: 50
								}
							)
					</GetParameters>
				</Events>
			</Ray>
		</Effect>
	</EffectType>

	<EffectType UNID="&efPositronBeamDefault;"
			instance=			"creator"
			>
		<Effect>
			
			<ParticleComet
					particleCount=	"200"
					primaryColor=	"#f9ffb3"
					>
				<Events>
					<GetParameters>
						(block (
							(damageHP (@ gData 'damageHP))
							)

							{
								particleCount: (mathScale damageHP 10 140 200 300 50)
								length: (mathScale damageHP 10 140 60 260 50)
								width: (mathScale damageHP 10 140 8 12 50)
								}
							)
					</GetParameters>
				</Events>
			</ParticleComet>
			<Ray
					style=			"smooth"
					shape=			"oval"
					primaryColor=	"#f9ffb3"
					secondaryColor=	"#806a00"
					>
				<Events>
					<GetParameters>
						(block (damageHP primaryColor secondaryColor)
							(setq damageHP (@ gData 'damageHP))

							{
								length: (mathScale damageHP	10 140 60 100 50)
								width: (mathScale damageHP 10 140 15 30 50)
								intensity: 60
								}
							)
					</GetParameters>
				</Events>
			</Ray>
		</Effect>
	</EffectType>

	<EffectType UNID="&efGravitonBeamDefault;"
			instance=			"creator"
			>
		<Effect>
			<Ray
					style=			"wavy"
					shape=			"tapered"
					primaryColor=	"#2a00ff"
					secondaryColor=	"#9580ff"
					/>
		</Effect>

		<Events>
			<GetParameters>
				(block (damageHP primaryColor secondaryColor)
					(setq damageHP (@ gData 'damageHP))

					{
						length:
							(mathScale 
								damageHP						; average damage of weapon
								40								; min damage
								1400							; max damage
								80								; min beam length
								260								; max beam length
								50								; scale gamma
								)
						width: (mathScale damageHP 40 1400 30 80 50)
						intensity: 70
						}
					)
			</GetParameters>
		</Events>
	</EffectType>

</TranscendenceModule>
