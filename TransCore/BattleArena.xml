<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE TranscendenceModule
	[
	<!-- 0160-016F BATTLE ARENA TRACKS -->
	
	<!ENTITY muArenaSlicer					"0x00820160">
	<!ENTITY muArenaSurvivor				"0x00820161">
	<!ENTITY muArenaContender				"0x00820162">
	<!ENTITY muArenaVictor					"0x00820163">
	<!ENTITY muArenaChampion				"0x00820164">
	]>

<TranscendenceModule>

	<Sovereign UNID="&svGladiator;"
			name="gladiators"
			demonym=":a gladiator(s)"

			alignment="constructive chaos"
			>
		<Relationships>
			<Relationship sovereign="&svPlayer;" disposition="enemy" mutual="true"/>
			<Relationship sovereign="&svGladiator;" disposition="enemy"/>
		</Relationships>
	</Sovereign>

	<!-- Battle Arena 

	GLOBAL DATA

	arenaRank:		Status of player in arena:
						Nil						= Player has never fought a battle
						'rookie					= The player fights in 'last ship flying' contests
						'gladiator				= The player fights in one-on-one battles
						'challenger				= The player can challenge Champion (The Slicer)
						'champion				= The player has defeated The Slicer
						'retired				= The player has retired
						'coward					= The player has declined too many times (or escaped the arena)
						'loser					= The player challenged The Slicer and lost
						'washout				= The player never became popular

	arenaRep:		A number representing the player's reputation with the crowd					
					If geq 600, the player is a crowd favorite.

	arenaSkill:		Player's rating. This is computed based on the skill of the ships defeated by
					the player.

	katamiStatus:	Status of Mr. Katami mission:
						Nil						= Never met
						'instructor				= Katami is instructing the player
						'kidnapped				= Katami is at the Black Market station
						'betrayed				= Player ignores Katami
						'rescued				= Katami has been rescued by the player
						'returned				= Player dies against The Slicer
						'dead					= Katami is dead

	EXTRA DATA

	Status:			Status of contest:
						Nil						= No battle in progress
						'inProgress				= Battle in progress
						'destroyed				= Opponent destroyed
						'playerLeft				= Player left arena
						'playerKilled			= Player killed in arena
						'waitingForMatchEnd		= Player was killed and melee is not done yet
						'draw					= Battle is a draw

	OpponentCount:	Number of opponents left
	Opponent{n}:	Opponent 0-max
	Opponents:		Ordered list of all challenges

	gladiatorList:	List of objID for all active (not yet killed) gladiators

	meleeCount:		Number of melee rounds that the player has been in
	rookiePoints:	Points accumulated for destroying ships in this melee
	rookieScore:	Total points accumulated as a rookie

	matchCount:		Number of gladiator matches that the player was in
	opponentSkill:	Skill of current opponent
	repGain:		Rep gained for current fight
	prizeGain:		Prize money for current fight
	opponentShots:	Number of shots fired by opponent in this fight
	lowestShields:	Lowest level that player shields reached
	lowestArmor:	Lowest level that player armor reached
	missileRep:		Current rep gained by firing missiles
	explosionRep:	Current rep gained by explosions
	fightTime:		Increment by 1 every 10 ticks
	drawAllowed:	If True, player is allowed to call a draw
	opponentArmor:	Lowest level that opponent's armor reached so far
	timeTo50:		The fightTime at which the opponent's armor was 50 or below
	timeTo25:		The fightTime at which the opponent's armor was 25 or below
	timeTo10:		The fightTime at which the opponent's armor was 10 or below
	timeToShieldsDown: The fightTime at which the opponent's shields are first dropped

	results:		A list of the skill level of the last 4 opponents fought by the player
					(or 0 for opponents that won)

	EXTRA DATA ON GLADIATOR SHIPS

	arenaSkill:			Skill of gladiator
	arenaPrizeBonus:	Bonus to prize
	arenaRepBonus:		Bonus to reputation
	arenaHome:			Gladiator's home system
	arenaDescription:	Short description

	-->

	<StationType UNID="&stBattleArena;"
			name=				"Battle Arena Maximus"
			sovereign=			"&svCorporate;"
			level=				"2"
				 
			attributes=			"battleArena, battleArenaMaximus, battleArenaSegment, corporate, corporateCustoms, corporateDecon, friendly, generic, human, majorStation, populated"
				 
			dockScreen=			"Main"
			inherit=			"&unidCommonText;"
			defaultBackgroundID="&rsBattleArenaBkgnd;"
				 
			barrier=			"true"
			barrierEffect=		"&efBattleArenaWallHit;"
			canAttack=			"true"
			immutable=			"true"
			paintLayer=			"overhang"
			>

		<!-- Trade and Items -->
		
		<Trade currency="credit" max="100000" replenish="5000">
			<Refuel			criteria="f +BasicFuel; L:1-5;" priceAdj="100"/>
			<RepairArmor	criteria="a L:1-6;" priceAdj="100"/>
			<ReplaceArmor	criteria="a L:1-6;" priceAdj="100"/>
			<InstallDevice	criteria="d L:1-6;" priceAdj="100"/>
			<RemoveDevice	criteria="d L:1-6;" priceAdj="100"/>

			<BalanceTrade	criteria="{core.fusionFuel}"		impact="20"/>
			<BalanceTrade	criteria="{human.basicFood}"	impact="20"/>
			<BalanceTrade	criteria="{human.lux}"		impact="20"/>
			<BalanceTrade	criteria="{human.meds}"		impact="20"/>
			<BalanceTrade	criteria="{human.res}"		impact="20"/>
		</Trade>
		
		<!-- Satellites -->

		<Satellites>
			<Station type="&stBattleArenaStatic;"	xOffset="-345"	yOffset="5"		imageVariant="3"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="345"	yOffset="5"		imageVariant="4"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="-655"	yOffset="-20"	imageVariant="2"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="655"	yOffset="-20"	imageVariant="5"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="-915"	yOffset="-135"	imageVariant="1"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="915"	yOffset="-135"	imageVariant="6"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="-1185"	yOffset="-275"	imageVariant="11"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="1185"	yOffset="-275"	imageVariant="12"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="-1225"	yOffset="-520"	imageVariant="0"	paintLayer="overhang"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="1225"	yOffset="-520"	imageVariant="17"	paintLayer="overhang"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="-1265"	yOffset="-765"	imageVariant="7"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="1265"	yOffset="-765"	imageVariant="18"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="-1155"	yOffset="-1035"	imageVariant="8"	paintLayer="overhang"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="1155"	yOffset="-1035"	imageVariant="19"	paintLayer="overhang"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="-885"	yOffset="-1163"	imageVariant="9"	paintLayer="overhang"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="885"	yOffset="-1163"	imageVariant="14"	paintLayer="overhang"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="-615"	yOffset="-1283"	imageVariant="10"	paintLayer="overhang"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="615"	yOffset="-1283"	imageVariant="13"	paintLayer="overhang"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="-360"	yOffset="-1318"	imageVariant="15"	paintLayer="overhang"	segment="true"/>
			<Station type="&stBattleArenaStatic;"	xOffset="360"	yOffset="-1318"	imageVariant="16"	paintLayer="overhang"	segment="true"/>
			
			<Station type="&stBattleArenaStatic;"	xOffset="0"		yOffset="-1390"	imageVariant="21"	objName="arenaDoor"	segment="true"/>
		</Satellites>
		
		<!-- Image and Effects -->
		
		<Image			imageID="&rsBattleArenaSegments;" imageX="1240" imageY="0"    imageWidth="320" imageHeight="280"/>
		
		<DockingPorts>
			<Port x="0"		y="-140" />
		</DockingPorts>
		
		<!-- Events -->

		<Events>
			<GetGlobalAchievements>
				(block (
					(arenaRank (typGetData &stBattleArena; 'arenaRank))
					(katamiStatus (typGetData &stBattleArena; 'katamiStatus))
					)
					(append
						(if (and arenaRank (!= arenaRank 'rookie))
							(list (list
								(typTranslate &stBattleArena; (cat "achievement.arena." arenaRank))
								Nil 
								(typTranslate &unidCommonText; 'achievementsAndRegrets)
								))
							)

						(if (and katamiStatus (!= katamiStatus 'instructor) (!= katamiStatus 'kidnapped))
							(list (list
								(typTranslate &stBattleArena; (cat "achievement.katami." katamiStatus))
								Nil
								(typTranslate &unidCommonText; 'achievementsAndRegrets)
								))
							)
						)
					)
			</GetGlobalAchievements>

			<GetRumors>
				(append
					{
						attributes: 'commonwealthHabitat
						priority: 100
						textID: (cat "rumor.commonwealthHabitat.weapon"
							(seededRandom (objGetDestiny (@ gData 'stationObj)) 1 5)
							)
						}
					{
						attributes: 'commonwealthHabitat
						priority: 100
						textID: (cat "rumor.commonwealthHabitat.shield"
							(seededRandom (objGetDestiny (@ gData 'stationObj)) 1 3)
							)
						}
					(rpgRumorAdd 'commonwealthContainer (make 'sequence 1 4) 100)
					)
			</GetRumors>

			<OnCreate>
				(block (classList gladiatorList)
					; Load the list of standard gladiator classes
					(setq classList (typFind "s +battleArena; +gladiator"))

					; Create for all the created gladiators
					(setq gladiatorList Nil)

					; Loop over all classes
					(enum classList theClass
						(for i 1 (random '(1 1 1 2 2 3))
							(block (theShip)
								(setq theShip (bamCreateGladiator gSource theClass))
								(setq gladiatorList (append gladiatorList (objGetID theShip)))
								)
							)
						)

					; Remember the list of gladiators
					(objSetData gSource "gladiatorList" (shuffle gladiatorList))
					
					; Make sure doors are open (we need to do this to set the barrier flag
					; property).
					(bamDoorsOpen)
					)
			</OnCreate>

			<OnFightCheck>
				(if (eq (objGetData gSource "Status") 'inProgress)
					(block (fightTime arenaRep shieldLevel armorLevel opponentArmor opponentShield)
						; Increment time
						(setq fightTime (objIncData gSource "fightTime"))

						; Keep track of the player's shield and armor level
						(setq shieldLevel (objGetShieldLevel gPlayerShip))
						(setq armorLevel (subtract 100 (objGetVisibleDamage gPlayerShip)))

						; And also the opponent's shield and armor
						(setq opponentShield (objGetShieldLevel (objGetObjRefData gSource "Opponent1")))
						(setq opponentArmor (subtract 100 (objGetVisibleDamage (objGetObjRefData gSource "Opponent1"))))

						; Some announcements are timed
						(switch
							(eq fightTime 1)
								(plyMessage gPlayer "The crowd cheers as the match starts!")

							(and (eq fightTime 30)
									(geq (objGetData gSource "lowestShields") 80)
									(geq opponentArmor 90))
								(plyMessage gPlayer "The match is off to a slow start")

							(and (eq fightTime 90)
									(geq (objGetData gSource "lowestShields") 80)
									(geq opponentArmor 90))
								(plyMessage gPlayer "The crowd is frustrated at the slow pace")

							(and (geq fightTime 120) (eq (modulo fightTime 30) 0)
									(geq (objGetData gSource "lowestShields") 80)
									(geq opponentArmor 90))
								(block Nil
									(plyMessage gPlayer "The crowd is bored")
									(objSetData gSource 'drawAllowed True)
									)
									
							(and (geq fightTime 360) (eq (modulo fightTime 30) 0))
								(block Nil
									(plyMessage gPlayer "The crowd is bored")
									(objSetData gSource 'drawAllowed True)
									)
							)

						; Keep track of the lowest shield level reached (for the player's shields)
						(if (ls shieldLevel (objGetData gSource "lowestShields"))
							(block Nil
								(objSetData gSource "lowestShields" shieldLevel)

								; If shields are down to 0, the crowd loves it
								(if (eq shieldLevel 0)
									(block Nil
										(if (not arenaRep) (setq arenaRep (objGetTypeData gSource "arenaRep")))
										(if (geq arenaRep 600)
											(plyMessage gPlayer "%name% is in trouble!")
											(plyMessage gPlayer "Finish %him%! Finish %him%!")
											)
										)
									)
								)
							)

						; Keep track of the lowest armor level reached (for the player's armor)
						(if (ls armorLevel (objGetData gSource "lowestArmor"))
							(block Nil
								; The crowd reacts if armor gets too low, but in different
								; ways depending on reputation
								(if (leq armorLevel 50)
									(block (oldArmorLevel)
										(setq oldArmorLevel (objGetData gSource "lowestArmor"))
										(if (not arenaRep) (setq arenaRep (objGetTypeData gSource "arenaRep")))
										(if (geq arenaRep 600)

											; The player is popular
											(switch
												(and (leq armorLevel 10) (gr oldArmorLevel 10))
													(plyMessage gPlayer 
														"The crowd is silent&#x97;could this be the end?")

												(and (leq armorLevel 25) (gr oldArmorLevel 25))
													(plyMessage gPlayer "The crowd is tense")

												(and (leq armorLevel 50) (gr oldArmorLevel 50))
													(plyMessage gPlayer 
														"The crowd supports %name%&#x97;%he%'s been through worse")
												)

											; The player is not
											(switch
												(and (leq armorLevel 10) (gr oldArmorLevel 10))
													(plyMessage gPlayer 
														"The crowd is wild&#x97;what an exciting match!")

												(and (leq armorLevel 25) (gr oldArmorLevel 25))
													(plyMessage gPlayer "The crowd roars!")

												(and (leq armorLevel 50) (gr oldArmorLevel 50))
													(plyMessage gPlayer 
														"The crowd cheers&#x97;%name% looks doomed")
												)
											)
										)
									)

								(objSetData gSource "lowestArmor" armorLevel)
								)
							)

						; Track how fast shields go down
						(if (and (eq opponentShield 0) (ls fightTime (objGetData gSource "timeToShieldsDown")))
							(block Nil
								(objSetData gSource "timeToShieldsDown" fightTime)

								(switch
									(leq fightTime 15)
										(plyMessage gPlayer 
											"%name% is unstoppable! The crowd cheers!")

									(leq fightTime 30)
										(plyMessage gPlayer 
											"%name% is fighting hard! The crowd cheers!")
									)
								)
							)

						; Keep track of how fast the opponent's armor drops
						(if (ls opponentArmor (objGetData gSource "opponentArmor"))
							(block (oldArmorLevel)
								(setq oldArmorLevel (objGetData gSource "opponentArmor"))

								(switch
									(and (leq opponentArmor 10) (gr oldArmorLevel 10))
										(block Nil
											(objSetData gSource "timeTo10" fightTime)
											(if (leq fightTime 45)
												(plyMessage gPlayer "Go, %name%!")
												)
											)

									(and (leq opponentArmor 25) (gr oldArmorLevel 25))
										(block Nil
											(objSetData gSource "timeTo25" fightTime)
											(if (leq fightTime 30)
												(plyMessage gPlayer "The crowd roars!")
												)
											)

									(and (leq opponentArmor 50) (gr oldArmorLevel 50))
										(block Nil
											(objSetData gSource "timeTo50" fightTime)
											(if (leq fightTime 15)
												(plyMessage gPlayer 
													"%name% is deadly fast! The crowd cheers!")
												)
											)
									)

								(objSetData gSource "opponentArmor" opponentArmor)
								)
							)
						)
					)
			</OnFightCheck>

			<OnObjDestroyed>
				(block (status arenaRank matchFinished)
					(setq status (objGetData gSource "Status"))
					(setq arenaRank (objGetTypeData gSource "arenaRank"))

					(switch
						(not status)
							Nil

						(eq arenaRank 'gladiator)
							(block Nil
								(switch
									; If the player was destroyed, set status
									(eq aObjDestroyed gPlayerShip)
										(block Nil
											(setq status 'playerKilled)
											)

									; Otherwise, the player won
									(block (fightTime repGain)
										(setq status 'destroyed)

										; Adjust timers in case we miss the window
										(setq fightTime (objGetData gSource "fightTime"))
										(if (gr (objGetData gSource "timeTo50") fightTime) (objSetData gSource "timeTo50" fightTime))
										(if (gr (objGetData gSource "timeTo25") fightTime) (objSetData gSource "timeTo25" fightTime))
										(if (gr (objGetData gSource "timeTo10") fightTime) (objSetData gSource "timeTo10" fightTime))

										; Set the reputation. Note that this overwrites "repGain"
										(setq repGain (bamComputeReputation gSource))
										(objSetData gSource "repGain" repGain)

										(switch
											(geq repGain 200)
												(plyMessage gPlayer 
													"The crowd erupts in cheers: %name%! %name%!")

											(geq repGain 100)
												(plyMessage gPlayer 
													"The crowd cheers! What an exciting match!")

											(geq repGain 50)
												(plyMessage gPlayer "The crowd cheers!")

											(geq repGain 1)
												(plyMessage gPlayer "The crowd is pleased")

											(plyMessage gPlayer "The crowd is bored by the match")
											)

										; Remove the ship from the gladiator list
										(objSetData gSource "gladiatorList"
											(filter (objGetData gSource "gladiatorList") theID (not (eq theID (objGetID aObjDestroyed))))
											)
										)
									)

								; Either way, the match is over
								(objIncData gSource "matchCount" 1)
								(bamDoorsOpen gSource)

								; Unregister (if necessary)
								(objUnregisterForSystemEvents gSource)
								(sysCancelTimerEvent gSource "OnFightCheck")
								
								; Back to travel music (we're still technically in combat, because we
								; haven't detected that we're out yet, so we force travel mode).
								
								(uiQueueSoundtrack &muArenaVictor;)
								(uiSetSoundtrackMode 'missionEndTravel)
								)

						(eq arenaRank 'challenger)
							(block Nil
								(switch
									; If the player was destroyed
									(eq aObjDestroyed gPlayerShip)
										(block Nil
											(setq status 'playerKilled)
											(plyMessage gPlayer "The crowd boos in disappointment!")
											)

									; Otherwise, player kills The Slicer
									(block Nil
										(setq status 'destroyed)

										(plyMessage gPlayer 
											"The crowd erupts in cheers: %name%! %name%!")
										)
									)

								; Either way, the match is over
								(bamDoorsOpen gSource)

								; Unregister (if necessary)
								(objUnregisterForSystemEvents gSource)
								(sysCancelTimerEvent gSource "OnFightCheck")
								
								; Back to travel music (we're still technically in combat, because we
								; haven't detected that we're out yet, so we force travel mode).
								
								(uiQueueSoundtrack &muArenaChampion;)
								(uiSetSoundtrackMode 'missionEndTravel)
								)
						)

					(objSetData gSource "Status" status)
					)
			</OnObjDestroyed>

			<OnObjDocked>
				(if (and (eq aDockTarget gSource) (not (eq aObjDocked gPlayerShip)))
					(block (arenaRank)
						(setq arenaRank (objGetTypeData gSource "arenaRank"))

						(switch
							(eq arenaRank 'gladiator)
								(block Nil
									(objMoveTo aObjDocked gSource)
									(shpCancelOrders aObjDocked)
									(objSuspend aObjDocked)
									)

							(block Nil
								(objMoveTo aObjDocked (sysVectorPolarOffset gSource 270 80))
								(objUnregisterForEvents gSource aObjDocked)
								(shpCancelOrders aObjDocked)
								(shpOrderGate aObjDocked)
								)
							)
						)
					)
			</OnObjDocked>

			<OnObjJumped>
				(if (eq aObj gPlayerShip)
					(block Nil
						; Open arena doors
						(bamDoorsOpen gSource)

						; Unregister
						(objUnregisterForEvents gSource gPlayerShip)
						(objUnregisterForSystemEvents gSource)
						(sysCancelTimerEvent gSource "OnFightCheck")

						; Send all the opponents away
						(for i 0 25
							(block (ship)
								(setq ship (objGetObjRefData gSource (cat "Opponent" i)))
								(if ship
									(block Nil
										(objMoveTo ship (sysVectorPolarOffset gSource 270 80))
										(objUnregisterForEvents gSource ship)
										(shpCancelOrders ship)
										(shpOrderGate ship)
										)
									)
								)
							)

						; Set status
						(objSetData gSource "Status" 'playerLeft)
						(objSetData gSource "OpponentCount" Nil)
						)
					)
			</OnObjJumped>

			<OnSystemWeaponFire>
				(switch
					; If this is a repeat, then ignore
					(!= aFireRepeat 0)
						Nil
						
					; If the player fires a missile (or other expensive disposable) she gets a bonus
					(eq aWeaponObj gPlayerShip)
						(block (theWeapon theLevel)
							(setq theWeapon (itmCreate aWeaponUNID 1))
							(setq theLevel (itmGetLevel theWeapon))
							(if (itmMatches theWeapon "m &gt;=$5")
								(objIncData gSource "missileRep" (multiply theLevel (subtract theLevel 1)))
								)
							)

					; Count up the number of times that the opponent fires
					(eq aWeaponObj (objGetObjRefData gSource "Opponent1"))
						(objIncData gSource "opponentShots" 1)
					)
			</OnSystemWeaponFire>

			<OnSystemExplosion>
				; Each explosion is +50
				(objIncData gSource "explosionRep" 50)
			</OnSystemExplosion>
		</Events>

		<DockScreens>
			<Main>

				<InitialPane>
					(block (
						(status (objGetData gSource "Status"))
						(arenaRank (objGetTypeData gSource "arenaRank"))
						)

						(switch
							(not status)
								"Default"

							(and (eq status 'inProgress)
									(objGetData gSource 'drawAllowed)
									(not (objGetData gSource 'finalChallenge))
									)
								"CheckDraw"

							(eq status 'inProgress)
								"StillFighting"

							(eq status 'destroyed)
								(switch
									(eq arenaRank 'gladiator)
										"GladiatorWinner"

									(eq arenaRank 'challenger)
										"ChallengerWinner"

									"Default"
									)

							(eq status 'playerKilled)
								(switch
									(eq arenaRank 'gladiator)
										"GladiatorLoser"

									(eq arenaRank 'challenger)
										"ChallengerLoser"

									"Default"
									)

							(eq status 'waitingForMatchEnd)
								"Default"

							(eq status 'playerLeft)
								"PlayerLeft"
							)
						)
				</InitialPane>

				<Panes>
					<Default descID="descWelcome">
						<Actions>
						<!--
							<Action name="Purchase Tickets" default="1" key="P">
							</Action>
						-->

							<Action id="actionGladiatorsQuarters" default="1">
								(block (theMission arenaRank)
									(setq arenaRank (objGetTypeData gSource "arenaRank"))
									(switch
										(setq theMission (rpgMissionGetAssignment {
												missionCriteria: "n +battleArena;"
												}))
											(scrShowScreen gScreen &dsRPGMission; {
												missionObj: theMission
												})

										(not arenaRank)
											(scrShowPane gScreen "FirstFight")

										(eq arenaRank 'rookie)
											(switch
												(objGetData gSource "OpponentCount")
													(scrShowPane gScreen "MeleeBusy")

												(scrShowPane gScreen "NoMoreMelees")
												)

										(eq arenaRank 'gladiator)
											(switch
												(not (objGetTypeData gSource "katamiStatus"))
													(scrShowPane gScreen "KatamiIntro")

												(and (geq (objGetData gSource "matchCount") 16)
														(ls (objGetTypeData gSource "arenaRep") 500))
													(scrShowPane gScreen "NoMoreGladiators")

												(scrShowScreen gScreen &dsBattleArenaOpponentList;)
												)

										(eq arenaRank 'challenger)
											(scrShowPane gScreen "Challenger")

										(eq arenaRank 'champion)
											(scrShowPane gScreen "Champion")

										(eq arenaRank 'loser)
											(scrShowPane gScreen "Loser")

										(eq arenaRank 'washout)
											(scrShowPane gScreen "Loser")
										)
									)
							</Action>

							<Action id="actionDockServices">
								(rpgDockServices gPlayerShip {
									checkMilitaryID: True
									})
							</Action>

							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>

						</Actions>

					</Default>

					<NoMoreMelees descID="descNoMoreMelees">
						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(scrShowPane gScreen "Default")
							</Action>
						</Actions>
					</NoMoreMelees>

					<MeleeBusy descID="descMeleeBusy">
						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(scrShowPane gScreen "Default")
							</Action>
						</Actions>
					</MeleeBusy>

					<KatamiIntro descID="descKatamiIntro1">
						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(scrShowPane gScreen 'KatamiIntro2)
							</Action>
						</Actions>
					</KatamiIntro>

					<KatamiIntro2 descID="descKatamiIntro2">
						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(block Nil
									(objSetTypeData gSource 'katamiStatus 'instructor)
									(scrShowPane gScreen "Default")
									(scrShowScreen gScreen &dsBattleArenaOpponentList;)
									)
							</Action>
						</Actions>
					</KatamiIntro2>

					<GladiatorWinner>
						<OnPaneInit>
							(block (
								(arenaRep (objGetTypeData gSource "arenaRep"))
								(repGain (objGetData gSource "repGain"))
								(outcome (switch
									(geq repGain 200)	'good
									(geq repGain 50)	'average
														'poor
									))
								katamiMsg
								)

								(setq katamiMsg (switch
									(= outcome 'good)
										(switch
											(geq arenaRep 500)	5
											(geq arenaRep 400)	4
											(geq arenaRep 300)	3
											(geq arenaRep 200)	2
											(geq arenaRep 100)	1
											0
											)

									(= outcome 'average)
										(random 1 9)

									(= outcome 'poor)
										(switch
											(geq (objGetData gSource "lowestShields") 75)	'shields
											(geq (objGetData gSource "lowestArmor") 90)		'armor
											(geq (objGetData gSource "fightTime") 300)		'time
																							'default
											)
									))

								(scrSetDescTranslate gScreen (cat "descGladiatorWinner:" outcome) {
									katamiSays: (scrTranslate gScreen (cat "descGladiatorWinner:" outcome ":" katamiMsg))
									reward: (fmtCurrency 'credit (objGetData gSource "prizeGain"))
									})
								)
						</OnPaneInit>

						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(block (resultList repGain)
									; Open arena doors
									(bamDoorsOpen gSource)

									; Unregister
									(objUnregisterForEvents gSource gPlayerShip)
									(sysCancelTimerEvent gSource "OnFightCheck")

									; Add to reputation
									(objSetGlobalData gSource "arenaRep" 
										(min 1000 (add (objGetTypeData gSource "arenaRep") (objGetData gSource "repGain")))
										)

									; Add record of win
									(setq resultList (append (subset (objGetData gSource "results") 1) (objGetData gSource "opponentSkill")))
									(objSetData gSource "results" resultList)

									; Add to skill
									(objSetGlobalData gSource "arenaSkill" (bamComputeSkill resultList))

									; Pay player
									(plyCredit gPlayer (objGetData gSource "prizeGain"))

									; Unregister
									(objUnregisterForSystemEvents gSource)

									; Set status
									(objSetData gSource "Status" Nil)
									(objSetData gSource "OpponentCount" Nil)

									; See if the player can challenge The Slicer
									(if (and (geq (objGetTypeData gSource "arenaRep") 1000)
											(geq (objGetTypeData gSource "arenaSkill") 1000)
											)

										; Player can now challenge The Slicer
										(block Nil
											(objSetGlobalData gSource "arenaRank" 'challenger)
											(scrShowPane gScreen "ChallengerIntro")
											)

										; Otherwise, back to main screen
										(scrShowPane gScreen "Default")
										)
									)
							</Action>
						</Actions>
					</GladiatorWinner>
					
					<GladiatorDraw descID="descGladiatorDraw">
						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(scrExitScreen gScreen)
							</Action>
						</Actions>
					</GladiatorDraw>

					<GladiatorLoser descID="descGladiatorLoser">
						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(block Nil
									(objSetData gSource "Status" Nil)
									(objSetData gSource "OpponentCount" Nil)

									(scrShowPane gScreen "Default")
									(scrShowScreen gScreen &dsBattleArenaOpponentList;)
									)
							</Action>
						</Actions>
					</GladiatorLoser>

					<NoMoreGladiators descID="descNoMoreGladiators">
						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(block Nil
									(scrShowPane gScreen "Default")
									(objSetGlobalData gSource "arenaRank" 'washout)
									)
							</Action>
						</Actions>
					</NoMoreGladiators>

					<ChallengerLoser descID="descChallengerLoser">
						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(block Nil
									(objSetData gSource "Status" Nil)
									(objSetData gSource "OpponentCount" Nil)

									(objSetGlobalData gSource "arenaRank" 'loser)
									(scrShowPane gScreen "Default")
									)
							</Action>
						</Actions>
					</ChallengerLoser>

					<ChallengerIntro descID="descChallengerIntro">
						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(scrShowPane gScreen "Default")
							</Action>
						</Actions>
					</ChallengerIntro>

					<Challenger>
						<OnPaneInit>
							(if (or
									(= (objGetTypeData gSource 'katamiStatus) 'instructor)
									(= (objGetTypeData gSource 'katamiStatus) 'rescued)
									)
								(scrSetDescTranslate gScreen "descChallenger:katami")
								(scrSetDescTranslate gScreen "descChallenger:empty")
								)
						</OnPaneInit>

						<Actions>
							<Action id="actionFight" default="1">
								(block (theShip)
									(setq theShip (sysCreateShip &scTheSlicerManticore; (objGetPos gSource) &svGladiator;))
									(objSetObjRefData gSource "Opponent1" theShip)
									(shpSetAISetting theShip 'ignoreShieldsDown True)

									; Position the opponent at the right spot
									(objMoveTo theShip (sysVectorPolarOffset gSource (random 204 336) 45))

									; Orders
									(shpOrder theShip 'attack gPlayerShip)
									(shpOrder theShip 'dock gSource)

									; Register
									(objRegisterForEvents gSource theShip)

									; Set the reward
									(objSetData gSource "finalChallenge" True)
									(objSetData gSource "prizeGain" 5000)
									(objSetData gSource "repGain" 500)
									(objSetData gSource "missileRep" 0)
									(objSetData gSource "explosionRep" 0)
									(objSetData gSource "opponentShots" 0)
									(objSetData gSource "opponentArmor" 100)
									(objSetData gSource "lowestShields" (if (objGetItems gPlayerShip "sI") 100 0))
									(objSetData gSource "lowestArmor" (subtract 100 (objGetVisibleDamage gPlayerShip)))
									(objSetData gSource "fightTime" 0)
									(objSetData gSource "drawAllowed" Nil)
									(objSetData gSource "timeTo50" 1000)
									(objSetData gSource "timeTo25" 1000)
									(objSetData gSource "timeTo10" 1000)
									(objSetData gSource "timeToShieldsDown" (if (objGetItems theShip "sI") 1000 -1))

									; Register for system events (so we can tell when ships fire)
									(objRegisterForSystemEvents gSource 150)
									(sysAddObjRecurringTimerEvent 10 gSource "OnFightCheck")
									
									; Make sure Kate is gone
									(setq kateObj (sysFindObject gPlayerShip "sN +kateMorgental;"))
									(objFireEvent kateObj "OrderClearArena")

									; Done
									(bamDoorsClose gSource)
									(objRegisterForEvents gSource gPlayerShip)
									(objSetData gSource "Status" 'inProgress)
									
									; Play Slicer track
									(uiSetSoundtrackMode 'missionStart &muArenaSlicer;)

									(scrExitDock gScreen)
									)
							</Action>

							<Action id="actionBackOut" cancel="1">
								(scrShowPane gScreen "Default")
							</Action>
						</Actions>
					</Challenger>

					<ChallengerWinner>
						<OnPaneInit>
							(switch
								(= (objGetTypeData gSource 'katamiStatus) 'instructor)
									(scrSetDescTranslate gScreen "descChallengerWinner:instructor")
								(= (objGetTypeData gSource 'katamiStatus) 'rescued)
									(scrSetDescTranslate gScreen "descChallengerWinner:rescued")
								(scrSetDescTranslate gScreen "descChallengerWinner:empty")
								)
						</OnPaneInit>

						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(block Nil
									; Open arena doors
									(bamDoorsOpen gSource)

									; Unregister
									(objUnregisterForEvents gSource gPlayerShip)
									(sysCancelTimerEvent gSource "OnFightCheck")

									; Pay player
									(plyCredit gPlayer (objGetData gSource "prizeGain"))

									; Unregister
									(objUnregisterForSystemEvents gSource)

									; Set status
									(objSetData gSource "Status" Nil)
									(objSetData gSource "OpponentCount" Nil)

									; Player is champion
									(objSetGlobalData gSource "arenaRank" 'champion)
									(scrShowPane gScreen "Default")
									)
							</Action>
						</Actions>
					</ChallengerWinner>

					<Champion>
						<OnPaneInit>
							(if (or (= (objGetTypeData gSource 'katamiStatus) 'instructor)
									(= (objGetTypeData gSource 'katamiStatus) 'rescued)
									)
								(scrSetDescTranslate gScreen "descChampion:katami")
								(scrSetDescTranslate gScreen "descChampion:empty")
								)
						</OnPaneInit>

						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(scrShowPane gScreen "Default")
							</Action>
						</Actions>
					</Champion>

					<Loser>
						<OnPaneInit>
							(if (or (= (objGetTypeData gSource "katamiStatus") 'instructor)
									(= (objGetTypeData gSource "katamiStatus") 'rescued)
									)
								(scrSetDescTranslate gScreen "descLoser:katami")
								(scrSetDescTranslate gScreen "descLoser:empty")
								)
						</OnPaneInit>

						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(scrShowPane gScreen "Default")
							</Action>
						</Actions>
					</Loser>

					<FirstFight descID="descFirstFight">
						<Actions>
							<Action id="actionSign" default="1">
								(block Nil
									(objSetGlobalData gSource "arenaRank" 'rookie)
									(objSetData gSource "rookieScore" 0)
									(objSetData gSource "meleeCount" 0)
									(scrShowPane gScreen 'Default)
									(scrShowScreen gScreen &dsRPGMission; {
										missionObj: (msnCreate &msBattleArenaMelee; gSource)
										})
									)
							</Action>

							<Action id="actionBackOut" cancel="1">
								(scrShowScreen gScreen &dsRPGMessage; {
									textID:'descChicken
									nextScreen:'Main
									})
							</Action>
						</Actions>

					</FirstFight>

					<StillFighting descID="descStillFighting">
						<Actions>
							<Action id="actionUndock" default="1" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</StillFighting>
					
					<CheckDraw>
						<OnPaneInit>
							(block (
								(opponentObj (objGetObjRefData gSource "Opponent1"))
								)
								
								;	Enemy stops attacking
								
								(shpCancelOrders opponentObj)
								(shpOrder opponentObj 'wait)
								
								;	Description
								
								(scrSetDescTranslate gScreen 'descDrawOrNot)
								)
						</OnPaneInit>
						
						<Actions>
							<Action id="actionDrawYes" default="1">
								(block (
									(opponentObj (objGetObjRefData gSource "Opponent1"))
									)
									
									;	Remove the ship from the gladiator list
									
									(objSetData gSource "gladiatorList"
										(filter (objGetData gSource "gladiatorList") theID (not (eq theID (objGetID opponentObj))))
										)
										
									;	The match is over
									
									(if (not (objGetData gSource 'finalChallenge))
										(objIncData gSource "matchCount" 1)
										)
										
									(bamDoorsOpen gSource)
									(objUnregisterForSystemEvents gSource)
									(sysCancelTimerEvent gSource "OnFightCheck")
									
									;	Opponent done
									
									(shpCancelOrders opponentObj)
									(objSuspend opponentObj)
									
									;	Set status
									
									(objSetData gSource "Status" Nil)
									(objSetData gSource "OpponentCount" Nil)
									
									;	Katami debrief
									
									(scrShowPane gScreen 'GladiatorDraw)
									)
							</Action>
							
							<Action id="actionDrawNo" cancel="1">
								(block (
									(opponentObj (objGetObjRefData gSource "Opponent1"))
									)
									
									;	Attack continues
									
									(shpCancelOrders opponentObj)
									(shpOrder opponentObj 'attack gPlayerShip)
									(shpOrder opponentObj 'dock gSource)
									
									;	Done
									
									(scrExitScreen gScreen)
									)
							</Action>
						</Actions>
					</CheckDraw>

					<PlayerLeft descID="descPlayerLeft">
						<Actions>
							<Action id="actionUndock" default="1" cancel="1">
								<Exit/>
							</Action>

						</Actions>
					</PlayerLeft>

				</Panes>
			</Main>
		</DockScreens>
		
		<Language>
			<Text id="actionGladiatorsQuarters">[G]ladiators' Quarters</Text>
			<Text id="actionDrawYes">[A]ccept a Draw</Text>
			<Text id="actionDrawNo">[C]ontinue Fighting</Text>
			<Text id="actionSign">[S]ign</Text>
			<Text id="actionBackOut">[B]ack Out</Text>
			<Text id="actionFight">[F]ight!</Text>
			
			<Text id="descWelcome">

				Welcome to Battle Arena Maximus! Prepare yourself for the greatest show in space!
				Watch as the best pilots in the Commonwealth compete in mortal combat. The action
				is so real you'll swear its faked! See your ticket agent for reservations.
				Enquire within to join the elite combatants.

			</Text>
			<String id="descMeleeBusy">"We're still in the middle of a match! Come back later."</String>
			<Text id="descDrawOrNot">

				An Arena official looks at the battle metrics:
					
				"The crowd is bored and you've officially passed the minimum battle time.
				Do you want to declare a draw?"

			</Text>
			<Text id="descGladiatorDraw">

				Mr. Katami looks disappointed:
					
				"I knew that opponent would be hard to defeat!
				But you survived and now we can learn from our mistake. Perhaps you need to
				upgrade your weapons."

			</Text>
			<Text id="descGladiatorLoser">

				Mr. Katami is surprised, though pleased, to see you again:

				"I knew that opponent would be too much for you! I should have said something! 
				I am glad to see you alive, though. Don't let this setback stop you. You still 
				have a chance to improve and challenge The Slicer.

			</Text>
			<Text id="descNoMoreGladiators">

				Katami looks disappointed:

				"I'm sorry, but I was not able to teach you properly. The crowd 
				no longer wants to see you fight."

			</Text>
			<Text id="descChallengerLoser">

				Mr. Katami is surprised, though pleased, to see you again:

				"Too bad. The Slicer will retain his title. Well, at least 
				you're still alive! That's something."

			</Text>
			<Text id="descChallengerIntro">

				"Remember everything I have taught you&mdash;you will need 
				all your skills now.

				"After the last battle you are the #2 ranked gladiator in the 
				Arena! Only one step remains: You must challenge The Slicer! If 
				you win, you will become the Legendary Hero of the Arena.

				"Go and prepare yourself and your ship! Come back ready to fight!"

			</Text>
			<Text id="descFirstFight">

				"Welcome, citizen! You are about to join an elite group of men and women who
				have conquered their fears and proven their courage and skills in the ultimate
				test&#x97;mortal combat."
				
				"All that remains is for you to sign this minor release indemnifying the
				Maximus Corporation against any liability in the event of harm, death, etc."

			</Text>
			<String id="descChicken">

				"This kind of challenge is not for the weak and fearful. You are wise to decline."

			</String>
			<Text id="descNoMoreMelees">

				"I'm sorry, you don't have the killer spirit that we need in a gladiator.
				I'm afraid you'll just have to watch the matches on the 3DV like everyone else."

			</Text>
			<Text id="descKatamiIntro1">

				As you enter the gladiators' quarters, a short man wearing a simple suit approaches you:
				
				"My name is Mr. Katami and I am prepared to train you. I watched you in the arena.
				You've got skills and a good ship, but that's not enough. You have to be smart, and
				I can teach you how."
				
				"Are you ready?"

			</Text>
			<Text id="descKatamiIntro2">

				"First you must be smart in choosing your opponent. Don't just pick someone
				you can kill easily. Pick a fight the crowd wants to see. Win the crowd and you
				will be a Legendary Hero."
				
				"Are you ready?"

			</Text>
			<String id="descStillFighting">

				"You'll get no help here. Fight your own battles!"

			</String>
			<String id="descPlayerLeft">

				"You're banned from the games for leaving the arena in the middle of battle!"
			
			</String>
			<Text id="descGladiatorWinner:good">

				Katami beams a smile:

				%katamiSays%

				Winning this match has earned you %reward%.
			</Text>
			<String id="descGladiatorWinner:good:1">
				"That's the way to do it! You're the young rising star that the crowd loves to root for."
			</String>
			<String id="descGladiatorWinner:good:2">
				"That's the way to do it! The crowd loves a good comeback!"
			</String>
			<String id="descGladiatorWinner:good:3">
				"That's the way to do it! You're on your way to win the love of the crowd! Keep giving them an exciting match every time!"
			</String>
			<String id="descGladiatorWinner:good:4">
				"That's the way to do it! You're a favorite of the crowd now. Make sure you live up to it!"
			</String>
			<String id="descGladiatorWinner:good:5">
				"That's the way to do it! You've won the crowd's heart. Now they'll be waiting for you to challenge The Slicer!"
			</String>
			<Text id="descGladiatorWinner:average">

				Katami seems pleased:

				%katamiSays%

				Winning this match has earned you %reward%.

			</Text>
			<String id="descGladiatorWinner:average:1">
				"You remind me of my own time in the Arena: The roar of explosions blending with the noise of the crowd until both were one. There's nothing like it, is there?"
			</String>
			<String id="descGladiatorWinner:average:2">
				"The crowd loves a good match and they will pay to see it. The more popular you are, the more you will earn."
			</String>
			<String id="descGladiatorWinner:average:3">
				"You've done well, but don't get sloppy. To become Legendary Hero of the Arena you will need to defeat The Slicer, and he is fast, precise, and very deadly."
			</String>
			<String id="descGladiatorWinner:average:4">
				"Remember that it's not enough to kill quickly; you have to give the crowd a good show!"
			</String>
			<String id="descGladiatorWinner:average:5">
				"It's been a long time since I trained someone with your potential! Don't disappoint me!"
			</String>
			<String id="descGladiatorWinner:average:6">
				"The Arena is the one place where corporate executives and small-time shareholders mix. Be sure to give them a good show!"
			</String>
			<String id="descGladiatorWinner:average:7">
				"You remind me of my own victories! Once I was so popular I was invited to dine with Robert Morgental himself! It was exquisite."
			</String>
			<String id="descGladiatorWinner:average:8">
				"You're doing well! Always keep improving. When you fight The Slicer you will need every bit of training that I can give you."
			</String>
			<String id="descGladiatorWinner:average:9">
				"Years ago I trained Kate Morgental! You remind me of her a lot. You fight hard at every match, but you're always thinking about something bigger than the Arena."
			</String>
			<Text id="descGladiatorWinner:poor">

				Katami stands with his arms crossed:

				%katamiSays%

				Winning this match has earned you %reward%.

			</Text>
			<String id="descGladiatorWinner:poor:shields">
				"You barely took a hit during the match; next time pick a challenging opponent that will give the crowd something exciting to watch."
			</String>
			<String id="descGladiatorWinner:poor:armor">
				"The crowd loves blood! Give them some excitement! It's better to win after taking heavy damage than to win without taking a scratch. Remember that."
			</String>
			<String id="descGladiatorWinner:poor:time">
				"The crowd has a short attention span. Don't take forever to kill your opponent. Give the crowd a good show!"
			</String>
			<String id="descGladiatorWinner:poor:default">
				"Winning isn't enough! You have to give the crowd a good show! Make the match exciting and the crowd will love you for it."
			</String>
			<Text id="descChallenger:katami">

				Mr. Katami bows his head:

				"I have nothing more to teach you. Remember everything I've said and fight with honor!"

			</Text>
			<Text id="descChallenger:empty">

				The gladiators' quarters feels cold and empty without Mr. Katami.
				You prepare yourself as best you can to fight The Slicer.

			</Text>
			<Text id="descChallengerWinner:instructor">

				Pandemonium greets you as you enter the gladiators' quarters.
				Friends and partiers are celebrating your victory. Mr. Katami
				hugs you like a long lost %son% and puts a drink in your hand.

			</Text>
			<Text id="descChallengerWinner:rescued">

				Pandemonium greets you as you enter the gladiators' quarters.
				Friends and partiers are celebrating your victory. Mr. Katami
				hugs you like a long lost %son% and puts a drink in your hand.
				At the edge of the room Kate Morgental shines her smile at you.

			</Text>
			<Text id="descChallengerWinner:empty">

				Pandemonium greets you as you enter the gladiators' quarters.
				Partiers and hanger-ons celebrate your victory. In the corner
				of the room you see a small memorial for Mr. Katami in danger
				of being trampled by the wild partying.

			</Text>
			<Text id="descChampion:katami">

				Mr. Katami greets you:

				"It's wonderful to see you again! Let's talk about the old times at the Arena."

			</Text>
			<Text id="descChampion:empty">

				The gladiators' quarters feels cold and empty without Mr. Katami.

			</Text>
			<Text id="descLoser:katami">

				Mr. Katami greets you:

				"It's good to see you again. I'm training someone new now.
				Hopefully they won't disappoint me."

			</Text>
			<Text id="descLoser:empty">

				The gladiators' quarters feels cold and empty without Mr. Katami.

			</Text>

			<Text id="gladiator:novice:1">%gladiator% is a young gladiator from %home%.</Text>
			<Text id="gladiator:novice:2">%gladiator% flies a %ship%.</Text>
			<Text id="gladiator:novice:3">%gladiator% is a novice pilot flying a beautiful %ship%.</Text>
			<Text id="gladiator:champion:1">%gladiator% is a former Champion from %home%.</Text>
			<Text id="gladiator:champion:2">The battle-hardened pilot known as %gladiator% will give you the fight of your life!</Text>
			<Text id="gladiator:champion:3">Death comes quickly when you fight %gladiator%.</Text>

			<Text id="rumor.commonwealthHabitat.weapon1">
				"What's your favorite weapon? Personally I favor the AK505 Ballista. It's
				a monster and it will kill a lot of ships with a single punch. When I hit
				something, I want it to go down, you know what I mean?"
			</Text>
			<Text id="rumor.commonwealthHabitat.weapon2">
				"What's your favorite weapon? Personally I favor a particle beam weapon.
				The latest tech is always going to win in the end. You have to keep up
				with technology or you're just another wreck in the Arena."
			</Text>
			<Text id="rumor.commonwealthHabitat.weapon3">
				"What's your favorite weapon? Personally I favor an omni turbolaser. I say
				a computer can hit a target way better than I can, so why not take
				advantage of that? By the time your opponent has lined up his BFG, you've
				already hit him five times!"
			</Text>
			<Text id="rumor.commonwealthHabitat.weapon4">
				"What's your favorite weapon? Personally I favor a slam cannon, enhanced
				if possible. There's nothing better than the thump-thump sounds of a slam
				cannon hitting your enemy's plasteel!"
			</Text>
			<Text id="rumor.commonwealthHabitat.weapon5">
				"What's your favorite weapon? Personally I favor the RK15 Partisan turret.
				Sure, the wimpy omniturbo is a little faster, but I wanna hit my targets
				with a punch, not shine a damn light in their eyes."
			</Text>
			<Text id="rumor.commonwealthHabitat.shield1">
				"So what kind of shields you got? I think a lot of gladiators underestimate
				how important shields are. Even a good monopole deflector is better than
				nothing. I'd enhance the crap out of it, though."
			</Text>
			<Text id="rumor.commonwealthHabitat.shield2">
				"So what kind of shields you got? I think a lot of gladiators underestimate
				how important shields are. The Cyclotron series are my choice at the moment.
				The S55 has more protection than a class III; better yet, get the S1200."
			</Text>
			<Text id="rumor.commonwealthHabitat.shield3">
				"So what kind of shields you got? I think a lot of gladiators underestimate
				how important shields are. If you can afford the Ceratops series then go for
				it. They're the best against missiles anyway, which is what you're gonna get
				hit with in the Arena."
			</Text>
			<String id="rumor.commonwealthContainer.1">
				"The Slicer is the champion of the Arena! No one has been able to defeat him."
			</String>
			<Text id="rumor.commonwealthContainer.2">
				"I don't watch the Arena games anymore; the Black Market has totally
				infiltrated the show and all the fights are rigged now."
			</Text>
			<Text id="rumor.commonwealthContainer.3">
				"I remember watching Kate Morgental fight in the Arena. She put on a great
				show! I don't know what happened to her; probably working for her father now."
			</Text>
			<Text id="rumor.commonwealthContainer.4">
				"Let me tell you a secret about fighting in the Arena: load up with missiles.
				Who cares about beams and whatnot; a good missile will cut through armor like
				a knife through Salmonite!"
			</Text>

			<Text id="achievement.arena.gladiator">Became a gladiator in the Arena</Text>
			<Text id="achievement.arena.challenger">Earned the right to challenge The Slicer in the Arena</Text>
			<Text id="achievement.arena.champion">Became Legendary Hero of the Arena</Text>
			<Text id="achievement.arena.loser">Defeated by The Slicer in the Arena</Text>
			<Text id="achievement.arena.washout">Disappointed Mr. Katami</Text>

			<Text id="achievement.katami.betrayed">Betrayed Mr. Katami</Text>
			<Text id="achievement.katami.rescued">Rescued Mr. Katami from the Black Market</Text>
			<Text id="achievement.katami.dead">Failed to save Mr. Katami</Text>

            <Text id="core.mapDescMain">
                Gladiatorial combat
            </Text>
		</Language>
	</StationType>

	<!-- Battle Arena Static Wall -->

	<StationType UNID="&stBattleArenaStatic;"
			name=				"(arena wall segment)"
			sovereign=			"&svCommonwealth;"
			inherit=			"&baBattleArenaSegment;"
				 
			attributes=			"battleArenaSegment"

			barrier=			"true"
			barrierEffect=		"&efBattleArenaWallHit;"
			immutable=			"true"

			noMapLabel=			"true"
			>

		<ImageVariants>
			<Image			imageID="&rsBattleArenaSegments;" imageX="0"    imageY="0"    imageWidth="350" imageHeight="220"/>	<!-- 0 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="350"  imageY="0"    imageWidth="270" imageHeight="270"/>	<!-- 1 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="620"  imageY="0"    imageWidth="250" imageHeight="240"/>	<!-- 2 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="870"  imageY="0"    imageWidth="370" imageHeight="270"/>	<!-- 3 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="1560" imageY="0"    imageWidth="370" imageHeight="270"/>	<!-- 4 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="1930" imageY="0"    imageWidth="250" imageHeight="240"/>	<!-- 5 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="2180" imageY="0"    imageWidth="270" imageHeight="270"/>	<!-- 6 -->
			
			<Image			imageID="&rsBattleArenaSegments;" imageX="0"    imageY="280"  imageWidth="270" imageHeight="270"/>	<!-- 7 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="270"  imageY="280"  imageWidth="270" imageHeight="270"/>	<!-- 8 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="540"  imageY="280"  imageWidth="270" imageHeight="270"/>	<!-- 9 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="810"  imageY="280"  imageWidth="270" imageHeight="270"/>	<!-- 10 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="1080" imageY="280"  imageWidth="270" imageHeight="270"/>	<!-- 11 -->
			
			<Image			imageID="&rsBattleArenaSegments;" imageX="1450" imageY="280"  imageWidth="270" imageHeight="270"/>	<!-- 12 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="1720" imageY="280"  imageWidth="270" imageHeight="270"/>	<!-- 13 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="1990" imageY="280"  imageWidth="270" imageHeight="270"/>	<!-- 14 -->
			
			<Image			imageID="&rsBattleArenaSegments;" imageX="0"    imageY="550"  imageWidth="240" imageHeight="200"/>	<!-- 15 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="240"  imageY="550"  imageWidth="240" imageHeight="200"/>	<!-- 16 -->
			
			<Image			imageID="&rsBattleArenaSegments;" imageX="1450" imageY="550"  imageWidth="350" imageHeight="220"/>	<!-- 17 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="1800" imageY="550"  imageWidth="270" imageHeight="270"/>	<!-- 18 -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="2070" imageY="550"  imageWidth="270" imageHeight="270"/>	<!-- 19 -->
			
			<Image			imageID="&rsBattleArenaSegments;" imageX="480"  imageY="550"  imageWidth="480" imageHeight="440"/>	<!-- 20: Closed Door -->
			<Image			imageID="&rsBattleArenaSegments;" imageX="960"  imageY="550"  imageWidth="480" imageHeight="440"/>	<!-- 21: Open Door -->
		</ImageVariants>

	</StationType>

<!-- DOCK SCREENS -->

	<DockScreen unid="&dsBattleArenaOpponentList;"
			nestedScreen=		"true"
			inherit=			"&dsDockScreenBase;"
			>

		<OnScreenInit>
			(block (
				(arenaSkill (objGetTypeData gSource "arenaSkill"))
				(arenaRep (objGetTypeData gSource "arenaRep"))

				;	 Generate a list of all gladiators that the player can challenge
				(opponentList (bamComputeOpponentList gSource arenaSkill arenaRep))
				)

				; If the list is empty, then we need to add some new opponents
				(if (not opponentList)
					(block (newGladiators)

						; Create some new gladiators
						(for i 1 (random 3 5)
							(setq newGladiators
								(append newGladiators
									(objGetID (bamCreateGladiatorBySkill gSource arenaSkill))
									)
								)
							)

						; Add them to the list
						(objSetData gSource "gladiatorList"
							(append (objGetData gSource "gladiatorList") (shuffle newGladiators))
							)

						; Recompute the opponent list
						(setq opponentList (bamComputeOpponentList gSource arenaSkill arenaRep))

						; If the list is stil empty then just pick a random gladiator
						; from the new crop
						(if (not opponentList)
							(setq opponentList (list (objGetObjByID (random newGladiators))))
							)
						)
					)
				(scrSetData gScreen 'opponentList opponentList)
				)
		</OnScreenInit>

		<Display type="carouselSelector"
				style="shipList"
				>
			<OnDisplayInit>
				(map (scrGetData gScreen 'opponentList) shipObj
					(block (
						(armorItem (@ (objGetItems shipObj "aI") 0))
						(shieldItem (@ (objGetItems shipObj "sI") 0))
						(driveItem (or (@ (objGetItems shipObj "vI") 0) &itTritiumPropulsionUpgrade;))
						)
						{
						title: (objGetName shipObj)
						icon: (shpGetImageDesc shipObj)
						largeIcon: (shpGetImageDesc shipObj { type:'schematic })

						details: (append
							{
							icon: (shpGetImageDesc shipObj 0)
							title: (objGetName shipObj 'generic)
							}
							{
							icon: (itmGetImageDesc driveItem)
							title: (scrTranslate gScreen 'listSpeed {speed: (fmtNumber 'speed (objGetProperty shipObj 'maxSpeed))})
							}
							{
							icon: (itmGetImageDesc armorItem)
							title: (scrTranslate gScreen 'listArmor)
							desc: (or (itmGetName armorItem '(short actual)) "None")
							}
							{
							icon: (itmGetImageDesc shieldItem)
							title: (scrTranslate gScreen 'listShields)
							desc: (or (itmGetName shieldItem '(short actual)) "None")
							}
							(map (objGetItems shipObj "wI") theItem {
								icon: (itmGetImageDesc theItem)
								title: (itmGetName theItem '(short actual capitalize))
								})
							)

						shipObj: shipObj
						})
					)
			</OnDisplayInit>
		</Display>

		<Panes>
			<Default>
				<OnPaneInit>
					(block (
						(theEntry (@ (scrGetListEntry gScreen) 'shipObj))
						(repBonus (objGetData theEntry "arenaRepBonus"))
						(prize (bamComputePrize
							(objGetTypeData gSource "arenaSkill")
							(objGetTypeData gSource "arenaRep")
							(objGetData theEntry "arenaSkill")
							(objGetData theEntry "arenaPrizeBonus")
							))
						(descID (switch
							(geq repBonus 100)	"descGladiator:4"
							(geq repBonus 50)	"descGladiator:3"
							(geq repBonus 25)	"descGladiator:2"
												"descGladiator:1"
							))
						)
						(scrSetDesc gScreen
							(objGetData theEntry "arenaDescription")
							" "
							(scrTranslate gScreen descID {
								gladiator: (objGetName theEntry)
								reward: (fmtCurrency 'credit prize)
								})
							)
						)
				</OnPaneInit>

				<Actions>
					<Action id="actionChallenge" default="1">
						(scrShowPane gScreen "GladiatorFight")
					</Action>

					<Action id="actionCancelSpecial" cancel="1">
						(scrExitScreen gScreen)
					</Action>
				</Actions>
			</Default>

			<GladiatorFight noListNavigation="true">
				<OnPaneInit>
					(block (
						(theEntry (scrGetListEntry gScreen))
						(arenaSkill (objGetTypeData gSource "arenaSkill"))
						(arenaRep (objGetTypeData gSource "arenaRep"))
						(theOpponent (@ theEntry 'shipObj))

						;	Compute the player's best weapon and shields
						(playerArmor (bamComputeArmorLevel gPlayerShip))
						(playerShield (bamComputeShieldLevel gPlayerShip))
						(playerWeapon (bamComputeWeaponLevel gPlayerShip))

						;	Compute the opponent's best weapon and shields
						(opponentArmor (bamComputeArmorLevel theOpponent))
						(opponentShield (bamComputeShieldLevel theOpponent))
						(opponentWeapon (bamComputeWeaponLevel theOpponent))

						;	Get some facts about the opponent
						(skill (objGetData theOpponent "arenaSkill"))
						(baseSkill (objGetStaticData theOpponent "arenaSkillBase"))
						(repBonus (objGetData theOpponent "arenaRepBonus"))

						;	Generate the list of all gladiators (to see if the player chose correctly)
						(theFullList (bamComputeOpponentList gSource arenaSkill arenaRep))

						desc theBetterList proposeList altOpponent katamiSays
						)

						;	Compensate if the player has strong armor and weak shields (or vice versa)
						(setq playerShield (max playerShield (subtract playerArmor 1)))
						(setq playerArmor (max playerArmor (subtract playerShield 1)))

						;	Pick a better alternative
						(setq theBetterList (filter theFullList theObj
							(and (not (eq theObj theOpponent))
								(leq (bamComputeShieldLevel theObj) playerWeapon)
								(leq (bamComputeWeaponLevel theObj) playerArmor)
								(leq (bamComputeWeaponLevel theObj) playerShield)
								(geq (subtract (objGetData theObj "arenaSkill") (objGetStaticData theObj "arenaSkillBase")) -150)
								)
							))

						;	If there are any other opponents with a greater repBonus...
						(setq proposeList (filter theBetterList theObj (gr (objGetData theObj "arenaRepBonus") repBonus)))
						(setq altOpponent (random proposeList))

						;	Select message
						(setq katamiSays (switch
							;	Warn the player if her shields are too weak
							(gr opponentWeapon playerShield)	'shields

							;	Warn the player if her armor is too weak
							(gr opponentWeapon playerArmor)		'armor

							;	Warn the player if her weapons are too weak
							(gr opponentShield playerWeapon)	'weapon

							;	If there are any other opponents with a greater repBonus...
							altOpponent							'alternate

							;	If the opponent is underrated
							(ls (- skill baseSkill) -150)		'underrated

							'fight
							))

						(scrSetDescTranslate  gScreen (cat "descGladiatorFight:" katamiSays) {
							opponent: (objGetName theOpponent)
							alternate: (objGetName altOpponent)
							})
						)
				</OnPaneInit>

				<Actions>
					<Action id="actionFight" default="1">
						(block (
							(theEntry (scrGetListEntry gScreen))
							(theShip (@ theEntry 'shipObj))
							)
							(objSetData gSource "OpponentCount" 1)
							(objSetObjRefData gSource "Opponent1" (@ theEntry 'shipObj))

							; Position the opponent at the right spot
							(objMoveTo theShip (sysVectorPolarOffset gSource (random 204 336) 45))
							(objResume theShip)

							; Orders
							(shpOrder theShip 'attack gPlayerShip)
							(shpOrder theShip 'dock gSource)

							; Register
							(objRegisterForEvents gSource theShip)

							; Set the reward
							(objSetData gSource "finalChallenge" Nil)
							(objSetData gSource "opponentSkill" (objGetData theShip "arenaSkill"))
							(objSetData gSource "repGain" (objGetData theShip "arenaRepBonus"))
							(objSetData gSource "missileRep" 0)
							(objSetData gSource "explosionRep" 0)
							(objSetData gSource "opponentShots" 0)
							(objSetData gSource "opponentArmor" 100)
							(objSetData gSource "lowestShields" (if (objGetItems gPlayerShip "sI") 100 0))
							(objSetData gSource "lowestArmor" (subtract 100 (objGetVisibleDamage gPlayerShip)))
							(objSetData gSource "fightTime" 0)
							(objSetData gSource "drawAllowed" Nil)
							(objSetData gSource "timeTo50" 1000)
							(objSetData gSource "timeTo25" 1000)
							(objSetData gSource "timeTo10" 1000)
							(objSetData gSource "timeToShieldsDown" (if (objGetItems theShip "sI") 1000 -1))
							(objSetData gSource "prizeGain" (bamComputePrize
								(objGetTypeData gSource "arenaSkill")
								(objGetTypeData gSource "arenaRep")
								(objGetData theShip "arenaSkill")
								(objGetData theShip "arenaPrizeBonus")
								))

							; Register for system events (so we can tell when ships fire)
							(objRegisterForSystemEvents gSource 150)
							(sysAddObjRecurringTimerEvent 10 gSource "OnFightCheck")

							; Done
							(bamDoorsClose gSource)
							(objRegisterForEvents gSource gPlayerShip)
							(objSetData gSource "Status" 'inProgress)

							; Play Slicer track
							(uiSetSoundtrackMode 'missionStart &muArenaSlicer;)

							(scrExitDock gScreen)
							)
					</Action>

					<Action id="actionBackOut" cancel="1">
						(scrShowPane gScreen "Default")
					</Action>
				</Actions>
			</GladiatorFight>
		</Panes>

		<Language>
			<Text id="actionChallenge">[C]hallenge!</Text>
			<Text id="actionCancelSpecial">Cance[l]</Text>
			<Text id="actionBackOut">[B]ack Out</Text>
			<Text id="actionFight">[F]ight!</Text>

			<Text id="listSpeed">Max. speed: %speed%</Text>
			<Text id="listArmor">Armor</Text>
			<Text id="listShields">Shields</Text>

			<Text id="descGladiator:4">

				This is the match the audience has been waiting for.
				For defeating %gladiator% you will receive %reward%.

			</Text>
			<Text id="descGladiator:3">

				Defeating %gladiator% will excite the crowd and bring you great fame!
				For defeating %gladiator% you will receive %reward%.

			</Text>
			<Text id="descGladiator:2">

				This is a well-matched opponent that will draw the crowd.
				For defeating %gladiator% you will receive %reward%.

			</Text>
			<Text id="descGladiator:1">

				For defeating %gladiator% you will receive %reward%.

			</Text>

			<Text id="descGladiatorFight:shields">

				Katami shakes his head:

				"Are you sure you want to challenge such an opponent? Your shields are not
				strong enough to resist %opponent%'s attacks."

			</Text>
			<Text id="descGladiatorFight:armor">

				Katami shakes his head:

				"Are you sure you can survive such an opponent? Your armor is weak against
				%opponent%'s weapon."

			</Text>
			<Text id="descGladiatorFight:weapon">

				Katami sighs:

				"Are you sure you are up to the challenge? Your primary weapon is not strong
				enough to penetrate %opponent%'s shields."

			</Text>
			<Text id="descGladiatorFight:alternate">

				Katami considers carefully:

				"An interesting choice. Have you considered %alternate% instead?
				I think the crowd would prefer to see that match."

			</Text>
			<Text id="descGladiatorFight:underrated">

				Katami looks up to the ceiling:

				"There is something disturbing about %opponent%.
				I feel that he is more powerful than everyone believes. Be careful!"

			</Text>
			<Text id="descGladiatorFight:fight">

				Katami bows his head:

				"Fight with honor! Defeat your opponent and win the love of the crowd!"

			</Text>
		</Language>
	</DockScreen>

	<!-- G-Type Star -->

	<StationType UNID="&stRigelAureliusStar;"
		name=				"(G class star)"
		scale=				"star"
		sovereign=			"&svNeutral;"
		spaceColor=			"#66664c"
		maxLightRadius=		"300"

		attributes=			"generic, star"
		>

		<ImageEffect>
			<Orb
					style=			"smooth"
					radius=			"490"
					intensity=		"25"
					primaryColor=	"#ffffbf"
					secondaryColor=	"#ffffbf"
					/>
		</ImageEffect>
	</StationType>

	<!-- Rigel Aurelius system -->

	<SystemType UNID="&ssBattleArena;" 
				noRandomEncounters=	"true"
				noExtraEncounters=	"true"
				>

		<Tables>
			<ArmsQuarterStation>
				<Table>
					<Station chance="15" type="&stArmorDealer;" noMapLabel="true">
						<OnCreate>(objAddSellOrder gSource "*NU -Illegal; -ID; -NotForSale;" 130)</OnCreate>
					</Station>

					<Station chance="40" type="&stArmsDealer;" noMapLabel="true">
						<OnCreate>(objAddSellOrder gSource "*NU -Illegal; -ID; -NotForSale;" 130)</OnCreate>
					</Station>

					<Station chance="25" type="&stArmsDealerMakayev;" noMapLabel="true">
						<OnCreate>(objAddSellOrder gSource "*NU -Illegal; -ID; -NotForSale;" 140)</OnCreate>
					</Station>
					
					<Station chance="20" type="&stArmsDealerRasiermesser;" noMapLabel="true">
						<OnCreate>(objAddSellOrder gSource "*NU -Illegal; -ID; -NotForSale;" 140)</OnCreate>
					</Station>
				</Table>
			</ArmsQuarterStation>

			<CorporateQuarterStation>
				<Table>
					<Station chance="40" type="&stCorporateEnclave;" noMapLabel="true"/>
					<Station chance="45" type="&stCommonwealthDryDock;" noMapLabel="true"/>
					<Station chance="15" type="&stInsuranceCompany;" noMapLabel="true"/>
					<Station chance="15" type="&stHotel;" noMapLabel="true"/>
				</Table>
			</CorporateQuarterStation>

			<MiddleQuarterStation>
				<Table>
					<Station chance="35" type="&stCorporateEnclave;" noMapLabel="true"/>
					<Station chance="30" type="&stCommonwealthResidentials;" noMapLabel="true"/>
					<Station chance="10" type="&stFuelDepot;" noMapLabel="true"/>
					<Station chance="10" type="&stCommonwealthSlums;" noMapLabel="true"/>
					<Station chance="5" type="&stMedicalSuburb;" noMapLabel="true"/>
					<Null chance="10"/>
				</Table>
			</MiddleQuarterStation>

			<LowerQuarterStation>
				<Table>
					<Station chance="25" type="&stCommonwealthSlums;" noMapLabel="true"/>
					<Station chance="30" type="&stContainerHabitat;" noMapLabel="true"/>
					<Station chance="5" type="&stCommonwealthResidentials;" noMapLabel="true"/>
					<Null chance="40"/>
				</Table>
			</LowerQuarterStation>

			<OtherStations>
				<Table>
					<Station chance="20" type="&stCorporateEnclave;"/>
					<Station chance="20" type="&stMiningColony;"/>
					<Station chance="15" type="&stArmorDealer;">
						<OnCreate>(objAddSellOrder gSource "*NU -Illegal; -ID; -NotForSale;" 130)</OnCreate>
					</Station>
					<Station chance="15" type="&stArmsDealer;">
						<OnCreate>(objAddSellOrder gSource "*NU -Illegal; -ID; -NotForSale;" 130)</OnCreate>
					</Station>
					<Station chance="10" type="&stArmsDealerMakayev;">
						<OnCreate>(objAddSellOrder gSource "*NU -Illegal; -ID; -NotForSale;" 140)</OnCreate>
					</Station>
					<Station chance="10" type="&stCommonwealthSlums;"/>
					<Station chance="10" type="&stFuelDepot;"/>
				</Table>
			</OtherStations>

			<SeverusAsteroid>
				<Table>
					<Station chance="35" type="&stRockyOuterAsteroidSizeA;"/>
					<Station chance="10" type="&stMetallicAsteroidSizeA;"/>
					<Station chance="45" type="&stRockyAsteroidSizeA;"/>
					<Station chance="4" type="&stRockyOuterAsteroidSizeB;"/>
					<Station chance="1" type="&stMetallicAsteroidSizeB;"/>
					<Station chance="5" type="&stRockyAsteroidSizeB;"/>
				</Table>
			</SeverusAsteroid>

			<SeverusTrojans>
				<Group>
					<OrbitalDistribution count="2d25+75" arcLength="720" radialWidth="60">
						<Lookup table="SeverusAsteroid"/>
					</OrbitalDistribution>
				</Group>
			</SeverusTrojans>
		</Tables>

		<SystemGroup>

			<!-- Star -->

			<Station type="&stRigelAureliusStar;" name="Rigel Aurelius"/>

			<AddAttribute attributes="GTypeSystem"/>
			<AddTerritory minRadius="0"		maxRadius="370"		attributes="innerSystem, rockyComp, cinderZone"/>
			<AddTerritory minRadius="370"	maxRadius="620"		attributes="lifeZone, rockyComp, desertZone"/>
			<AddTerritory minRadius="620"	maxRadius="0"		attributes="outerSystem, rockyComp, frostZone"/>

			<!-- Carus -->

			<Orbitals distance="90" angle="random">
				<Group>
					<Primary>
						<Station type="&stRockyPlanetoidSizeG;" 
								name="Carus" 
								showOrbit="true"
								/>
					</Primary>

					<Orbitals distance="18" angle="random">
						<Group>
							<Lookup table="StargateInbound"/>

							<Orbitals count="2" distance="18" angle="equidistant">
								<Station type="&stCommonwealthDryDock;" name="Rigel Dry Dock" noArticle="true"/>

								<Station type="&stCommonwealthNavSign;">
									<InitialData>
										<Sign>"Death or\nGlory Awaits"</Sign>
										<Info>
											"Welcome, Traveler! You have just arrived at Rigel Aurelius, the universe's most famous tourist destination. Millions of us, from all star systems, have come to shed the constraints of our regimented life and trust to the luck of the Games. Join us at Battle Arena Maximus!"
										</Info>
									</InitialData>
								</Station>
							</Orbitals>
						</Group>
					</Orbitals>

				</Group>
			</Orbitals>

			<!-- Tacitus -->

			<Orbitals distance="3" scale="light-minute" angle="random">
				<Group>
					<Primary>
						<Station type="&stGreenhouseTerrestrialSizeI;" 
								name="Tacitus" 
								showOrbit="true"
								/>
					</Primary>

					<Orbitals distance="16" angle="equidistant">
						<Lookup table="OtherStations"/>
						<Label attributes="greenhouse, planet, planetary, terrestrial"/>
					</Orbitals>

					<Trojan>
						<Group>
							<Orbitals count="2d4+4" distance="1d24" angle="random">
								<Station type="&stRockyAsteroidSizeA;"/>
							</Orbitals>

							<Orbitals count="1d6" distance="2d8+8" angle="random">
								<Station type="&stRockyAsteroidSizeB;"/>
							</Orbitals>

							<Orbitals distance="2d8+6" angle="random">
								<RandomStation stationCriteria="*enemy" locationAttribs="asteroids, rocky, trojan"/>
							</Orbitals>
						</Group>
					</Trojan>

				</Group>
			</Orbitals>

			<!-- Geta -->

			<Orbitals distance="5" scale="light-minute" angle="random">
				<Group>
					<Primary>
						<Station type="&stDesertTerrestrialSizeH;" 
								name="Geta" 
								showOrbit="true"
								/>
					</Primary>

					<Orbitals distance="16" angle="random">
						<Label attributes="desert, planet, planetary, terrestrial"/>
					</Orbitals>

					<AntiTrojan>
						<Group>
							<Orbitals count="4d4+8" distance="1d48" angle="random">
								<Station type="&stRockyAsteroidSizeA;"/>
							</Orbitals>

							<Orbitals count="2d6" distance="1d36" angle="random">
								<Station type="&stRockyAsteroidSizeB;"/>
							</Orbitals>

							<Orbitals distance="2d8+6" angle="random">
								<RandomStation stationCriteria="*enemy" locationAttribs="asteroids, rocky, trojan"/>
							</Orbitals>
						</Group>
					</AntiTrojan>

				</Group>
			</Orbitals>

			<!-- Severus -->

			<Orbitals distance="9" scale="light-minute" angle="random">
				<Group>
					<Primary>
						<Station type="&stMethaneGasGiantSizeK;" 
								name="Severus" 
								showOrbit="true"
								/>
					</Primary>

					<Orbitals distance="24" angle="equidistant">
						<Lookup table="StargateOutbound"/>
						<Label attributes="gasGiant, methaneGiant, planet, planetary"/>
					</Orbitals>

					<!-- Battle Arena -->

					<Trojan>
						<Offset scale="pixel" yOffset="-320" xOffset="-1024">
							<Station type="&stBattleArena;"/>
							
							<Station type="&stNavBeacon;" imageVariant="1"  xOffset="-328"     yOffset="-1515"/>
							<Station type="&stNavBeacon;" imageVariant="1"  xOffset="1670"     yOffset="-350"/>
							<Station type="&stNavBeacon;" imageVariant="1"  xOffset="-1670"    yOffset="-350"/>
							<Station type="&stNavBeacon;" imageVariant="1"  xOffset="0"		   yOffset="400"/>
							
							<Station type="&stCommonwealthNavSign;"			xOffset="328"	   yOffset="-1515" name="Welcome, Gladiator!">
								<InitialData>
									<Sign>"Welcome,\nGladiator!"</Sign>
									<Info>
										"Welcome to Battle Arena Maximus! Please enter through the gates and dock at the main station for registration information."
									</Info>
								</InitialData>
							</Station>

							<!-- Arms Quarter -->
						
							<Offset scale="pixel"				xOffset="719"	 yOffset="-1709">
								<Station type="&stArmorDealer;" noMapLabel="true">
									<OnCreate>(objAddSellOrder gSource "*NU -Illegal; -ID; -NotForSale;" 130)</OnCreate>
								</Station>
							</Offset>

							<Offset scale="pixel"				xOffset="1118"	 yOffset="-1556">
								<Lookup table="ArmsQuarterStation"/>
							</Offset>

							<Offset scale="pixel"				xOffset="389"	 yOffset="-2174">
								<Lookup table="ArmsQuarterStation"/>
							</Offset>

							<Offset scale="pixel"				xOffset="839"	 yOffset="-2075">
								<Station type="&stArmsDealer;" noMapLabel="true">
									<OnCreate>(objAddSellOrder gSource "*NU -Illegal; -ID; -NotForSale;" 130)</OnCreate>
								</Station>
							</Offset>

							<Offset scale="pixel"				xOffset="1295"	 yOffset="-1934">
								<Lookup table="ArmsQuarterStation"/>
							</Offset>
							
							<!-- Corporate Quarter -->

							<Offset scale="pixel"				xOffset="1592"		 yOffset="-1211">
								<Station type="&stCorporateEnclave;" noMapLabel="true"/>
							</Offset>

							<Offset scale="pixel"				xOffset="1892"		 yOffset="-1523">
								<Station type="&stCommonwealthDryDock;" noMapLabel="true"/>
							</Offset>

							<Offset scale="pixel"				xOffset="1790"		 yOffset="-839">
								<Station type="&stInsuranceCompany;" noMapLabel="true"/>
							</Offset>

							<Offset scale="pixel"				xOffset="2177"		 yOffset="-1070">
								<Station type="&stHotel;" noMapLabel="true"/>
							</Offset>

							<!-- Left Quarter -->
							
							<Offset scale="pixel"				xOffset="-719"	 yOffset="-1709">
								<Lookup table="MiddleQuarterStation"/>
							</Offset>

							<Offset scale="pixel"				xOffset="-1118"	 yOffset="-1556">
								<Lookup table="LowerQuarterStation"/>
							</Offset>

							<Offset scale="pixel"				xOffset="-389"	 yOffset="-2174">
								<Lookup table="MiddleQuarterStation"/>
							</Offset>

							<Offset scale="pixel"				xOffset="-839"	 yOffset="-2075">
								<Lookup table="LowerQuarterStation"/>
							</Offset>

							<Offset scale="pixel"				xOffset="-1295"	 yOffset="-1934">
								<Lookup table="MiddleQuarterStation"/>
							</Offset>
							
							<!-- Middle Quarter -->
							
							<Offset scale="pixel"				xOffset="-1592"		 yOffset="-1211">
								<Lookup table="MiddleQuarterStation"/>
							</Offset>

							<Offset scale="pixel"				xOffset="-1892"		 yOffset="-1523">
								<Lookup table="MiddleQuarterStation"/>
							</Offset>

							<Offset scale="pixel"				xOffset="-1790"		 yOffset="-839">
								<Lookup table="MiddleQuarterStation"/>
							</Offset>

							<Offset scale="pixel"				xOffset="-2177"		 yOffset="-1070">
								<Lookup table="MiddleQuarterStation"/>
							</Offset>
							
							<!-- Lower Quarter -->
							
							<Offset scale="pixel"				xOffset="362"	 yOffset="-2722">
								<Lookup table="LowerQuarterStation"/>
							</Offset>
							
							<Offset scale="pixel"				xOffset="371"	 yOffset="-2983">
								<Lookup table="LowerQuarterStation"/>
							</Offset>
							
							<Offset scale="pixel"				xOffset="386"	 yOffset="-3286">
								<Lookup table="LowerQuarterStation"/>
							</Offset>
							
							<Offset scale="pixel"				xOffset="671"	 yOffset="-2698">
								<Lookup table="LowerQuarterStation"/>
							</Offset>
							
							<Offset scale="pixel"				xOffset="716"	 yOffset="-2983">
								<Lookup table="LowerQuarterStation"/>
							</Offset>
							
							<Offset scale="pixel"				xOffset="749"	 yOffset="-3274">
								<Lookup table="LowerQuarterStation"/>
							</Offset>
							
							<Offset scale="pixel"				xOffset="1097"	 yOffset="-2632">
								<Lookup table="LowerQuarterStation"/>
							</Offset>
							
							<Offset scale="pixel"				xOffset="1169"	 yOffset="-2881">
								<Lookup table="LowerQuarterStation"/>
							</Offset>
							
							<Offset scale="pixel"				xOffset="1235"	 yOffset="-3166">
								<Lookup table="LowerQuarterStation"/>
							</Offset>
						</Offset>
					</Trojan>

					<AntiTrojan>
						<Lookup table="SeverusTrojans"/>

						<Orbitals distance="1d8+6" angle="random">
							<Station type="&stBlackMarketStation;"/>
						</Orbitals>
					</AntiTrojan>
				</Group>
			</Orbitals>

			<!-- Create more stargates in case an extension added more links -->

			<Lookup table="HumanSpaceStargates"/>

		</SystemGroup>

	</SystemType>

<!-- Globals =============================================================== -->

	<Globals>
		(block Nil
			(setq bamComputeArmorLevel (lambda (theObj)
				(block (allArmor)
					(setq allArmor (objGetItems theObj "aI"))
					(if allArmor
						(block (totalLevel)
							(setq totalLevel 0)
							(enum allArmor theArmor 
								(setq totalLevel (add totalLevel (itmGetLevel theArmor)))
								)
							(divide totalLevel (count allArmor))
							)

						0
						)
					)
				))

			(setq bamComputeOpponentList (lambda (baseObj arenaSkill arenaRep)
				(map (objGetData baseObj 'gladiatorList) 'excludeNil theObjID
					(block (
						(theObj (objGetObjByID theObjID))
						(objSkill (objGetData theObj 'arenaSkill))
						)

						;	Figure out if this ship is willing to fight with the player
						(if (and (leq objSkill (+ arenaSkill 100))
								(geq objSkill (- arenaSkill 100))
								(or (geq arenaRep 600) (leq objSkill 800))
								)
							theObj
							)
						)
					)
				))

			(setq bamComputePrize (lambda (playerSkill playerRep opponentSkill prizeBonus)
				(max
					200
					(intRoundDown
						(add
							(multiply
								(divide playerRep 20)
								(divide (add playerRep (multiply 2 (subtract opponentSkill playerSkill))) 20)
								)
							(if prizeBonus prizeBonus 0)
							)
						25
						)
					)
				))

			(setq bamComputeReputation (lambda (baseObj)
				(block (repGain rep fightTime)

					; Start with the bonus to rep that we get for killing this opponent
					(setq repGain (objGetData baseObj "repGain"))
					(if (not repGain)
						(setq repGain 0)
						)
					;(dbgOutput "rep bonus: +" repGain)

					; Add the rep that we gained from missiles and explosions
					(setq rep (min 100 (add (objGetData baseObj "missileRep") (objGetData baseObj "explosionRep"))))
					(setq repGain (add repGain rep))
					;(dbgOutput "missiles fired: +" rep)

					; Add 1 point of rep for every 5 shots fired by the opponent
					(setq rep (divide (objGetData baseObj "opponentShots") 5))
					(setq repGain (add repGain rep))
					;(dbgOutput "shots fired: +" rep)

					; Add bonus points if the shields were brought down
					(switch
						(leq (objGetData baseObj "lowestShields") 0)
							(setq rep 100)

						(leq (objGetData baseObj "lowestShields") 50)
							(setq rep 25)

						(leq (objGetData baseObj "lowestShields") 75)
							(setq rep 10)

						(setq rep 0)
						)

					; If the player doesn't use shields, divide bonus in 4
					(if (not (objGetItems gPlayerShip "sI"))
						(setq rep (divide rep 4))
						)

					;(dbgOutput "shields down: +" rep)
					(setq repGain (add repGain rep))

					; Add bonus points if armor was damaged
					(switch
						(leq (objGetData baseObj "lowestArmor") 10)
							(setq rep 250)

						(leq (objGetData baseObj "lowestArmor") 25)
							(setq rep 150)

						(leq (objGetData baseObj "lowestArmor") 50)
							(setq rep 100)

						(setq rep 0)
						)

					;(dbgOutput "armor damage: +" rep)
					(setq repGain (add repGain rep))

					; Add bonus points if opponent shields brought down quickly
					(switch
						(eq (objGetData baseObj "timeToShieldsDown") -1)
							(setq rep 0)

						(leq (objGetData baseObj "timeToShieldsDown") 15)
							(setq rep 50)

						(leq (objGetData baseObj "timeToShieldsDown") 30)
							(setq rep 25)

						(setq rep 0)
						)

					;(dbgOutput "fast shields down: +" rep)
					(setq repGain (add repGain rep))

					; Add bonus points if we killed the opponent quickly
					(switch
						(leq (objGetData baseObj "timeTo50") 15)
							(setq rep 100)

						(leq (objGetData baseObj "timeTo25") 30)
							(setq rep 50)

						(leq (objGetData baseObj "timeTo10") 45)
							(setq rep 25)

						(setq rep 0)
						)

					;(dbgOutput "fast kill: +" rep)
					(setq repGain (add repGain rep))

					; Time bonus based on battle length
					(setq fightTime (objGetData baseObj "fightTime"))
					(switch
						(leq fightTime 50)
							(setq rep 10)

						(leq fightTime 75)
							(setq rep 0)

						(setq rep (subtract 0 (divide (objGetData baseObj "fightTime") 6)))
						)

					;(dbgOutput "time bonus: " (if (geq rep 0) "+" "") rep)
					(setq repGain (add repGain rep))
					(setq repGain (min repGain 200))

					;(dbgOutput (if (gr repGain 0) "total rep: +" "total rep: ") repGain)
					repGain
					)
				))
				
			(setq bamComputeShieldLevel (lambda (theObj)
				(block (theShield)
					(if (setq theShield (item (objGetItems theObj "sI") 0))
						(itmGetLevel theShield)
						0
						)
					)
				))
				
			(setq bamComputeSkill (lambda (battleResults)
				(block (bestResult skillDiff)
					; Find the largest value in the battle results
					(setq bestResult 0)
					(enum battleResults i
						(if (gr i bestResult)
							(setq bestResult i)
							)
						)

					; Compute the skill level diff
					(setq skillDiff 0)
					(enum battleResults i
						(setq skillDiff (add skillDiff (subtract i bestResult)))
						)
					(setq skillDiff (divide skillDiff 4))

					; Compute result
					(add bestResult 200 skillDiff)
					)
				))
				
			(setq bamComputeWeaponLevel (lambda (theObj)
				(block (allWeapons)
					(setq allWeapons (objGetItems theObj "wI"))
					(if allWeapons
						(block (maxLevel)
							(setq maxLevel 0)
							(enum allWeapons theWeapon
								(if (gr (itmGetLevel theWeapon) maxLevel)
									(setq maxLevel (itmGetLevel theWeapon))
									)
								)
							maxLevel
							)

						0
						)
					)
				))

			(setq bamCreateGladiator (lambda (baseObj shipClass)
				(block (theShip descID)
					; Note: We use a position instead of an object for the creation pos
					; because an object would set the gate timer.
					(setq theShip
						(sysCreateShip
							shipClass
							(objGetPos baseObj)
							&svGladiator;
							)
						)

					; Ignore shields down (so we don't run into the Arena walls)
					(shpSetAISetting theShip 'ignoreShieldsDown True)
					
					; Set the skill level
					(objSetData theShip "arenaSkill"
						(max 200
							(min 1200
								(add 
									(objGetStaticData theShip "arenaSkillBase")
									(random '(-500 -250 -100 -50 -25 -25 0 0 0 +25 +25 +50 +100))
									)
								)
							)
						)

					; Chance of a prize bonus
					(if (geq (random 1 100) 20)
						(objSetData theShip "arenaPrizeBonus" (random '(100 100 100 150 150 150 200 200 200 250 250 300 300 350 400 450 500 750 1000)))

						; Else, chance of a rep bonus
						(if (geq (random 1 100) 20)
							(objSetData theShip "arenaRepBonus" (random '(25 25 25 50 50 100)))
							)
						)

					; Set our description
					(objSetData theShip "arenaHome" (random '("Starton Eridani" "St. Katharine's Star" "Rigel Aurelius" "Centauri" "Kibo")))
					(switch
						(leq (objGetData theShip "arenaSkill") 300)
							(setq descID (cat "gladiator:novice:" (random 1 3)))

						(setq descID (cat "gladiator:champion:" (random 1 3)))
						)
					(objSetData theShip "arenaDescription" (objTranslate gSource descID {
						gladiator: (objGetName theShip)
						home: (objGetData theShip "arenaHome")
						ship: (shpGetClassName theShip 1)
						}))

					; Suspend the ship so that it is not visible until later
					(objSuspend theShip)

					; Return it
					theShip
					)
				))

			(setq bamCreateGladiatorBySkill (lambda (baseObj arenaSkill)
				(block (classList maxSkill minSkill)
					; Create a list of gladiators that are of the appropriate level
					; for the player
					(setq minSkill (subtract arenaSkill 100))
					(setq maxSkill (add arenaSkill 100))

					(setq classList
						(filter (typFind "s +battleArena; +gladiator") theClass
							(and
								(leq (typGetStaticData theClass "arenaSkillBase") maxSkill)
								(geq (typGetStaticData theClass "arenaSkillBase") minSkill)
								)
							)
						)

					; If the class list is empty (which should never happen) pick a
					; tough class
					(if (not classList)
						(setq classList (list &scManticoreG6;))
						)

					; Pick a random class and create the ship
					(bamCreateGladiator baseObj (random classList))
					)
				))

			(setq bamCreateMeleeOpponents (lambda (sourceObj shipCount targetPlayerChance classFunc)
				(block (offset)
					(setq offset 0)
					
					; Create a bunch of ships and order them to attack
					(for i 1 shipCount
						(block (thisShip shipClass)
							(setq shipClass (classFunc))
							(setq thisShip
								(sysCreateShip 
									shipClass
									(sysVectorPolarOffset sourceObj (random 204 336) (add 15 (multiply (modulo offset 12) 2)))
									&svGladiator;
									)
								)
								
							; Some ships attack the player, others attack the nearest target
							(if (leq (random 1 100) targetPlayerChance)
								(block Nil
									(shpOrder thisShip "attack" gPlayerShip)
									(shpOrder thisShip "dock" sourceObj)
									)

								; We add some command code to the ship so that it chooses a
								; random gladiator target
								(shpSetCommandCode thisShip
									(block (targetList theArena thePlayer)
										(setq theArena (sysFindObject gSource "TN +battleArena;"))
										(if (eq (objGetData theArena "status") 'inProgress)
											(setq thePlayer gPlayerShip)
											)

										(setq targetList
											(filter (sysFindObject gSource "sA N:150;") theObj 
												(or (eq (objGetSovereign theObj) &svGladiator;) (eq theObj thePlayer))
												)
											)

										(switch
											targetList
												(shpOrder gSource "attack" (random targetList))

											thePlayer
												(block Nil
													(shpOrder gSource "attack" thePlayer)
													(shpOrder gSource "dock" theArena)
													)

											(shpOrder gSource "dock" theArena)
											)
										)
									)
								)

							(objRegisterForEvents sourceObj thisShip)

							(objSetObjRefData sourceObj (cat "Opponent" i) thisShip)

							(setq offset (add offset 1))
							)
						)

					(objSetData sourceObj "OpponentCount" shipCount)
					)
				))

			(setq bamDoorsClose (lambda (arenaObj)
				(block (
					(doorObj (sysGetObjectByName arenaObj "arenaDoor"))
					)
					
					(staSetImageVariant doorObj 20)
					(objSetProperty doorObj 'barrier True)
					(objSetProperty doorObj 'paintLayer 'overhang)
					)
				))

			(setq bamDoorsOpen (lambda (arenaObj)
				(block (
					(doorObj (sysGetObjectByName arenaObj "arenaDoor"))
					)
					
					(staSetImageVariant doorObj 21)
					(objSetProperty doorObj 'barrier Nil)
					(objSetProperty doorObj 'paintLayer Nil)
					)
				))
			)
	</Globals>

<!-- BASE CLASSES -->
	
	<Type unid="&baBattleArenaSegment;">
	</Type>

<!-- RESOURCES -->

	<Image UNID="&rsBattleArenaBkgnd;" bitmap="Resources\BattleArenaScreen.jpg" loadOnUse="true" />
	<Image UNID="&rsBattleArenaSegments;" bitmap="Resources\BattleArenaSegments.jpg" bitmask="Resources\BattleArenaSegmentsMask.bmp" hitMask="Resources\BattleArenaSegmentsHitMask.bmp" loadOnUse="true" />

</TranscendenceModule>
