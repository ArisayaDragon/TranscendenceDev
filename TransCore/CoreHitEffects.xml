<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>
	
<!-- DEFAULT HIT EFFECTS =======================================================

	These effects are used when a weapon hits a target. The variant value is
	the number of hit points of damage caused to the target (after adjusting for
	shields, armor, etc.)
	
	There is one effect for each damage type. Each of the effects has several 
	variants depending on the amount of damage done. The first variant is the
	effect to display when a weapon does no damage.
	
	A weapon may override these effects by provinding a specific <HitEffect>.
	
-->

	<EffectType unid="&efLaserHitDefault;"
			 sound="&snArmorHit1;"
			>
		<Effect>
			<Orb	style=			"flare"
					animate=		"fade"
					>
				<Events>
					<GetParameters>
						(block (
							(damageHP (@ gData 'damageHP))
							(weaponHP (@ gData 'averageDamageHP))
							(laserColor (coreCalcLaserColor weaponHP))
							)
							
							{
								radius: (if (= damageHP 0) 6 (mathScale damageHP 1 30 20 60 50))
								lifetime: (if (= damageHP 0) 4 (mathScale damageHP 1 30 8 16 50))
								intensity: (if (= damageHP 0) 0 (mathScale damageHP 1 30 25 50 50))
								primaryColor: (@ laserColor 'primaryColor)
								secondaryColor: (@ laserColor 'secondaryColor)
								
								noSound: (= damageHP 0)
								}
							)
					</GetParameters>
				</Events>
			</Orb>
		</Effect>
		
		<!--
		<Events>
			<GetParameters>
				(block (
					(damageHP (@ gData 'damageHP))
					(weaponHP (@ gData 'averageDamageHP))
					(laserColor (coreCalcLaserColor weaponHP))
					)
					
					{
						effects: (list {
							{
								sfx: "orb"
							
								style: "flare"
								animate: "fade"
							
								radius: (if (= damageHP 0) 6 (mathScale damageHP 1 30 20 60 50))
								lifetime: (if (= damageHP 0) 4 (mathScale damageHP 1 30 8 16 50))
								intensity: (if (= damageHP 0) 0 (mathScale damageHP 1 30 25 50 50))
								primaryColor: (@ laserColor 'primaryColor)
								secondaryColor: (@ laserColor 'secondaryColor)
								}
							)
							
						noSound: (= damageHP 0)
						}
					)
			</GetParameters>
		</Events>
		-->
	</EffectType>

	<EffectType UNID="&efKineticHitDefault;"
			 sound="&snArmorHit1;"
			>
		<Effect>
			<ParticleJet
					emitRate=			"20"
					emitSpeed=			"10-20"
					emitLifetime=		"5"
					particleLifetime=	"2-4"
					spreadAngle=		"30"
					lifetime=			"15"
					xformRotation=		"180"
					>
				<ParticleEffect>
					<Particle
							style=			"plain"
							minWidth=		"1"
							maxWidth=		"3"
							primaryColor=	"#fff4cc"
							secondaryColor=	"#667b80"
							/>
				</ParticleEffect>
				
				<Events>
					<GetParameters>
						(block (
							(damageHP (@ gData 'damageHP))
							(objHit (@ gData 'objHit))
							(scale (objGetProperty objHit 'scale))
							)
							
							;	No particle jet if there is no damage or if
							;	we've hit a world/star. Also, we don't skip 
							;	abandoned stations, since they create their own
							;	ejacta.
							
							(if (or (= damageHP 0)
									(= scale 'star)
									(= scale 'world)
									(objGetProperty objHit 'abandoned)
									)
								{
									emitRate: 0
									}
									
								{
									emitRate: (mathScale damageHP 1 30 10 60 50)
									}
								)
							)
					</GetParameters>
				</Events>
			</ParticleJet>

			<Orb	style=			"flare"
					animate=		"fade"
					primaryColor=	"#ccf7ff"
					secondaryColor=	"#667b80"
					>
				<Events>
					<GetParameters>
						(block (
							(damageHP (@ gData 'damageHP))
							)
							
							{
								radius: (if (= damageHP 0) 6 (mathScale damageHP 1 30 20 60 50))
								lifetime: (if (= damageHP 0) 4 (mathScale damageHP 1 30 8 16 50))
								intensity: (if (= damageHP 0) 0 (mathScale damageHP 1 30 25 50 50))
								}
							)
					</GetParameters>
				</Events>
			</Orb>
		</Effect>
				
		<Events>
			<GetParameters>
				(block (
					(damageHP (@ gData 'damageHP))
					)
							
					{
						noSound: (= damageHP 0)
						}
					)
			</GetParameters>
		</Events>
	</EffectType>

	<EffectType UNID="&efParticleHitDefault;"
			sound="&snArmorHit1;"
			>
		<Effect>
			<Orb	style=			"diffraction"
					animate=		"fade"
					intensity=		"50"
					primaryColor=	"#65ff2c"
					secondaryColor=	"#808417"
					>
				<Events>
					<GetParameters>
						(block (
							(damageHP (@ gData 'damageHP))
							)
							
							{
								radius: (if (= damageHP 0) 10 (mathScale damageHP 6 80 30 70 50))
								lifetime: (if (= damageHP 0) 4 (mathScale damageHP 6 80 12 48 50))
								
								noSound: (= damageHP 0)
								}
							)
					</GetParameters>
				</Events>
			</Orb>
		</Effect>
	</EffectType>
	
	<EffectType unid="&efBlastHitDefault;"
			sound="&snArmorHit1;"
			>
		<Effect>
			<Orb	style=			"fireblast"
					animate=		"explode"
					
					primaryColor=	"#ffcf00"
					secondaryColor=	"#d90000"
					>
				<Events>
					<GetParameters>
						(block (
							(damageHP (@ gData 'damageHP))
							(weaponUNID (@ gData 'weaponUNID))
							)
							
							{
								radius: (if (= damageHP 0) 10 (mathScale damageHP 6 80 30 70 50))
								lifetime: (if (= damageHP 0) 4 (mathScale damageHP 6 80 12 48 50))
								primaryColor: (resColorBlend "#ffcf00" "#ffa200" (seededRandom weaponUNID 0 255))
								
								intensity: (seededRandom weaponUNID 50 100)
								distortion: (mathScale damageHP 6 80 50 0 100)
								detail: (seededRandom weaponUNID 20 40)
								
								noSound: (= damageHP 0)
								}
							)
					</GetParameters>
				</Events>
			</Orb>
		</Effect>
	</EffectType>
	
	<EffectType UNID="&efIonHitDefault;"
			sound="&snArmorHit1;"
			>
		<Effect>
			<Orb	style=			"diffraction"
					animate=		"fade"
					intensity=		"50"
					primaryColor=	"#a0f0ff"
					secondaryColor=	"#00a9ff"
					>
				<Events>
					<GetParameters>
						(block (
							(damageHP (@ gData 'damageHP))
							)
							
							{
								radius: (if (= damageHP 0) 10 (mathScale damageHP 6 80 30 70 50))
								lifetime: (if (= damageHP 0) 4 (mathScale damageHP 6 80 12 48 50))
								}
							)
					</GetParameters>
				</Events>
			</Orb>
			
			<ParticleSystem
					style=			"radiate"
					emitSpeed=		"4-8"
					particleLifetime="8"
					>
				<ParticleEffect>
					<Particle
							style=			"plain"
							minWidth=		"1"
							maxWidth=		"3"
							primaryColor=	"#a0f0ff"
							secondaryColor=	"#00a9ff"
							/>
				</ParticleEffect>
				
				<Events>
					<GetParameters>
						(block (
							(damageHP (@ gData 'damageHP))
							)
							
							{
								lifetime: (if (= damageHP 0) 10 (mathScale damageHP 6 80 12 48 50))
								emitRate: (mathScale damageHP 6 80 50 200 50)
								emitLifetime: (if (= damageHP 0) 2 (mathScale damageHP 6 80 6 24 50))
								}
							)
					</GetParameters>
				</Events>
			</ParticleSystem>
		</Effect>
		
		<Events>
			<GetParameters>
				(block (
					(damageHP (@ gData 'damageHP))
					)
							
					{
						noSound: (= damageHP 0)
						}
					)
			</GetParameters>
		</Events>
	</EffectType>
	
	<EffectType unid="&efThermoHitDefault;"
			sound="&snArmorHit1;"
			>
		<Effect>
			<Orb	style=			"fireblast"
					animate=		"explode"
					
					primaryColor=	"#ffcf00"
					secondaryColor=	"#d90000"
					>
				<Events>
					<GetParameters>
						(block (
							(damageHP (@ gData 'damageHP))
							(weaponUNID (@ gData 'weaponUNID))
							)
							{
								radius: (if (= damageHP 0) 10 (mathScale damageHP 20 500 30 200 50))
								lifetime: (if (= damageHP 0) 4 (mathScale damageHP 20 500 24 60 50))
								primaryColor: (resColorBlend "#ffcf00" "#ffa200" (seededRandom weaponUNID 0 255))
								
								intensity: (seededRandom weaponUNID 50 100)
								distortion: (mathScale damageHP 20 500 20 0 100)
								detail: (seededRandom weaponUNID 30 60)
								}
							)
					</GetParameters>
				</Events>
			</Orb>
			
			<Orb	style=			"flare"
					animate=		"fade"
					primaryColor=	"#fffff0"
					secondaryColor=	"#fff2d4"
					>
				<Events>
					<GetParameters>
						(block (
							(damageHP (@ gData 'damageHP))
							)
							{
								radius: (if (= damageHP 0) 0 (mathScale damageHP 20 500 60 200 50))
								lifetime: (if (= damageHP 0) 4 (mathScale damageHP 20 500 8 16 50))
								intensity: (if (= damageHP 0) 0 (mathScale damageHP 20 500 25 50 50))
								}
							)
					</GetParameters>
				</Events>
			</Orb>
		</Effect>
		
		<Events>
			<GetParameters>
				(block (
					(damageHP (@ gData 'damageHP))
					)
					{
						noSound: (= damageHP 0)
						}
					)
			</GetParameters>
		</Events>
	</EffectType>
	
	<EffectType UNID="&efPositronHitDefault;"
			sound="&snArmorHit1;"
			>
		<Effect>
			<Orb	style=			"flare"
					animate=		"fade"
					intensity=		"50"
					primaryColor=	"#f9ffb3"
					secondaryColor=	"#806a00"
					>
				<Events>
					<GetParameters>
						(block (
							(damageHP (@ gData 'damageHP))
							)
							
							{
								radius: (if (= damageHP 0) 10 (mathScale damageHP 12 160 30 70 50))
								lifetime: (if (= damageHP 0) 4 (mathScale damageHP 12 160 12 48 50))
								}
							)
					</GetParameters>
				</Events>
			</Orb>
			
			<ParticleSystem
					style=			"radiate"
					emitSpeed=		"4-8"
					particleLifetime="8"
					>
				<ParticleEffect>
					<Particle
							style=			"plain"
							minWidth=		"1"
							maxWidth=		"3"
							primaryColor=	"#f9ffb3"
							secondaryColor=	"#806a00"
							/>
				</ParticleEffect>
				
				<Events>
					<GetParameters>
						(block (
							(damageHP (@ gData 'damageHP))
							)
							
							{
								lifetime: (if (= damageHP 0) 10 (mathScale damageHP 12 160 12 48 50))
								emitRate: (mathScale damageHP 12 160 50 200 50)
								emitLifetime: (if (= damageHP 0) 2 (mathScale damageHP 12 160 6 24 50))
								}
							)
					</GetParameters>
				</Events>
			</ParticleSystem>
		</Effect>
		
		<Events>
			<GetParameters>
				(block (
					(damageHP (@ gData 'damageHP))
					)
							
					{
						noSound: (= damageHP 0)
						}
					)
			</GetParameters>
		</Events>
	</EffectType>
	
	<Effect UNID="&efPlasmaHitDefault;">
		<Variants>
			<Effect maxValue="0">
				<ParticleCloud
						style=				"splash"
						lifetime=			"15"
						emitDuration=		"5"
						emitRate=			"10"
						emitSpeed=			"5-10"
						particleLifetime=	"10"
						>
					<ParticleEffect>
						<Particle
								style=			"plain"
								minWidth=		"1"
								maxWidth=		"3"
								primaryColor=	"0xff, 0xf0, 0xa0"
								secondaryColor=	"0xff, 0xa9, 0x00"
								/>
					</ParticleEffect>
				</ParticleCloud>
			</Effect>
			
			<Effect maxValue="23"
					sound="&snArmorHit1;">
					
				<ParticleCloud
						style=			"splash" 
						lifetime=		"30"
						emitDuration=	"5"
						emitRate=		"8-10"
						emitSpeed=		"1-6"
						particleLifetime="10-15"
						>
					<ParticleEffect>
						<Shape
								directional=		"true"
								scaleLength=		"12" 
								scaleWidth=			"4"

								scaleLengthInc=		"1" 

								color=				"0xff, 0xfd, 0xad"
								opacity=			"64"
								>
							<Point x="0"	y="0"/>
							<Point x="-5"	y="29"/>
							<Point x="-10"	y="44"/>
							<Point x="-20"	y="50"/>
							<Point x="-30"	y="47"/>
							<Point x="-40"	y="44"/>
							<Point x="-100"	y="0"/>
							<Point x="-40"	y="-44"/>
							<Point x="-30"	y="-47"/>
							<Point x="-20"	y="-50"/>
							<Point x="-10"	y="-44"/>
							<Point x="-5"	y="-29"/>
						</Shape>
					</ParticleEffect>
				</ParticleCloud>
				
				<Flare
						style=			"fadingBlast"
						radius=			"35"
						primaryColor=	"0xff, 0xff, 0xff"
						secondaryColor=	"0xff, 0xfd, 0xad"
						lifetime=		"6"
						/>
			</Effect>
			
			<Effect maxValue="46"
					sound="&snArmorHit1;">
					
				<ParticleCloud
						style=			"splash" 
						lifetime=		"30"
						emitDuration=	"6"
						emitRate=		"10-12"
						emitSpeed=		"1-6"
						particleLifetime="10-15"
						>
					<ParticleEffect>
						<Shape
								directional=		"true"
								scaleLength=		"16" 
								scaleWidth=			"4"

								scaleLengthInc=		"1"

								color=				"0xff, 0xfd, 0xad"
								opacity=			"64"
								>
							<Point x="0"	y="0"/>
							<Point x="-5"	y="29"/>
							<Point x="-10"	y="44"/>
							<Point x="-20"	y="50"/>
							<Point x="-30"	y="47"/>
							<Point x="-40"	y="44"/>
							<Point x="-100"	y="0"/>
							<Point x="-40"	y="-44"/>
							<Point x="-30"	y="-47"/>
							<Point x="-20"	y="-50"/>
							<Point x="-10"	y="-44"/>
							<Point x="-5"	y="-29"/>
						</Shape>
					</ParticleEffect>
				</ParticleCloud>
				
				<Flare
						style=			"fadingBlast"
						radius=			"50"
						primaryColor=	"0xff, 0xff, 0xff"
						secondaryColor=	"0xff, 0xfd, 0xad"
						lifetime=		"10"
						/>
			</Effect>
			
			<Effect
					sound="&snArmorHit1;">
					
				<ParticleCloud
						style=			"splash" 
						lifetime=		"40" 
						emitDuration=	"8"
						emitRate=		"18-20"
						emitSpeed=		"1-6"
						particleLifetime="10-15"
						>
					<ParticleEffect>
						<Shape
								directional=		"true"
								scaleLength=		"16" 
								scaleWidth=			"6"

								scaleLengthInc=		"1" 

								color=				"0xff, 0xfd, 0xad"
								opacity=			"64"
								>
							<Point x="0"	y="0"/>
							<Point x="-5"	y="29"/>
							<Point x="-10"	y="44"/>
							<Point x="-20"	y="50"/>
							<Point x="-30"	y="47"/>
							<Point x="-40"	y="44"/>
							<Point x="-100"	y="0"/>
							<Point x="-40"	y="-44"/>
							<Point x="-30"	y="-47"/>
							<Point x="-20"	y="-50"/>
							<Point x="-10"	y="-44"/>
							<Point x="-5"	y="-29"/>
						</Shape>
					</ParticleEffect>
				</ParticleCloud>
				
				<Flare
						style=			"fadingBlast"
						radius=			"80"
						primaryColor=	"0xff, 0xff, 0xff"
						secondaryColor=	"0xff, 0xfd, 0xad"
						lifetime=		"10"
						/>
			</Effect>
		</Variants>
	</Effect>
	
<!-- GLOBALS -->

	<Globals>
		(block Nil
			(setq coreCalcLaserColor (lambda (damageHP)
				(switch
					(geq damageHP 15)
						{
							primaryColor: "#D500FF"
							secondaryColor: "#6A00FF"
							}
							
					(geq damageHP 7)
						{
							primaryColor: "#55FF00"
							secondaryColor: "#2A8000"
							}

					(geq damageHP 4)
						{
							primaryColor: "#FF5500"
							secondaryColor: "#802A00"
							}

					{
						primaryColor: "#FF0000"
						secondaryColor: "#800000"
						}
					)
				))
			)
	</Globals>
	
</TranscendenceModule>
