<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

	<Type unid="&unidTradingComputer;">
		<Language>
			<Text id="descTradeRecommendationLocal">
				Trade computer: Sell to %objName% in this system for %localPrice%.
			</Text>
			<Text id="descTradeRecommendationOtherSystem">
				Trade computer: Sell in the %systemName% System for %otherSystemPrice%.
			</Text>
			<Text id="descTradeRecommendationBoth">
				Trade computer: Sell in the %systemName% System for %otherSystemPrice% or to %objName% in this system for %localPrice%.
			</Text>
			<Text id="descTradeData">
				Trade computer: %sellRecommendation% for %price%.
			</Text>
			<Text id="sellInSystem">
				Sell in the %systemName% System
			</Text>
			<Text id="sellToObj">
				Sell to %objName% in this system
			</Text>
		</Language>
	</Type>

<!-- CODE -->

	<Globals>
		(block Nil
			(setq rpgTradeComputerNodes (lambda ()
				(or
					(scrGetData gScreen 'rpg.tradeComputerNodes)
					(block (
						;	Make a list of all nodes that the trade computer checks. We 
						;	check all known nodes that are within 3 gates of the current
						;	node.

						(nodes
							(map (sysGetNodes) 'excludeNil theNode
								(block (dist)
									(if (and (sysIsKnown theNode)
											(!= theNode (sysGetNode))
											(setq dist (sysGetTopologyDistance (sysGetNode) theNode))
											(leq dist 3)
											)
										{
										nodeID: theNode
										distance: dist
										})
									)
								)
							)
						)

						;	Cache in screen data

						(scrSetData gScreen 'rpg.tradeComputerNodes nodes)

						;	Done

						nodes
						)
					)
				))

			(setq rpgItemTradeComputer (lambda (theItem priceToBeat priceToBeatCurrency)
				(switch
					;	If we don't have a trade computer, then nothing to do

					(!= (objGetEquipmentStatus gPlayerShip 'TradingComputer) 'ready)
						Nil

					;	If this is a damaged item, no recommendations

					(itmGetProperty theItem 'damaged)
						Nil

					;	If this item is unknown, then no recommendation

					(not (itmIsKnown theItem))
						Nil

					;	Make a recommendation

					(block (
						(itemCurrency (itmGetProperty theItem 'currency))
						(minPrice (ecoExchange (or priceToBeat 0) (or priceToBeatCurrency itemCurrency) itemCurrency))
						tempPrice

						(nodesToCheck (rpgTradeComputerNodes))

						(priceData
							(map nodesToCheck 'excludeNil theData 
								(if (gr (setq tempPrice (sysGetItemBuyPrice (@ theData 'nodeID) theItem)) minPrice) {
									nodeID: (@ theData 'nodeID)
									distance: (@ theData 'distance)
									price: tempPrice
									})
								)
							)
						(bestPriceToSellAt 
							(map priceData '(reduceMax excludeNil) theData 
								(@ theData 'price)
								)
							)
						(bestNodesToSellAt 
							(map priceData 'excludeNil theData 
								(if (= (@ theData 'price) bestPriceToSellAt) 
									theData
									)
								)
							)
						(nearestNodeToSellAt (@
							(map bestNodesToSellAt '(reduceMin original) theData
								(@ theData 'distance)
								)
							'nodeID
							))

						(knownObjs (sysFindObject gPlayerShip "sTAFV +property:known;"))
						(localPriceData
							(map knownObjs 'excludeNil theObj 
								(if (gr (setq tempPrice (objGetBuyPrice theObj theItem 'noDonations)) minPrice) {
									theObj: theObj
									price: tempPrice
									distance: (objGetDistance theObj gPlayerShip)
									})
								)
							)
						(localBestPriceToSellAt (map localPriceData 'reduceMax theData (@ theData 'price)))
						(localBestObjsToSellAt
							(filter localPriceData theData
								(= (@ theData 'price) localBestPriceToSellAt)
								)
							)
						(bestObjToSellAt (@
							(map localBestObjsToSellAt '(reduceMin original) theData
								(@ theData 'distance)
								)
							'theObj
							))
						(sellLocalCurrency (objGetProperty bestObjToSellAt 'currency))

						;	Sell recommendation

						(sellRecommendation
							(switch
								(and (gr localBestPriceToSellAt 0) (geq localBestPriceToSellAt bestPriceToSellAt))
									'sellToLocalStation

								(gr bestPriceToSellAt 0)
									'sellInOtherSystem
								)
							)

						(sellRecommendationText
							(switch
								(= sellRecommendation 'sellToLocalStation)
									(typTranslate &unidTradingComputer; 'sellToObj {
										objName:(objGetName bestObjToSellAt 0)
										})

								(= sellRecommendation 'sellInOtherSystem)
									(typTranslate &unidTradingComputer; 'sellInSystem {
										systemName:(sysGetName nearestNodeToSellAt)
										})
								)
							)

						(sellPrice
							(switch
								(= sellRecommendation 'sellToLocalStation)
									localBestPriceToSellAt

								(= sellRecommendation 'sellInOtherSystem)
									bestPriceToSellAt
								)
							)

						(sellCurrency
							(switch
								(= sellRecommendation 'sellToLocalStation)
									sellLocalCurrency

								(= sellRecommendation 'sellInOtherSystem)
									itemCurrency
								)
							)

						(sellPriceItemCurrency (ecoExchange sellPrice sellCurrency itemCurrency))
						(sellLocalPriceItemCurrency (ecoExchange bestPriceToSellAt sellLocalCurrency itemCurrency))
						)
						(switch
							(not sellRecommendation)
								Nil

							{
								sellBestSystem: nearestNodeToSellAt
								sellBestSystemPrice: bestPriceToSellAt

								sellLocalRecommendation:
									(typTranslate &unidTradingComputer; 'descTradeData {
										sellRecommendation: (typTranslate &unidTradingComputer; 'sellToObj {
											objName:(objGetName bestObjToSellAt 0)
											})
										price: 
											(if (= itemCurrency sellLocalCurrency)
												(fmtCurrency sellLocalCurrency localBestPriceToSellAt)
												(cat (fmtCurrency sellLocalCurrency localBestPriceToSellAt) " (" (fmtCurrency itemCurrency sellLocalPriceItemCurrency) ")")
												)
										})

								sellLocalObj: bestObjToSellAt
								sellLocalPrice: localBestPriceToSellAt
								sellLocalCurrency: sellLocalCurrency

								sellRecommendation:
									(typTranslate &unidTradingComputer; 'descTradeData {
										sellRecommendation: sellRecommendationText
										price: 
											(if (= itemCurrency sellCurrency)
												(fmtCurrency sellCurrency sellPrice)
												(cat (fmtCurrency sellCurrency sellPrice) " (" (fmtCurrency itemCurrency sellPriceItemCurrency) ")")
												)
										})

								sellPrice: sellPrice
								sellCurrency: sellCurrency
								}
							)
						)
					)
				))
			)		
	</Globals>
	
</TranscendenceModule>
