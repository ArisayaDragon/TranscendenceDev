<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

	<Type unid="&unidItemUnitTests;">
		<Events>
			<OnGlobalStartDiagnostics>
				(block (
					(testItem (itmCreate &itLaserCannon; 1))
					)
					;	Unit Tests for Functions

					(diagEval (list
						{	test:'(setq testItem1 (itmCreate &itLaserCannon; 1))			result:'ignore	}
						{	test:'(itmGetType testItem1)									result:&itLaserCannon;	}
						{	test:'(setq testItem2 (itmCreate &itLaserCannon; 1))			result:'ignore	}

						;	itmIsEqual -----------------------------------------

						{	test:'(itmIsEqual testItem1 testItem2)							result:True	}
						{	test:'(itmIsEqual testItem1
									(itmCreate &itLaserCannon; 10)
									)														result:True	}
						{	test:'(itmIsEqual testItem1
									(itmCreate &itBallistaCannon; 1)
									)														result:Nil	}
						{	test:'(itmIsEqual 
									(itmSetProperty testItem1 'damaged True)
									testItem2
									)														result:Nil	}
						{	test:'(itmIsEqual 
									(itmSetProperty testItem1 'charges 10)
									testItem2
									)														result:Nil	}
						{	test:'(itmIsEqual 
									(itmSetEnhanced testItem1 0x102)
									testItem2
									)														result:Nil	}
						{	test:'(itmIsEqual 
									(itmSetData testItem1 'test 10)
									testItem2
									)														result:Nil	}

						{	test:'(itmIsEqual 
									(itmSetProperty testItem1 'charges 10)
									testItem2
									'ignoreCharges
									)														result:True	}
						{	test:'(itmIsEqual 
									(itmSetProperty testItem1 'charges 10)
									testItem2
									'ignoreEnhancements
									)														result:Nil	}
						{	test:'(itmIsEqual 
									(itmSetEnhanced testItem1 0x102)
									testItem2
									'ignoreEnhancements
									)														result:True	}
						{	test:'(itmIsEqual 
									(itmSetEnhanced testItem1 0x102)
									testItem2
									'ignoreCharges
									)														result:Nil	}
						{	test:'(itmIsEqual 
									(itmSetEnhanced testItem1 0x102)
									testItem2
									'(ignoreCharges ignoreData ignoreEnhancements)
									)														result:True	}
						{	test:'(itmIsEqual 
									(itmSetData testItem1 'test 10)
									testItem2
									'ignoreData
									)														result:True	}
						{	test:'(itmIsEqual 
									(itmSetData testItem1 'test 10)
									testItem2
									'ignoreCharges
									)														result:Nil	}

						;	itmMatches -----------------------------------------

						{	test:'(itmMatches testItem1 "w")								result:True	}
						{	test:'(itmMatches testItem1 "*~s")								result:True	}
						{	test:'(itmMatches testItem1 "*~w")								result:Nil	}
						{	test:'(itmMatches testItem1 "w +energyWeapon;")					result:True	}
						{	test:'(itmMatches testItem1 "w -launcher;")						result:True	}
						{	test:'(itmMatches testItem1 "w =1;")							result:True	}
						{	test:'(itmMatches testItem1 "w L:1-4;")							result:True	}
						{	test:'(itmMatches testItem1 "w L:2-5;")							result:Nil	}
						{	test:'(itmMatches testItem1 "w +unid:&itLaserCannon;;")			result:True	}

						{	test:'(itmMatches testItem1 "w +property:omnidirectional;")		result:Nil	}
						{	test:'(itmMatches testItem1 "w +property:deviceSlots;")			result:True	}
						{	test:'(itmMatches testItem1 "w +property:deviceSlots=1;")		result:True	}
						{	test:'(itmMatches testItem1 "w +property:deviceSlots=2;")		result:Nil	}
						{	test:'(itmMatches testItem1 "w +property:deviceSlots&gt;1;")	result:Nil	}
						{	test:'(itmMatches testItem1 "w +property:deviceSlots&gt;=1;")	result:True	}
						{	test:'(itmMatches testItem1 "w +property:deviceSlots&lt;1;")	result:Nil	}
						{	test:'(itmMatches testItem1 "w +property:deviceSlots&lt;=1;")	result:True	}
						{	test:'(itmMatches testItem1 "w +property:deviceSlots!=1;")		result:Nil	}
						{	test:'(itmMatches testItem1 "w +property:deviceSlots!=3;")		result:True	}

						;	Test Scaled Armor ----------------------------------

						{	test:'(itmGetProperty 
									(itmSetProperty (itmCreate &itTestArmorScaled; 1) 'level 5)
									'level
									)														result:5	}
						{	test:'(itmGetProperty 
									(itmSetProperty (itmCreate &itTestArmorScaled; 1) 'level 5)
									'hp
									)														result:166	}
						{	test:'(itmGetProperty 
									(itmSetProperty (itmCreate &itTestArmorScaled; 1) 'level 5)
									'price
									)														result:4000	}
						{	test:'(itmGetProperty 
									(itmSetProperty (itmCreate &itTestArmorScaled; 1) 'level 5)
									'repairCost
									)														result:3	}
						{	test:'(itmGetProperty 
									(itmSetProperty (itmCreate &itTestArmorScaled; 1) 'level 5)
									'repairLevel
									)														result:5	}
						))
					)
			</OnGlobalStartDiagnostics>
		</Events>
	</Type>

</TranscendenceModule>
