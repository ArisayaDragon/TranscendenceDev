<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

<!-- EFFECT TYPES ========================================================= -->

	<Effect UNID="&efLargeExplosion1;">
		<Image imageID="&rsLargeExplosions;" 
				imageX="0" 
				imageY="0" 
				imageWidth="128" 
				imageHeight="128"
				imageFrameCount="16"
				imageTicksPerFrame="2"/>
	</Effect>

	<Effect UNID="&efMediumExplosion1;">
		<Image imageID="&rsMediumExplosions;" 
				imageX="0" 
				imageY="0" 
				imageWidth="64" 
				imageHeight="64"
				imageFrameCount="16"
				imageTicksPerFrame="2"/>
	</Effect>

	<Effect UNID="&efSmallExplosion1;"
			sound="&snArmorHit1;"
			>
		<Image imageID="&rsMediumHit;" 
				imageX="0" 
				imageY="0" 
				imageWidth="32" 
				imageHeight="32"
				imageFrameCount="12"
				imageTicksPerFrame="1"/>
	</Effect>

	<Effect UNID="&efBattleArenaWallHit;">
		<Image imageID="&rsShieldHit;" 
				imageX="0" 
				imageY="0" 
				imageWidth="32" 
				imageHeight="32"
				imageFrameCount="12"
				imageTicksPerFrame="1"/>
	</Effect>

	<Effect UNID="&efStationExplosion;">
		<Image imageID="&rsMediumHit;" 
				imageX="0" 
				imageY="0" 
				imageWidth="32" 
				imageHeight="32"
				imageFrameCount="12"
				imageTicksPerFrame="1"/>
	</Effect>

	<Effect UNID="&efNebula;">
		<Image imageID="&rsNebula;" 
				imageX="0" 
				imageY="0" 
				imageWidth="256" 
				imageHeight="256"
				imageVariants="4"/>
	</Effect>

	<Effect UNID="&efGemOfSacrifice;">
		<Starburst
				lifetime=		"40"
				spikeCount=		"1d6+2"
				spikeLength=	"4d80"
				primaryColor=	"0xde, 0xb7, 0xff"
				secondaryColor=	"0x89, 0x00, 0xff"
				/>
	</Effect>

<!-- RESOURCES ================================================================

	NOTE: For images that have a 1-bit mask, we specify the backColor attribute
	to apply the mask to the in-memory image. This saves us from having to carry
	around the mask. Images that use an 8-bit mask should not use this technique

	Naming conventions

	A		Animation (default 16 frames)
	A{n}	Animation of n frames (e.g., "A20")
	B{n}	Bitmap (black = trans) of size n x n (e.g., "B32")
	D		Directional (default 20 frames)
	D{n}	Directional with n directions (e.g., "D40")
	G{n}	Alpha blended image of size n x n (e.g., "G128")

-->
	<Image UNID="&rsZubrinLRS;"			bitmap="Resources\LargeHUD.jpg"		/>
	<Image UNID="&rsZubrinLRSBorder;"	bitmask="Resources\LRSBorderMask.bmp"/>
	<Image UNID="&rsZubrinTargeting;"	bitmap="Resources\WeaponsHUD.bmp"		/>
	<Image UNID="&rsZubrinDockScreenBkgnd;"	bitmap="Resources\DockScreenBackground.bmp"/>
	<Image UNID="&rsZubrinDockScreenMask;"	bitmask="Resources\DockScreenMask.bmp"/>

	<Image UNID="&rsSRSSnow;"			bitmap="Resources\ScreenSnow.jpg"/>

	<Image UNID="&rsEndGameEscaped;"	bitmap="Resources\GameOverEscape.jpg"			loadOnUse="true" />
	<Image UNID="&rsEndGameDestroyed;"	bitmap="Resources\GameOver.jpg"				loadOnUse="true" />

	<Image UNID="&rsShipInterior;"		bitmap="Resources\ShipInterior.jpg"			loadOnUse="true" />
	<Image UNID="&rsItemListScreen;"	bitmap="Resources\ItemListScreen.jpg"		bitmask="Resources\ItemListScreenMask.bmp"		loadOnUse="true" />

	<Image UNID="&rsSmallShips1;"	bitmap="Resources\SmallShips1.jpg"	bitmask="Resources\SmallShips1Mask.bmp" />
	<Image UNID="&rsMediumShips1;"	bitmap="Resources\MediumShips1.jpg"	bitmask="Resources\MediumShips1Mask.bmp" />
	<Image UNID="&rsMediumShips2;"	bitmap="Resources\MediumShips2.jpg"	bitmask="Resources\MediumShips2Mask.bmp" />
	<Image UNID="&rsMediumShips3;"	bitmap="Resources\MediumShips3.jpg"	bitmask="Resources\MediumShips3Mask.bmp" />
	<Image UNID="&rsMediumShips4;"	bitmap="Resources\MediumShips4.jpg"	bitmask="Resources\MediumShips4Mask.bmp" />
	<Image UNID="&rsLargeShips1;"	bitmap="Resources\LargeShips1.jpg"	bitmask="Resources\LargeShips1Mask.bmp" />
	<Image UNID="&rsLargeShips2;"	bitmap="Resources\LargeShips2.jpg"	bitmask="Resources\LargeShips2Mask.bmp" />
	<Image UNID="&rsEI100Image;"		bitmap="Resources\EI100.jpg" bitmask="Resources\EI100Mask.bmp" loadOnUse="true"/>

	<Image UNID="&rsExplosion3AG128;"	bitmap="Resources\Explosion-3-AG128.jpg"	bitmask="Resources\Explosion-3-AG128Mask.bmp" loadOnUse="true"/>
	<Image UNID="&rsExplosionsA20G192;"	bitmap="Resources\Explosions-A20G192.jpg"	bitmask="Resources\Explosions-A20G192Mask.bmp" loadOnUse="true"/>
	<Image UNID="&rsExplosion2A20G192;"	bitmap="Resources\Explosion-2-A20G192.jpg"	bitmask="Resources\Explosion-2-A20G192Mask.bmp" loadOnUse="true"/>
	<Image UNID="&rsExplosionsA20G256;"	bitmap="Resources\Explosions-A20G256.jpg"	bitmask="Resources\Explosions-A20G256Mask.bmp" loadOnUse="true"/>
	<Image UNID="&rsLargeExplosions;" bitmap="Resources\LargeExplosions.jpg" bitmask="Resources\LargeExplosionsMask.bmp" loadOnUse="true"/>
	<Image UNID="&rsMediumDamage;"	bitmap="Resources\MediumDamage.jpg"	bitmask="Resources\MediumDamageMask.bmp"/>
	<Image UNID="&rsLargeDamage;"	bitmap="Resources\LargeDamage.jpg"	bitmask="Resources\LargeDamageMask.bmp"/>

	<Image UNID="&rsStations1;"		bitmap="Resources\Stations1.jpg"		bitmask="Resources\Stations1Mask.bmp"  />
	<Image UNID="&rsStations2;"		bitmap="Resources\Stations2.jpg"		bitmask="Resources\Stations2Mask.bmp"  />
	<Image UNID="&rsStations3;"		bitmap="Resources\Stations3.jpg"		bitmask="Resources\Stations3Mask.bmp"  />
	<Image UNID="&rsStations4;"		bitmap="Resources\Stations4.jpg"		bitmask="Resources\Stations4Mask.bmp"  />
	<Image UNID="&rsStations5;"		bitmap="Resources\Stations5.jpg"		bitmask="Resources\Stations5Mask.bmp"  />
	<Image UNID="&rsStations6;"		bitmap="Resources\Stations6.jpg"		bitmask="Resources\Stations6Mask.bmp"  />
	<Image UNID="&rsStations7;"		bitmap="Resources\Stations7.jpg"		bitmask="Resources\Stations7Mask.bmp"  />
	<Image UNID="&rsStations8;"		bitmap="Resources\Stations8.jpg"		bitmask="Resources\Stations8Mask.bmp"  />
	<Image UNID="&rsStations9;"		bitmap="Resources\Stations9.jpg"		bitmask="Resources\Stations9Mask.bmp"  />

	<Image UNID="&rsStargate;"		bitmap="Resources\Stargates1.jpg"		bitmask="Resources\Stargates1Mask.bmp"  />
	<Image UNID="&rsNavBeacon;"		bitmap="Resources\NavBeacon.jpg"		bitmask="Resources\NavBeaconMask.bmp" NoPM="true"/>
	<Image UNID="&rsBarricades;"	bitmap="Resources\Barricades.jpg"		bitmask="Resources\BarricadesMask.bmp" />
	<Image UNID="&rsLogBuoy;"		bitmap="Resources\LogBuoy.jpg"		bitmask="Resources\LogBuoyMask.bmp"  loadOnUse="true"/>

	<Image UNID="&rsShockwave1;"	bitmap="Resources\Shockwave1.jpg"		bitmask="Resources\Shockwave1Mask.bmp" loadOnUse="true"/>
	<Image UNID="&rsShockwave2;"	bitmap="Resources\Shockwave2.jpg"		bitmask="Resources\Shockwave2Mask.bmp" loadOnUse="true"/>
	<Image UNID="&rsShockwave3;"	bitmap="Resources\Shockwave3.jpg"		bitmask="Resources\Shockwave3Mask.bmp" loadOnUse="true"/>

	<Image UNID="&rsNebulaEnv;"		bitmap="Resources\Nebula.jpg"			bitmask="Resources\NebulaMask.bmp"	 sprite="true"/>
	<Image UNID="&rsNebula;"		bitmap="Resources\NebulaHighlights.jpg"	bitmask="Resources\NebulaHighlightsMask.bmp"/>

	<Sound UNID="&snShipExplosion1;"		filename="Resources\ShipExplosion1.wav"/>
	<Sound UNID="&snStationExplosion1;"		filename="Resources\StationExplosion1.wav"/>
	<Sound UNID="&snShieldHit1;"			filename="Resources\ShieldHit1.wav"/>
	<Sound UNID="&snMissileLauncher;"		filename="Resources\MissileLaunch1.wav"/>

<!-- ITEM TABLES ==============================================================

	Item Table Attributes

	<RandomItem>

	categories:
			*	all categories
			a	armor
			d	device (weapon, shield, drive, etc.)
			f	fuel
			l	launcher weapon only
			m	missile
			r	reactor
			s	shields
			t	miscellaneous
			u	useful (armor coating, ROM, etc.)
			v	drive
			w	weapon (including launchers)
			I	is installed
			D	is damaged
			N	is not damaged
			S	is useable
			U	is not installed

	modifiers:
			+	must have this modifier
			-	must not have this modifier

-->

	<ItemTable UNID="&trConsumables1;">
		<RandomItem
				criteria=			"fmut +Consumable; -Illegal; -Military"
				level=				"1"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trConsumables2;">
		<RandomItem
				criteria=			"fmut +Consumable; -Illegal; -Military"
				level=				"2"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trConsumables3;">
		<RandomItem
				criteria=			"fmut +Consumable; -Illegal; -Military"
				level=				"3"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trConsumables4;">
		<RandomItem
				criteria=			"fmut +Consumable; -Illegal; -Military"
				level=				"4"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trConsumables5;">
		<RandomItem
				criteria=			"fmut +Consumable; -Illegal; -Military"
				level=				"5"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trConsumables6;">
		<RandomItem
				criteria=			"fmut +Consumable; -Illegal;"
				level=				"6"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trConsumables7;">
		<RandomItem
				criteria=			"fmut +Consumable; -Illegal;"
				level=				"7"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trConsumables8;">
		<RandomItem
				criteria=			"fmut +Consumable; -Illegal;"
				level=				"8"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trConsumables9;">
		<RandomItem
				criteria=			"fmut +Consumable; -Illegal;"
				level=				"9"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trConsumables10;">
		<RandomItem
				criteria=			"fmut +Consumable; -Illegal;"
				level=				"10"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMajorItem1;">
		<RandomItem
				criteria=			"wsd +MajorItem; -Illegal; -Military"
				level=				"1"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMajorItem2;">
		<RandomItem
				criteria=			"wsd +MajorItem; -Illegal; -Military"
				level=				"2"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMajorItem3;">
		<RandomItem
				criteria=			"wsd +MajorItem; -Illegal; -Military"
				level=				"3"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMajorItem4;">
		<RandomItem
				criteria=			"wsd +MajorItem; -Illegal; -Military"
				level=				"4"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMajorItem5;">
		<RandomItem
				criteria=			"wsd +MajorItem; -Illegal; -Military"
				level=				"5"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMajorItem6;">
		<RandomItem
				criteria=			"wsd +MajorItem; -Illegal; -Military"
				level=				"6"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMajorItem7;">
		<RandomItem
				criteria=			"wsd +MajorItem; -Illegal;"
				level=				"7"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMajorItem8;">
		<RandomItem
				criteria=			"wsd +MajorItem; -Illegal;"
				level=				"8"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMajorItem9;">
		<RandomItem
				criteria=			"wsd +MajorItem; -Illegal;"
				level=				"9"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMajorItem10;">
		<RandomItem
				criteria=			"wsd +MajorItem; -Illegal;"
				level=				"10"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMinorItem1;">
		<RandomItem
				criteria=			"afmut +MinorItem; -Illegal; -Military"
				level=				"1"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMinorItem2;">
		<RandomItem
				criteria=			"afmut +MinorItem; -Illegal; -Military"
				level=				"2"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMinorItem3;">
		<RandomItem
				criteria=			"afmut +MinorItem; -Illegal; -Military"
				level=				"3"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMinorItem4;">
		<RandomItem
				criteria=			"afmut +MinorItem; -Illegal; -Military"
				level=				"4"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMinorItem5;">
		<RandomItem
				criteria=			"afmut +MinorItem; -Illegal; -Military"
				level=				"5"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMinorItem6;">
		<RandomItem
				criteria=			"afmut +MinorItem; -Illegal;"
				level=				"6"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMinorItem7;">
		<RandomItem
				criteria=			"afmut +MinorItem; -Illegal;"
				level=				"7"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMinorItem8;">
		<RandomItem
				criteria=			"afmut +MinorItem; -Illegal;"
				level=				"8"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMinorItem9;">
		<RandomItem
				criteria=			"afmut +MinorItem; -Illegal;"
				level=				"9"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMinorItem10;">
		<RandomItem
				criteria=			"afmut +MinorItem; -Illegal;"
				level=				"10"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trStationSupplies;">
		<Table>
			<Item chance="15" count="1d6"	item="&itHelium3FuelRod;" />
			<Item chance="25" count="1d8"	item="&itFrozenSupplies;" />
			<Item chance="20" count="1d8"	item="&itHydrocarbons;" />
			<Item chance="30" count="1d12"	item="&itWaterIce;" />
			<Item chance="10" count="1d6"	item="&itMedicalSupplies;" />
		</Table>
	</ItemTable>

	<!-- LEVEL I-II -->

	<ItemTable UNID="&trUsefulItems1;">
		<Table>
			<RandomItem chance="50"
					criteria=		"fmu -Illegal; -Military; -Alien"
					level=			"1"
					levelCurve=		"2"
					/>
			<RandomItem chance="50"
					criteria=		"fmu -Illegal; -Military; -Alien"
					level=			"2"
					levelCurve=		"2"
					/>
		</Table>
	</ItemTable>

	<ItemTable UNID="&trMiscItems1;">
		<Table>
			<RandomItem chance="50"
					criteria=		"t -Illegal; -Military; -Alien"
					level=			"1"
					levelCurve=		"2"
					/>
			<RandomItem chance="50"
					criteria=		"t -Illegal; -Military; -Alien"
					level=			"2"
					levelCurve=		"2"
					/>
		</Table>
	</ItemTable>

	<!-- LEVEL III-IV -->

	<ItemTable UNID="&trMiscItems2;">
		<Table>
			<RandomItem chance="50"
					criteria=		"t -Illegal; -Military; -Alien"
					level=			"3"
					levelCurve=		"2"
					/>
			<RandomItem chance="50"
					criteria=		"t -Illegal; -Military; -Alien"
					level=			"4"
					levelCurve=		"2"
					/>
		</Table>
	</ItemTable>

	<ItemTable UNID="&trUsefulItems2;">
		<Table>
			<RandomItem chance="50"
					criteria=		"fmu -Illegal; -Military; -Alien"
					level=			"3"
					levelCurve=		"2"
					/>
			<RandomItem chance="50"
					criteria=		"fmu -Illegal; -Military; -Alien"
					level=			"4"
					levelCurve=		"2"
					/>
		</Table>
	</ItemTable>

	<!-- LEVEL V-VI -->

	<ItemTable UNID="&trMiscItems3;">
		<Table>
			<RandomItem chance="50"
					criteria=		"t -Illegal; -Military; -Alien"
					level=			"5"
					levelCurve=		"2"
					/>
			<RandomItem chance="50"
					criteria=		"t -Illegal; -Military; -Alien"
					level=			"6"
					levelCurve=		"2"
					/>
		</Table>
	</ItemTable>

	<ItemTable UNID="&trHaloGems;">
		<RandomItem 
				criteria=			"* +HaloGem;"
				level=				"7"
				levelCurve=			"1"
				/>
	</ItemTable>

	<!-- Cargo Container Items -->

	<ItemTable UNID="&trCargoContainer;">
		<Table>
			<Item chance="10" count="6d6"	item="&itHelium3FuelRod;" />
			<Item chance="10" count="3d6"	item="&itSiliconArmorPatch;" />
			<Item chance="5" count="3d6"	item="&itOrganicAcid;" />
			<Item chance="10" count="3d12"	item="&itTitaniumOre;" />
			<Item chance="10" count="2d12"	item="&itDuralloyOre;" />
			<Item chance="10" count="3d12"	item="&itHydrocarbons;" />
			<Item chance="10" count="1d12"	item="&itPteracniumOre;" />
			<Group chance="5">
				<Item count="3d6"	item="&itKM100Missile;" />
				<Item count="2d6"	item="&itKM500Missile;" />
			</Group>
			<Group chance="15">
				<Lookup count="1d4" table="&trMiscItems1;"/>
				<Lookup count="1" table="&trUsefulItems1;"/>
			</Group>
			<Lookup chance="10" count="1d6" table="&trMiscItems1;"/>
			<Lookup chance="5" count="1d6" table="&trMiscItems2;"/>
		</Table>
	</ItemTable>

	<!-- Illegal items -->

	<ItemTable UNID="&trIllegalItems1;">
		<RandomItem
				criteria=			"* +Illegal"
				level=				"1"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trIllegalItems2;">
		<RandomItem
				criteria=			"* +Illegal"
				level=				"2"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trIllegalItems3;">
		<RandomItem
				criteria=			"* +Illegal"
				level=				"3"
				levelCurve=			"2"
				/>
	</ItemTable>

	<!-- Military items -->

	<ItemTable UNID="&trMilitaryItem4;">
		<RandomItem	
				criteria=			"* +Military"	
				level=				"4"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMilitaryItem5;">
		<RandomItem	
				criteria=			"* +Military"	
				level=				"5"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMilitaryItem6;">
		<RandomItem	
				criteria=			"* +Military"	
				level=				"6"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMilitaryItem7;">
		<RandomItem	
				criteria=			"* +Military"	
				level=				"7"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMilitaryItem8;">
		<RandomItem	
				criteria=			"* +Military"	
				level=				"8"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMilitaryItem9;">
		<RandomItem	
				criteria=			"* +Military"	
				level=				"9"
				levelCurve=			"2"
				/>
	</ItemTable>

	<ItemTable UNID="&trMilitaryItem10;">
		<RandomItem	
				criteria=			"* +Military"	
				level=				"10"
				levelCurve=			"2"
				/>
	</ItemTable>

	<!-- Miscellaneous -->

	<ItemTable UNID="&trMedicalItem;">
		<RandomItem
				criteria=			"* +Meds"
				level=				"5"
				levelCurve=			"4"
				/>
	</ItemTable>

<!-- ITEM TYPES ===============================================================

	MODIFIERS

	Alien						Item is not found in Human Space
	AntiMatter					Item is involved in AntiMatter industry
	Auton						Item is an auton
	BlackMarketID				This is a black market ID
	Bushido						Item is sold by Bushido corp
	Food						Item is human food or drink
	Fuel						Item is starship fuel
	HaloGem						Item is a halo gem
	ID							Item is an ID
	Illegal						Item is illegal in Human Space
	Info						Item consists of digital information
	Lux							Item is human luxury good
	Makayev						Item is sold by Makayev corp
	Meds						Item is human medicine
	Military					Item is restricted to military in Human Space
	MilitaryID					Item is a military ID
	Missile						Item is ammo or missile
	Nuclear						Item is involved in nuclear industry
	Rasiermesser				Item is sold by Rasiermesser corp
	Res							Item is a resource needed for industry
	RingerValuable				Item is used by Ringers
	Soul						Item contains (possibly dormant) intelligence of HIG III or above
	Specialty					Item is not a commodity; for sale only in specific stations
	ZeroPoint					Item is used in Zero-point energy industry

	Consumable					Item is consumable (missiles/ammo/treasure)
	MajorItem					Device/Shield/Weapon
	MinorItem					Armor/Enhancements

	DAMAGE TYPES

	laser
	kinetic
	particle
	blast
	ion
	thermo
	positron
	plasma
	antimatter
	nano
	graviton
	singularity
	dark acid
	dark steel
	dark lightning
	dark fire

	USE KEYS

	5							Luminous 5scare
	A							autons
	C							gem of contrition
	F							gem of sacrifice
	J							transpace jumpdrive
	L							superconducting coils
	S							Scramble1.4

	COMMON USE PHRASES

	Ship already has a(n) xyz
	xyz installed
	xyz uninstalled
	Ship cannot support xyz
	xyz required
	xyz: blah blah
	Not enough fuel to xyz

-->

	<!-- Military ID -->

	<ItemType UNID="&itMilitaryID;"
			name=				"Commonwealth military identification chip"
			level=				"4"
			value=				"500"
			mass=				"1"
			frequency=			"veryrare"
			unknownType=		"&itUnknownID;"
			attributes=			"MilitaryID; ID; MinorItem"

			description=		"This identification chip is used by the Commonwealth military to identify authorized military personnel."

			sortName=			"identification chip, military"
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="96" imageWidth="96" imageHeight="96"/>
	</ItemType>

	<!-- Scramble Algorithm -->

	<ItemType UNID="&itScrambleAlgorithm;"
			name=				"Scramble1.5 algorithm cube"
			level=				"6"
			value=				"1000"
			mass=				"50"
			frequency=			"uncommon"
			unknownType=		"&itUnknownMnemonicCube;"
			attributes=			"Consumable; Info"

			description=		"This algorithm hacks into near-by enemy ship computers and temporarily disable their control systems. Scramble1.5 requires a quantum CPU to execute."
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="288" imageWidth="96" imageHeight="96"/>

		<Invoke key="S">
			(switch
				; If we don't have a quantum CPU
				(not (objGetItems gSource "*I+QuantumCPU"))
					(objSendMessage gSource Nil "Quantum CPU required")

				; Otherwise, we paralyze enemy ships in the area
				(block (targets)
					(setq targets (sysFindObject gSource "sEN:16;"))
					(enum targets target
						(objProgramDamage target gSource "Scramble1.5" 6
							(objMakeParalyzed target (random 600 1200))
							)
						)
					(if targets
						(objSendMessage gSource Nil "Scramble1.5: Targets disabled")
						(objSendMessage gSource Nil "Scramble1.5: No targets in range")
						)

					(itmSetKnown gItem)
					(objRemoveItem gSource gItem 1)
					)
				)
		</Invoke>
	</ItemType>

	<!-- Shield Optimizer Cube -->

	<ItemType UNID="&itShieldOptimizer;"
			name=				"ShieldPower v3.1.8 algorithm cube"
			level=				"5"
			value=				"1000"
			mass=				"50"
			frequency=			"uncommon"
			unknownType=		"&itUnknownMnemonicCube;"
			attributes=			"Info; MinorItem"

			description=		"This algorithm enhances shield generators of technology levels IV through IX."
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="288" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(switch
				; If we don't have a quantum CPU
				(not (objGetItems gSource "*I+QuantumCPU"))
					(objSendMessage gSource Nil "Quantum CPU required")

				; Enhance shield generator
				(block (notFound)
					; Install
					(setq notFound True)
					(objEnumItems gSource "sI" theItem
						(block (shieldItem)
							(setq shieldItem theItem)
							(if notFound
								(block Nil
									(switch
										; If the shield generator is not advanced enough, then nothing happens
										(ls (itmGetLevel shieldItem) 4)
											(objSendMessage gSource Nil "Shield generator is too primitive for ShieldPower algorithm")

										; If the shield generator is too advanced, then nothing happens
										(gr (itmGetLevel shieldItem) 9)
											(objSendMessage gSource Nil "Shield generator is too advanced for ShieldPower algorithm")

										; If the item is damaged, we repair it
										(itmIsDamaged shieldItem)
											(block Nil
												(shpRepairItem gSource theItem)
												(objSendMessage gSource Nil "Shield generator has been repaired")
												)

										; Enhance the shield generator
										(block (result)
											(setq result (shpEnhanceItem gSource theItem 0x0102))
											(objSendMessage gSource Nil (intItemEnhanceStatus result "Your shields are more powerful" "shield generator"))
											)
										)
									(setq notFound Nil)
									)
								)
							)
						)

					(if notFound
						(objSendMessage gSource Nil "Shield generator required")
						)

					; Identify the item
					(itmSetKnown gItem)

					; Remove ROM
					(objRemoveItem gSource gItem 1)
					)
				)
		</Invoke>
	</ItemType>

	<!-- Shield Power Saver Cube -->

	<ItemType UNID="&itShieldPowerSaver;"
			name=				"ShieldEfficiency v1.2.5 algorithm cube"
			level=				"6"
			value=				"1500"
			mass=				"50"
			frequency=			"uncommon"
			unknownType=		"&itUnknownMnemonicCube;"
			attributes=			"Info; MinorItem"

			description=		"This algorithm increase the efficiency of shield generators of technology levels IV through IX."
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="288" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(switch
				; If we don't have a quantum CPU
				(not (objGetItems gSource "*I+QuantumCPU"))
					(objSendMessage gSource Nil "Quantum CPU required")

				; Enhance shield generator
				(block (notFound)
					; Install
					(setq notFound True)
					(objEnumItems gSource "sI" theItem
						(block (shieldItem)
							(setq shieldItem theItem)
							(if notFound
								(block Nil
									(switch
										; If the shield generator is not advanced enough, then nothing happens
										(ls (itmGetLevel shieldItem) 4)
											(objSendMessage gSource Nil "Shield generator is too primitive for ShieldEfficiency algorithm")

										; If the shield generator is too advanced, then nothing happens
										(gr (itmGetLevel shieldItem) 9)
											(objSendMessage gSource Nil "Shield generator is too advanced for ShieldEfficiency algorithm")

										; If the item is damaged, we repair it
										(itmIsDamaged shieldItem)
											(block Nil
												(shpRepairItem gSource theItem)
												(objSendMessage gSource Nil "Shield generator has been repaired")
												)

										; Enhance the shield generator
										(block (result)
											(setq result (shpEnhanceItem gSource theItem 0x0f02))
											(objSendMessage gSource Nil (intItemEnhanceStatus result "Your shields are more efficient" "shield generator"))
											)
										)
									(setq notFound Nil)
									)
								)
							)
						)

					(if notFound
						(objSendMessage gSource Nil "Shield generator required")
						)

					; Identify the item
					(itmSetKnown gItem)

					; Remove ROM
					(objRemoveItem gSource gItem 1)
					)
				)
		</Invoke>
	</ItemType>

	<!-- Defective Shield Optimizer Cube -->

	<ItemType UNID="&itDefectiveShieldOptimizer;"
			name=				"ShieldPower v1.0 algorithm cube"
			level=				"5"
			value=				"5"
			mass=				"50"
			frequency=			"rare"
			unknownType=		"&itUnknownMnemonicCube;"
			attributes=			"Info; MinorItem"

			description=		"The first version of the ShieldPower algorithm is promising but contains significant bugs."
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="288" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(switch
				; If we don't have a quantum CPU
				(not (objGetItems gSource "*I+QuantumCPU"))
					(objSendMessage gSource Nil "Quantum CPU required")

				; Enhance shield generator
				(block (notFound)
					; Install
					(setq notFound True)
					(objEnumItems gPlayerShip "sI" theItem
						(block (shieldItem)
							(setq shieldItem theItem)
							(if notFound
								(block Nil
									(switch
										; If the shield generator is not advanced enough, then nothing happens
										(ls (itmGetLevel shieldItem) 4)
											(objSendMessage gSource Nil "Shield generator is too primitive for ShieldPower algorithm")

										; If the shield generator is too advanced, then nothing happens
										(gr (itmGetLevel shieldItem) 9)
											(objSendMessage gSource Nil "Shield generator is too advanced for ShieldPower algorithm")

										; If the item is damaged, we cannot do anything
										(itmIsDamaged shieldItem)
											(objSendMessage gSource Nil "Shield generator is too damaged for optimization")

										; 10% chance of enhancing the shield generator (otherwise, a bug)
										(if (leq (random 1 100) 10)
											(block (result)
												(setq result (shpEnhanceItem gSource theItem 0x0102))
												(objSendMessage gSource Nil (intItemEnhanceStatus result "Your shields are more powerful" "shield generator"))
												)
											(block (result)
												(setq result (shpEnhanceItem gSource theItem 0x8102))
												(objSendMessage gSource Nil (intItemEnhanceStatus result "ShieldPower: qbit indeterminacy exception [#!800A410!]" "shield generator"))
												)
											)
										)
									(setq notFound Nil)
									)
								)
							)
						)

					(if notFound
						(objSendMessage gSource Nil "Shield generator required")
						)

					; Identify the item
					(itmSetKnown gItem)

					; Remove ROM
					(objRemoveItem gSource gItem 1)
					)
				)
		</Invoke>
	</ItemType>

	<!-- Segment of Reinforced Titanium Plate 1 -->

	<ItemType UNID="&itReinforcedTitanium1;"
			name=				"titanium barricade"
			level=				"2"
			value=				"200"
			frequency=			"uncommon"
			numberAppearing=	"1d4"
			mass=				"5000"
			attributes=			"MinorItem; Specialty; Barricade"

			description=		"These reinforced titanium plates are used in station construction both as bulkheads and as exterior armor."

			sortName=			"titanium barricade.30"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="480" imageWidth="96" imageHeight="96"/>

		<Armor
				hitPoints=	"100"

				repairTech=	"1"
				damageAdjLevel="2"
				/>

		<Invoke uninstalledOnly="true">
			(intBarricadeUse &stBarricade1;)
		</Invoke>

	</ItemType>

	<!-- Segment of Reinforced Titanium Plate 2 -->

	<ItemType UNID="&itReinforcedTitanium2;"
			name=				"double titanium barricade"
			level=				"3"
			value=				"500"
			frequency=			"uncommon"
			numberAppearing=	"1d4"
			mass=				"10000"
			attributes=			"MinorItem; Specialty; Barricade"

			description=		"These reinforced titanium plates are used in station construction both as bulkheads and as exterior armor."

			sortName=			"titanium barricade.20"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="480" imageWidth="96" imageHeight="96"/>

		<Armor
				hitPoints=	"200"

				repairTech=	"1"
				damageAdjLevel="2"
				/>

		<Invoke uninstalledOnly="true">
			(intBarricadeUse &stBarricade2;)
		</Invoke>

	</ItemType>

	<!-- Segment of Reinforced Titanium Plate 3 -->

	<ItemType UNID="&itReinforcedTitanium3;"
			name=				"quad titanium barricade"
			level=				"4"
			value=				"1000"
			frequency=			"uncommon"
			numberAppearing=	"1d4"
			mass=				"20000"
			attributes=			"MinorItem; Specialty; Barricade"

			description=		"These reinforced titanium plates are used in station construction both as bulkheads and as exterior armor."

			sortName=			"titanium barricade.10"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="480" imageWidth="96" imageHeight="96"/>

		<Armor
				hitPoints=	"400"

				repairTech=	"1"
				damageAdjLevel="2"
				/>

		<Invoke uninstalledOnly="true">
			(intBarricadeUse &stBarricade3;)
		</Invoke>

	</ItemType>

<!-- BEHAVIORS AND BASE CLASSES =========================================== -->

	<!-- Convoy Behavior
	
		USAGE NOTES
		
		This simulates the behavior of a freighter convoy escorted by
		defenders.
		
		EXTRA DATA
		
		behavior:			Ship's current behavior
								'avoidingEnemy			= We're trying to run away
								'onCourse				= Ship on straight course
	-->

	<ShipClass UNID="&evStdConvoyEncounterBehavior;"
			class=				"(convoy encounter behavior)"
			virtual=			"true"
			
			attributes=			"behaviorClass"
			>
			
		<Events>
			<GetCreatePos>
				(if aTargetObj
					(intComputeRandomEncounterPos aTargetObj)
					)
			</GetCreatePos>

			<OnBehavior>
				(block (behavior)
					(setq behavior (objGetData gSource "00003015_behavior"))
					(switch
						; If we see any enemy ships then run away
						(eq behavior 'onCourse)
							(block (theEnemy)
								(if (setq theEnemy (sysFindObject gSource "sEPAN"))
									(block (shelterObj gateObj)
										(shpCancelOrders gSource)
										
										(setq gateObj (sysFindObject gSource "GN -uncharted;"))
										(setq shelterObj (sysFindObject gSource "TFAN +populated;"))
										
										; If there's shelter nearby, go to it
										(if (and shelterObj
												(ls (objGetDistance gSource shelterObj) (objGetDistance gSource gateObj))
												)
											(block Nil
												(shpOrder gSource 'dock shelterObj)
												(shpOrder gSource 'wait (random 10 40))
												)
											)
											
										; Gate out
										(shpOrder gSource 'gate gateObj)
										
										(objSetData gSource "00003015_behavior" 'avoidingEnemy)
										)
									)
								)
						)
					)
			</OnBehavior>
			
			<OnCreateOrders>
				(block (theCourse)
					(if (not aTargetObj)
						(setq aTargeObj gPlayerShip)
						)
						
					; Move towards the player's path
					(setq theCourse (intComputeRandomEncounterCourse gSource aTargetObj))
					(shpOrder gSource 'holdCourse theCourse 300)
					
					; Register a timer so that we can look for enemies
					(sysAddObjRecurringTimerEvent 30 gSource "OnBehavior")
					(objSetData gSource "00003015_behavior" 'onCourse)
					)
			</OnCreateOrders>
			
			<OnOrdersCompleted>
				(block (behavior)
					(setq behavior (objGetData gSource "00003015_behavior"))
					(switch
						; If we're done with this order, then we never encountered
						; the player, so we're done, head for a stargate
						; Note: we might encounter the player en route
						(eq behavior 'onCourse)
							(shpOrder gSource 'gate)
						)
					)
			</OnOrdersCompleted>
		</Events>
	</ShipClass>
	
	<!-- Patrol Behavior
	
		USAGE NOTES
		
		This simulates the behavior of a ship on patrol that detects the
		player in a random encounter.
		
		EXTRA DATA
		
		behavior:			Ship's current behavior
								'attackingEnemy			= We're engaging the enemy
								'onCourse				= Ship on straight course
	-->

	<ShipClass UNID="&evStdPatrolEncounterBehavior;"
			class=				"(patrol encounter behavior)"
			virtual=			"true"
			
			attributes=			"behaviorClass"
			>
			
		<Events>
			<GetCreatePos>
				(if aTargetObj
					(intComputeRandomEncounterPos aTargetObj)
					)
			</GetCreatePos>

			<OnBehavior>
				(block (behavior)
					(setq behavior (objGetData gSource "00003014_behavior"))
					(switch
						; If we see any enemy ships then attack
						(eq behavior 'onCourse)
							(block (theEnemy)
								(if (setq theEnemy (sysFindObject gSource "sEPAN"))
									(block Nil
										(shpCancelOrders gSource)
										(shpOrder gSource 'attack theEnemy)
										(shpOrder gSource 'attackNearestEnemy)
										(objSetData gSource "00003014_encounterPos" (objGetPos gSource))
										(objSetData gSource "00003014_behavior" 'attackingEnemy)
										)
									)
								)

						; If the target has run away, then don't chase
						(eq behavior 'attackingEnemy)
							(if (and (geq (sysVectorDistance (objGetData gSource "00003014_encounterPos") (objGetPos gSource)) 300)
									(geq (objGetDistance gSource (objGetTarget gSource)) 50)
									)
								(block Nil
									(shpCancelOrders gSource)
									(shpOrder gSource 'gate)
									(objSetData gSource "00003014_behavior" 'onCourse)
									)
								)
						)
					)
			</OnBehavior>
			
			<OnCreateOrders>
				(block (theCourse)
					(if (not aTargetObj)
						(setq aTargeObj gPlayerShip)
						)
						
					; Move towards the player's path
					(setq theCourse (intComputeRandomEncounterCourse gSource aTargetObj))
					(shpOrder gSource 'holdCourse theCourse 300)
					
					; Register a timer so that we can look for enemies
					(sysAddObjRecurringTimerEvent 30 gSource "OnBehavior")
					(objSetData gSource "00003014_behavior" 'onCourse)
					)
			</OnCreateOrders>
			
			<OnOrdersCompleted>
				(block (behavior)
					(setq behavior (objGetData gSource "00003014_behavior"))
					(switch
						; If we're done with this order, then we never encountered
						; the player, so we're done, head for a stargate
						; Note: we might encounter the player en route
						(eq behavior 'onCourse)
							(shpOrder gSource 'gate)
							
						; If we're done attacking, then we're done
						(eq behavior 'attackingEnemy)
							(block Nil
								(shpOrder gSource 'gate)
								(objSetData gSource "00003014_behavior" 'onCourse)
								)
						)
					)
			</OnOrdersCompleted>
		</Events>
	</ShipClass>
	
	<!-- Zone Encounter Behavior
	
		USAGE NOTES
		
		This is for random encounters in which the player runs into
		a patrol that is orbiting a station. The patrol will ignore enemies
		unless the enemies are within 300 light-seconds of the station.
		
		Note: This only works with enemies that have their own sovereign.
		
		EXTRA DATA
		
		behavior:			Ship's current behavior
								'onCourse				= Ship on straight course
								'backToBase				= Heading back to base
								'patrolling				= Orbiting base
								'leavingSystem			= Leaving
								
		homeObj:			Ship's base (may be Nil)
		
	-->

	<ShipClass UNID="&evStdZoneEncounterBehavior;"
			class=				"(zone encounter behavior)"
			virtual=			"true"
			
			attributes=			"behaviorClass"
			>
			
		<Events>
			<GetCreatePos>
				(if aTargetObj
					(intComputeRandomEncounterPos aTargetObj)
					)
			</GetCreatePos>

			<OnBehavior>
				(block (behavior)
					(setq behavior (objGetData gSource "00003016_behavior"))
					(switch
						; If we see any enemy ships and we're inside our patrol zone
						; then attack. Otherwise, change course and head back to base.

						(eq behavior 'onCourse)
							(block (theEnemy theBase baseDist)
								(if (setq theEnemy (sysFindObject gSource "sEPAN"))
									(switch

										; Attack
										(and (setq theBase (objGetObjRefData gSource "00003016_homeObj"))
												(leq (setq baseDist (objGetDistance gSource theBase)) 300)
												)
											(block Nil
												(shpCancelOrders gSource)
												(shpOrder gSource 'patrol theBase 300)
												(objSetData gSource "00003016_behavior" 'patrolling)
												)

										; Back to base
										theBase
											(block Nil
												(shpCancelOrders gSource)
												(shpOrder gSource 'holdCourse
													(sysVectorSubtract (objGetPos theBase) (objGetPos gSource))
													(subtract baseDist 300)
													)
												(objSetData gSource "00003016_behavior" 'backToBase)
												)

										; Leave the system
										(block Nil
											(shpCancelOrders gSource)
											(shpOrder gSource 'gate)
											(objSetData gSource "00003016_behavior" 'leavingSystem)
											)
										)
									)
								)
						)
					)
			</OnBehavior>
			
			<OnCreateOrders>
				(block (theCourse homeBase)
					(if (not aTargetObj)
						(setq aTargeObj gPlayerShip)
						)

					; Find our nearest base
					(setq homeBase (sysFindObject gSource "TAFJN"))
					(if (not homeBase)
						(setq homeBase aBaseObj)
						)
					(objSetObjRefData gSource "00003016_homeObj" homeBase)

					; Move towards the player's path
					(setq theCourse (intComputeRandomEncounterCourse gSource aTargetObj))
					(shpOrder gSource 'holdCourse theCourse 300)

					; Register a timer so that we can look for enemies
					(sysAddObjRecurringTimerEvent 30 gSource "OnBehavior")
					(objSetData gSource "00003016_behavior" 'onCourse)
					)
			</OnCreateOrders>
			
			<OnOrdersCompleted>
				(block (behavior)
					(setq behavior (objGetData gSource "00003016_behavior"))
					(switch
						; If we're done with this order, then we never encountered
						; the player, so we're done, head for a stargate
						; Note: we might encounter the player en route
						(eq behavior 'onCourse)
							(shpOrder gSource 'gate)
							
						; If we're done attacking, then we're done
						(eq behavior 'attackingEnemy)
							(block Nil
								(shpOrder gSource 'gate)
								(objSetData gSource "00003016_behavior" 'onCourse)
								)

						(eq behavior 'backToBase)
							(block Nil
								(shpOrder gSource 'patrol (objGetObjRefData gSource "00003016_homeObj") 300)
								(objSetData gSource "00003016_behavior" 'patrolling)
								)
						)
					)
			</OnOrdersCompleted>
		</Events>
	</ShipClass>
	
	<!-- Wingman Base Class

		USAGE NOTES
		
		Do not rely on the implementation of this class across versions. If you wish
		to inherit from this class in an Extension, you should copy the class into
		your own Extension and then inherit from that.

		EXTRA DATA
		
		behavior:			Ship's current behavior
								Nil						= nothing
								'attackingAtWill		= attacking any target in range
								'attackingTarget		= attacking a target
								'escorting				= escorting the player
								'goingHome				= wingman wants to go home
								'repairingArmor			= docking with station to repair
								'waiting				= waiting for the player

		homeSystem			System nodeID where we were created
		nextArmorRepairMsg	Tick at which we should tell player about armor damage
		welcomeMsg			True if we already said hello to player

		GLOBAL DATA

		status:				Ship's status
								Nil						= never encountered
								'joined					= Has joined the player
								'declined				= Player has declined escort
								'destroyed				= Dead
								'destroyedByPlayer		= Killed by player
								'returnedHome			= Left the player to return home
								
	-->

	<ShipClass UNID="&baStdWingmanBase;"
			class=				"(wingman base class)"
			virtual=			"true"
			
			attributes=			"baseClass"
			>

		<Communications>
			<Message name="Attack target" key="A">
				<OnShow>
					(and (objGetTarget gSender)
						(not (eq (objGetTarget gSender) (objGetTarget gSource)))
						(not (eq (objGetData gSource "behavior") 'goingHome))
						)
				</OnShow>
				
				<Invoke>
					(switch
						(eq (objGetTarget gSender) gSource)
							(objSendMessage gSender gSource (objTranslate gSource 'IcantAttackMyself "\"Unable to comply\""))
							
						(not (objIsEnemy gPlayerShip (objGetTarget gSender)))
							(objSendMessage gSender gSource (objTranslate gSource 'IcantAttackFriends "\"Unable to comply\""))

						(block Nil
							(shpCancelOrders gSource)
							(shpOrder gSource 'attack (objGetTarget gSender))
							
							(objSetData gSource "behavior" 'attackingTarget)
							(objSendMessage gSender gSource (objTranslate gSource 'AttackTargetAck "\"Acknowledged\""))
							)
						)
				</Invoke>
			</Message>
			
			<Message name="Break &amp; attack" key="B">
				<OnShow>
					(eq (objGetData gSource "behavior") 'escorting)
				</OnShow>
				
				<Invoke>
					(block (theTarget)
						(switch
							(or (not (setq theTarget (sysFindObject gPlayerShip "sTEAN")))
									(gr (objGetDistance gPlayerShip theTarget) 100)
									)
								(objSendMessage gSender gSource (objTranslate gSource 'NoTargetInRange "\"No target in range\""))
							
							(block Nil
								(shpCancelOrders gSource)
								(shpOrder gSource 'attack theTarget)
								
								(objSetData gSource "behavior" 'attackingAtWill)
								(objSendMessage gSender gSource (objTranslate gSource 'AttackTargetAck "\"Acknowledged\""))
								)
							)
						)
				</Invoke>
			</Message>

			<Message name="Form up" key="F">
				<OnShow>
					(and 
						(or (eq (objGetData gSource "behavior") 'waiting)
							(objCommunicate gSource gSender 'QueryAttackStatus)
							)
						(not (eq (objGetData gSource "behavior") 'goingHome))
						)
				</OnShow>

				<Invoke>
					(block (behavior)
						(setq behavior (objGetData gSource "behavior"))
						(switch
							(eq behavior 'escorting)
								(block Nil
									(objCommunicate gSource gSender 'FormUp)
									(objSendMessage gSender gSource (objTranslate gSource 'FormUpAck "\"Acknowledged\""))
									)

							(block Nil
								(shpCancelOrders gSource)
								(shpOrder gSource 'follow gPlayerShip)
								
								(objSetData gSource "behavior" 'escorting)
								(if (or (eq behavior 'attackingTarget) (eq behavior 'attackingAtWill))
									(objSendMessage gSender gSource (objTranslate gSource 'CancelAttackAck "\"Acknowledged\""))
									(objSendMessage gSender gSource (objTranslate gSource 'FormUpAck "\"Acknowledged\""))
									)
								)
							)
						)
				</Invoke>
			</Message>
			
			<Message name="Status" key="S">
				<OnShow>
					True
				</OnShow>
				
				<Invoke>
					(block (behavior armorDamage shieldLevel)
						(setq behavior (objGetData gSource "behavior"))
						
						(objSendMessage gSender gSource
							(switch
								(or (eq behavior 'attackingTarget) (eq behavior 'attackingAtWill))
									(objTranslate gSource 'StatusAttackingTarget "\"Engaging target\"")

								(eq behavior 'goingHome)
									(objTranslate gSource 'StatusGoingHome "\"Returning home\"")
								
								(eq behavior 'repairingArmor)
									(objTranslate gSource 'StatusRepairingArmor "\"Repairing armor\"")
									
								(eq behavior 'waiting)
									(objTranslate gSource 'StatusWaiting "\"Waiting\"")
									
								(and (eq (setq armorDamage (objGetVisibleDamage gSource)) 0)
										(or (eq (setq shieldLevel (objGetShieldLevel gSource)) 100) (eq shieldLevel -1))
										)
									(objTranslate gSource 'Status100Percent "\"No damage\"")

								(eq armorDamage 0)
									(cat "Shields down to " shieldLevel "%")
								
								(cat "Armor is " armorDamage "% damaged")
								)
							)
							
						(objSetShowAsDestination gSource Nil 'autoclear)
						)
				</Invoke>
			</Message>

			<Message name="Wait" key="W">
				<OnShow>
					(eq (objGetData gSource "behavior") 'escorting)
				</OnShow>

				<Invoke>
					(block Nil
						(shpCancelOrders gSource)
						(shpOrder gSource 'hold)
						
						(objSetData gSource "behavior" 'waiting)
						(objSendMessage gSender gSource (objTranslate gSource 'WaitAck "\"Acknowledged\""))
						)
				</Invoke>
			</Message>
		</Communications>
		
		<Language>
			<Text id="EscortReportingIn">
				(if (not (objGetData gSource "welcomeMsg"))
					(block Nil
						(objSetData gSource "welcomeMsg" True)
						(objTranslate gSource 'WingmanJoined "\"Ready\"")
						)
					""
					)
			</Text>
			
			<Text id="NiceShooting">			"\"Nice shooting!\""</Text>
			<Text id="WatchYourTargets">		"\"Watch your targets!\""</Text>
		</Language>
		
		<Events>
			<OnBehavior>
				(block (behavior theTarget nextTime maxSystemLevel armorDamage)
					(setq behavior (objGetData gSource "behavior"))
					
					(switch
						; If we're injured and we're near a base that repairs armor then
						; dock with the base and get repaired

						(and (eq behavior 'escorting)
								(geq (setq armorDamage (objGetVisibleDamage gSource)) 10)
								(not (objIsUnderAttack gSource))
								)
							(switch
								; Some wingmen (like Jenna) doesn't want to proceed beyond a certain point
								(and (setq maxSystemLevel (objGetStaticData gSource "MaxSystemLevel"))
										(gr (sysGetLevel) maxSystemLevel)
										)
									(block Nil
										(shpCancelOrders gSource)
										(shpOrder gSource 'hold 30)
										(shpOrder gSource 'gate (intGetGateToSystem gSource (objGetData gSource "homeSystem")))

										(objSetData gSource "behavior" 'goingHome)
										(objSendMessage gPlayerShip gSource (objTranslate gSource 'ImGoingHome "\"Going home\""))
										)
								
								; If there is a station that can repair armor, dock with it
								(setq theTarget (srvFindRepairArmor gSource 60 (itmGetLevel (shpGetArmor gSource 0))))
									(block Nil
										(shpCancelOrders gSource)
										(shpOrder gSource 'dock theTarget)
										(shpOrder gSource 'wait (random 3 8))
										
										(objSetData gSource "behavior" 'repairingArmor)
										(objSendMessage gPlayerShip gSource (objTranslate gSource 'ImRepairingArmor "\"Docking to repair armor\""))
										)
									
								; Otherwise, tell the player that we need repairs
								(and (geq armorDamage 50)
										(or (not (setq nextTime (objGetData gSource "nextArmorRepairMsg")))
											(geq (unvGetTick) nextTime)
											)
										)
									(block Nil
										(objSendMessage gPlayerShip gSource (objTranslate gSource 'MyArmorNeedsRepair "\"Armor repair needed\""))
										(objSetData gSource "nextArmorRepairMsg" (add (unvGetTick) 3600))
										)
								)
						)
					)
			</OnBehavior>

			<OnCreate>
				(block Nil
					(objSetData gSource "homeSystem" (sysGetNode))
					(sysAddObjRecurringTimerEvent 60 gSource "OnBehavior")
					)
			</OnCreate>

			<OnDestroy>
				(switch
					(eq (objGetGlobalData gSource "status") 'returnedHome)
						Nil

					(and gPlayerShip (eq aOrderGiver gPlayerShip))
						(objSetGlobalData gSource "status" 'destroyedByPlayer)

					(block Nil
						(objSetGlobalData gSource "status" 'destroyed)
						(plyMessage gPlayer (objTranslate gSource 'WingmanKilled "Wingman killed"))
						)
					)
			</OnDestroy>
			
			<OnEnteredGate>
				(if (eq (objGetData gSource "behavior") 'goingHome)
					(objSetGlobalData gSource "status" 'returnedHome)
					)
			</OnEnteredGate>
			
			<OnEnteredSystem>
				(block (maxSystemLevel)
					(setq maxSystemLevel (objGetStaticData gSource "MaxSystemLevel"))
					(switch
						(not maxSystemLevel)
							Nil
							
						(eq (objGetData gSource "homeSystem") (sysGetNode))
							Nil

						(geq (sysGetLevel) maxSystemLevel)
							(objSendMessage gPlayerShip gSource (objTranslate gSource 'ImTooFarFromHome "\"I'm too far from home\""))

						(eq (sysGetLevel) (subtract maxSystemLevel 1))
							(objSendMessage gPlayerShip gSource (objTranslate gSource 'ImFarFromHome "\"I'm far from home\""))
						)
					)
			</OnEnteredSystem>

			<OnOrdersCompleted>
				(block (behavior theTarget)
					(setq behavior (objGetData gSource "behavior"))
					(switch
						(eq behavior 'repairingArmor)
							(block Nil
								(intArmorRepairAll gSource 25 'alwaysRepair)
								(objSendMessage gPlayerShip gSource (objTranslate gSource 'ArmorRepaired "\"Armor repairs completed\""))
								)
						)
					
					; Set orders and state
					
					(switch
						(and (eq behavior 'attackingAtWill)
								(setq theTarget (sysFindObject gPlayerShip "sTEAN"))
								(leq (objGetDistance gPlayerShip theTarget) 100)
								)
							(shpOrder gSource 'attack theTarget)
								
						gPlayerShip
							(block Nil
								(shpOrder gSource 'follow gPlayerShip)
								(objSetData gSource "behavior" 'escorting)
								)

						(block Nil
							(shpOrder gSource 'hold)
							(objSetData gSource "behavior" 'waiting)
							)
						)
					)
			</OnOrdersCompleted>
			
			<OnPlayerLeftSystem>
				(block (behavior)
					(setq behavior (objGetData gSource "behavior"))
					(switch
						(or (not behavior)
								(eq behavior 'goingHome)
								)
							Nil

						; If we're waiting, stay in this system and wait for the player
						(or (eq behavior 'waiting)
								(eq behavior 'repairingArmor)
								)
							'waitForPlayer

						; Otherwise, follow the player through the gate
						'followPlayer
						)
					)
			</OnPlayerLeftSystem>
			
			<OnTranslateMessage>
				(switch
					(eq aMessage 'EscortReportingIn)
						(if (not (objGetData gSource "welcomeMsg"))
							(block Nil
								(objSetData gSource "welcomeMsg" True)
								(objTranslate gSource 'WingmanJoined "\"Ready\"")
								)
							""
							)
							
					(eq aMessage 'WatchYourTargets)
						(objTranslate gSource 'WatchYourTargets "\"Watch your targets!\"")
						
					(eq aMessage 'NiceShooting)
						(objTranslate gSource 'NiceShooting "\"Nice shooting!\"")
						
					Nil
					)
			</OnTranslateMessage>

			<OrderJoinPlayer>
				(block Nil
					(shpSetPlayerWingman gSource)
					(objSetGlobalData gSource "status" 'joined)
					)
			</OrderJoinPlayer>
		</Events>
	</ShipClass>

<!-- SHIP CLASSES ========================================================= -->

	<!-- EI100/M Missileship-->

	<ShipClass UNID="&scEI100M;"
			manufacturer=		"Earth Industries"
			class=				"EI100/M"
			type=				"missileship"
			score=				"245"

			mass=				"250"
			cargoSpace=			"150"
			thrust=				"200"
			maneuver=			"6"
			maxSpeed=			"12"

			leavesWreck=		"75"

			attributes=			""
			>

		<Armor>
			<ArmorSection start="315" span="90" armorID="&itReactiveArmor;" areaSet="0,2" />
			<ArmorSection start="225" span="90" armorID="&itReactiveArmor;" areaSet="3,4" />
			<ArmorSection start="135" span="90" armorID="&itReactiveArmor;" areaSet="1,6" />
			<ArmorSection start="45"  span="90" armorID="&itReactiveArmor;" areaSet="7,13" />
		</Armor>

		<Devices>
			<Device deviceID="&itOmniLaserCannon;"/>
			<Device deviceID="&itNAMIMissileLauncher;" omnidirectional="true" />
			<Device deviceID="&itClass1Deflector;"/>
		</Devices>

		<Items>
			<Item count="2d6" item="&itKM500Missile;"/>
			<Item count="4d6" item="&itHelium3FuelRod;"/>
		</Items>

		<Image imageID="&rsEI100Image;" imageX="0" imageY="0" imageWidth="70" imageHeight="70"/>

		<AISettings
			fireRateAdj=		"60"
			fireAccuracy=		"100"
			perception=			"4"
			combatStyle=		"standOff"
			/>

	</ShipClass>

	<!-- Tenhove Sentinel -->

	<ShipClass UNID="&scTenhoveSentinel;"
			manufacturer=		"Tenhove Defense Systems"
			class=				"Tenhove"
			type=				"sentinel"
			score=				"25"

			mass=				"15"
			cargoSpace=			"0"
			thrust=				"30"
			maneuver=			"1"
			maxSpeed=			"5"

			leavesWreck=		"10"

			attributes=			"genericClass"
			>

		<Armor>
			<ArmorSection start="0" span="360" armorID="&itUltraLightTitaniumPlate;"/>
		</Armor>

		<Devices>
			<Device deviceID="&itLaserCannon;"/>
		</Devices>

		<Image imageID="&rsSmallShips1;" imageX="96" imageY="0" imageWidth="32" imageHeight="32" imageFrameCount="0" imageTicksPerFrame="0"/>

		<AISettings
			fireRateAdj=		"50"
			fireAccuracy=		"80"
			perception=			"4"
			/>

	</ShipClass>

<!-- *************************************************************************** -->

	<SpaceEnvironmentType UNID="&seNebula;"
			lrsJammer=			"true"
			dragFactor=			"73"
			attributes=			"nebula"
			>

		<Image imageID="&rsNebulaEnv;" 
				imageX="0" 
				imageY="0" 
				imageWidth="640" 
				imageHeight="640"/>
	</SpaceEnvironmentType>

<!-- STATION TYPES ============================================================

	STATION ATTRIBUTES

	anarchists				anarchists
	commonwealth			commonwealth station
	commonFleet				Commonwealth Fleet
	commonMilitary			either Commonwealth militia or Commonwealth Fleet
	enemy					enemy of the player
	friendly				friend of the player
	populated				not an automated station
	primary					main station in the system

	ENVIRONMENT ATTRIBUTES

	envEarth				station found in earth systems
	envFire					station found in fire systems
	envWater				station found in water systems
	envAir					station found in air systems

	For example, in asteroid systems (+envEarth) any station that
	DOES NOT have the envEarth attribute is half as likely to appear
	in the system.

	Each of the above attributes also has a pair of the form envAvoidsXXX. For
	example, envAvoidsAir means that the station is less likely than average to
	be found in an ice system.

	LOCATION CRITERIA

	+planetary				station twice as likely to appear near a planet

-->

	<Effect UNID="&efLargeStationDamage;">
		<Image imageID="&rsLargeDamage;"
				imageWidth="64"
				imageHeight="64"
				imageFrameCount="5"/>
	</Effect>

	<Effect UNID="&efMediumStationDamage;">
		<Image imageID="&rsMediumDamage;"
				imageWidth="24"
				imageHeight="24"
				imageFrameCount="10"/>
	</Effect>

	<!-- Barricade -->

	<StationType UNID="&stBarricade1;"
			name=				"titanium barricade"
			sovereign=			"&svIndependent;"
			dockScreen=			"&dsBarricade;"

			structuralHitPoints="25"
			ejectaType=			"&vtWreckEjecta;"

			scale=				"ship"
			mass=				"8"
			noMapIcon=			"true"
			>

		<ImageVariants>
			<Image			imageID="&rsBarricades;" imageX="0" imageY="0"   imageWidth="80" imageHeight="80" />
			<Image			imageID="&rsBarricades;" imageX="0" imageY="80"  imageWidth="80" imageHeight="80" />
			<Image			imageID="&rsBarricades;" imageX="0" imageY="160" imageWidth="80" imageHeight="80" />
			<Image			imageID="&rsBarricades;" imageX="0" imageY="240" imageWidth="80" imageHeight="80" />
		</ImageVariants>

		<DockingPorts>
			<Port x="0"		y="40" />
			<Port x="0"		y="-40" />
			<Port x="40"	y="0" />
			<Port x="-40"	y="0" />
		</DockingPorts>

	</StationType>

	<StationType UNID="&stBarricade2;"
			name=				"titanium barricade"
			sovereign=			"&svIndependent;"
			dockScreen=			"&dsBarricade;"

			structuralHitPoints="50"
			ejectaType=			"&vtWreckEjecta;"

			scale=				"ship"
			mass=				"15"
			noMapIcon=			"true"
			>

		<ImageVariants>
			<Image			imageID="&rsBarricades;" imageX="0" imageY="0"   imageWidth="80" imageHeight="80" />
			<Image			imageID="&rsBarricades;" imageX="0" imageY="80"  imageWidth="80" imageHeight="80" />
			<Image			imageID="&rsBarricades;" imageX="0" imageY="160" imageWidth="80" imageHeight="80" />
			<Image			imageID="&rsBarricades;" imageX="0" imageY="240" imageWidth="80" imageHeight="80" />
		</ImageVariants>

		<DockingPorts>
			<Port x="0"		y="40" />
			<Port x="0"		y="-40" />
			<Port x="40"	y="0" />
			<Port x="-40"	y="0" />
		</DockingPorts>

	</StationType>

	<StationType UNID="&stBarricade3;"
			name=				"titanium barricade"
			sovereign=			"&svIndependent;"
			dockScreen=			"&dsBarricade;"

			structuralHitPoints="100"
			ejectaType=			"&vtWreckEjecta;"

			scale=				"ship"
			mass=				"30"
			noMapIcon=			"true"
			>

		<ImageVariants>
			<Image			imageID="&rsBarricades;" imageX="0" imageY="0"   imageWidth="80" imageHeight="80" />
			<Image			imageID="&rsBarricades;" imageX="0" imageY="80"  imageWidth="80" imageHeight="80" />
			<Image			imageID="&rsBarricades;" imageX="0" imageY="160" imageWidth="80" imageHeight="80" />
			<Image			imageID="&rsBarricades;" imageX="0" imageY="240" imageWidth="80" imageHeight="80" />
		</ImageVariants>

		<DockingPorts>
			<Port x="0"		y="40" />
			<Port x="0"		y="-40" />
			<Port x="40"	y="0" />
			<Port x="-40"	y="0" />
		</DockingPorts>

	</StationType>

	<!-- Cargo Crate -->

	<StationType UNID="&stCargoCrate;"
			name=				"abandoned cargo crate"
			sovereign=			"&svIndependent;"
			dockScreen=			"&dsAbandonedCrate;"

			structuralHitPoints="10"
			ejectaType=			"&vtWreckEjecta;"

			scale=				"ship"
			mobile=				"true"
			mass=				"50"
			destroyWhenEmpty=	"true"
			noMapIcon=			"true"
			>

		<ImageVariants>
			<Image			imageID="&rsStations1;" imageX="480" imageY="256" imageWidth="32" imageHeight="32" />
			<Image			imageID="&rsStations1;" imageX="480" imageY="288" imageWidth="32" imageHeight="32" />
			<Image			imageID="&rsStations1;" imageX="480" imageY="320" imageWidth="32" imageHeight="32" />
			<Image			imageID="&rsStations1;" imageX="480" imageY="352" imageWidth="32" imageHeight="32" />
		</ImageVariants>

		<Events>
			<GetExplosionType>
				(intContainerGetExplosionType gSource)
			</GetExplosionType>

			<OnDamage>
				(intContainerOnDamage gSource aDamageHP)
			</OnDamage>
		</Events>

		<DockingPorts>
			<Port x="0"		y="40" />
			<Port x="0"		y="-40" />
			<Port x="40"	y="0" />
			<Port x="-40"	y="0" />
		</DockingPorts>

	</StationType>

	<!-- Shipwreck -->

	<StationType UNID="&stShipwreck;"
			name=				"(shipwreck)"
			sovereign=			"&svIndependent;"
			dockScreen=			"&dsAbandonedShip;"
			dockingPorts=		"4"
			scale=				"ship"
			mobile=				"true"
			noMapIcon=			"true"

			ejectaType=			"&vtWreckEjecta;"
			
			attributes=			"shipwreck"
			>
		<Image imageID="&rsMediumShips1;" imageX="0" imageY="96" imageWidth="48" imageHeight="48" imageFrameCount="0" imageTicksPerFrame="0"/>

		<Events>
			<GetExplosionType>
				(intContainerGetExplosionType gSource)
			</GetExplosionType>

			<OnDamage>
				(intContainerOnDamage gSource aDamageHP)
			</OnDamage>
		</Events>

	</StationType>

	<!-- Shipwreck 1 -->

	<StationType UNID="&stShipwreck1;"
			name=				"(shipwreck I)"
			sovereign=			"&svPirates;"
			dockScreen=			"&dsAbandonedShip;"
			dockingPorts=		"4"
			scale=				"ship"
			mobile=				"true"
			noMapIcon=			"true"

			ejectaType=			"&vtWreckEjecta;"

			attributes=			"debris,friendly,shipwreck"
			levelFrequency=		"ucccu rrvv- ----- ----- -----"
			locationCriteria=	"-planetary"
			>
		<Image shipwreckID="&scCorsair;, &scBorer;, &scEarthzone;, &scRoninA;"/>

		<Items>
			<Table>
				<Null	chance="20"/>
				<Lookup chance="30" count="1d3" table="&trConsumables1;"/>
				<Lookup chance="15" count="1"	table="&trConsumables2;"/>
				<Lookup chance="25" count="1"	table="&trMinorItem2;"/>
				<Lookup chance="10" count="1"	table="&trMajorItem2;"/>
			</Table>
		</Items>

		<Events>
			<GetExplosionType>
				(intContainerGetExplosionType gSource)
			</GetExplosionType>

			<OnDamage>
				(intContainerOnDamage gSource aDamageHP)
			</OnDamage>
		</Events>

	</StationType>

	<!-- Shipwreck 2 -->

	<StationType UNID="&stShipwreck2;"
			name=				"(shipwreck II)"
			sovereign=			"&svPirates;"
			dockScreen=			"&dsAbandonedShip;"
			dockingPorts=		"4"
			scale=				"ship"
			mobile=				"true"
			noMapIcon=			"true"

			attributes=			"debris,friendly,shipwreck"
			levelFrequency=		"-uccc urrvv ----- ----- -----"
			locationCriteria=	"-planetary"

			ejectaType=			"&vtWreckEjecta;"
			>
		<Image shipwreckID="&scRoninB;, &scSotho;, &scEI100;, &scT31ArmedTransport;"/>

		<Items>
			<Table count="2">
				<Null	chance="10"/>
				<Lookup chance="15" count="1d3" table="&trConsumables1;"/>
				<Lookup chance="20" count="1"	table="&trConsumables2;"/>
				<Lookup chance="15" count="1"	table="&trConsumables3;"/>
				<Lookup chance="15" count="1"	table="&trMinorItem2;"/>
				<Lookup chance="10" count="1"	table="&trMinorItem3;"/>
				<Lookup chance="10" count="1"	table="&trMajorItem2;"/>
				<Lookup chance="5"  count="1"	table="&trMajorItem3;"/>
			</Table>
		</Items>

		<Events>
			<GetExplosionType>
				(intContainerGetExplosionType gSource)
			</GetExplosionType>

			<OnDamage>
				(intContainerOnDamage gSource aDamageHP)
			</OnDamage>
		</Events>

	</StationType>

	<!-- Shipwreck 3 -->

	<StationType UNID="&stShipwreck3;"
			name=				"(shipwreck III)"
			sovereign=			"&svPirates;"
			dockScreen=			"&dsAbandonedShip;"
			dockingPorts=		"4"
			scale=				"ship"
			mobile=				"true"
			noMapIcon=			"true"

			attributes=			"debris,friendly,shipwreck"
			levelFrequency=		"--ucc currv v---- ----- -----"
			locationCriteria=	"-planetary"

			ejectaType=			"&vtWreckEjecta;"
			>
		<Image shipwreckID="&scRepentant;, &scEI100;, &scBarbary;"/>

		<Items>
			<Table count="1d4">
				<Null	chance="5"/>
				<Lookup chance="5"  count="1d3" table="&trConsumables2;"/>
				<Lookup chance="15" count="1"	table="&trConsumables3;"/>
				<Lookup chance="16" count="1"	table="&trConsumables4;"/>
				<Lookup chance="10" count="1"	table="&trConsumables5;"/>
				<Lookup chance="10" count="1"	table="&trMinorItem2;"/>
				<Lookup chance="15" count="1"	table="&trMinorItem3;"/>
				<Lookup chance="8"  count="1"	table="&trMinorItem4;"/>
				<Lookup chance="8"  count="1"	table="&trMajorItem2;"/>
				<Lookup chance="5"  count="1"	table="&trMajorItem3;"/>
				<Lookup chance="3"  count="1"	table="&trMajorItem4;"/>
			</Table>
		</Items>

		<Events>
			<GetExplosionType>
				(intContainerGetExplosionType gSource)
			</GetExplosionType>

			<OnDamage>
				(intContainerOnDamage gSource aDamageHP)
			</OnDamage>
		</Events>

	</StationType>

	<!-- Shipwreck, Radioactive -->

	<StationType UNID="&stRadioactiveShipwreck;"
			name=				"(radioactive shipwreck)"
			sovereign=			"&svPirates;"
			dockScreen=			"&dsAbandonedShip;"
			dockingPorts=		"4"
			scale=				"ship"
			mobile=				"true"
			noMapIcon=			"true"
			radioactive=		"true"

			attributes=			"debris,friendly,shipwreck"
			levelFrequency=		"-rccc urv-- ----- ----- -----"
			locationCriteria=	"-planetary"

			ejectaType=			"&vtWreckEjecta;"
			>
		<Image shipwreckID="&scPlague;, &scEI100;, &scRevelations;"/>

		<Items>
			<Table count="1d4">
				<Null	chance="5"/>
				<Item   chance="13"	count="1d4" item="&itHeavyWater;"/>
				<Item	chance="10"	count="1d4" item="&itFusionTrigger;"/>
				<Item	chance="10"	count="1d4"	item="&itRadioactiveWaste;"/>
				<Item	chance="15"	count="1d4"	item="&itHardenedReactiveArmor;"/>
				<Item	chance="6"	count="1d4" item="&itHardenedPlasteelPlate;"/>
				<Lookup chance="5"  count="1d3" table="&trConsumables3;"/>
				<Lookup chance="10" count="1"	table="&trConsumables4;"/>
				<Lookup chance="10" count="1"	table="&trConsumables5;"/>
				<Lookup chance="5"  count="1"	table="&trMinorItem3;"/>
				<Lookup chance="5"  count="1"	table="&trMinorItem4;"/>
				<Lookup chance="3"  count="1"	table="&trMajorItem3;"/>
				<Lookup chance="3"  count="1"	table="&trMajorItem4;"/>
			</Table>
		</Items>

		<Events>
			<GetExplosionType>
				(intContainerGetExplosionType gSource)
			</GetExplosionType>

			<OnDamage>
				(intContainerOnDamage gSource aDamageHP)
			</OnDamage>
		</Events>

	</StationType>

	<!-- Tan Ru Dorem -->

	<StationType UNID="&stTanRuDorem;"
			name=				"Tan&#x95;Ru&#x95;Dorem"
			sovereign=			"&svIndependent;"
			dockScreen=			"Main"

			multiHull=			"true"
			immutable=			"true"

			noArticle=			"true"
			>

		<Image imageID="&rsStations7;" imageX="0" imageY="768" imageWidth="256" imageHeight="256"/>

		<DockScreens>

			<Main>

				<Panes>
					<Default
							desc=	"You are docked at a strange station, apparently devoid of inhabitants. The immense docking bay is built out of a metal engraved with faintly luminous hieroglyphics. The walls are warm to the touch and hum with power.">

						<Actions>
							<Action name="Undock" cancel="1" key="U">
								<Exit/>
							</Action>

						</Actions>

					</Default>
				</Panes>
			</Main>

		</DockScreens>

		<DockingPorts>
			<Port x="79"	y="75" />
			<Port x="0"		y="100" />
			<Port x="-73"	y="74" />
			<Port x="-109"	y="0" />
			<Port x="-87"	y="-75" />
			<Port x="0"		y="-109" />
			<Port x="82"	y="-82" />
			<Port x="109"	y="8" />
		</DockingPorts>
	</StationType>

	<!-- SPECIAL STATIONS -->

	<!-- Majellen Stargate -->

	<StationType UNID="&stMajellenStargate;"
			name=				"(stargate)"
			sovereign=			"&svIndependent;"
			dockScreen=			"Main"
			dockingPorts=		"4"

			multiHull=			"true"
			immutable=			"true"
			attributes=			"majellen, stargate"

			gateEffect=			"&efStargateOut;"

			definiteArticle=	"true"
			>
		<Image imageID="&rsStargate;" imageX="0" imageY="128" imageWidth="192" imageHeight="192" imageFrameCount="12" imageTicksPerFrame="3"/>

		<DockScreens>

			<Main>

				<Panes>
					<Default
							desc=	"You are docked at an alien stargate. These giant structures are used by the Ancient Races to move their starships across the Galaxy. Stargates are the best mode of faster-than-light travel and they are the only method known to humans.">

						<Actions>
							<Action name="Undock" cancel="1" key="U">
								<Exit/>
							</Action>

						</Actions>

					</Default>
				</Panes>
			</Main>

		</DockScreens>

	</StationType>

	<StationType UNID="&stUnchartedMajellenStargate;"
			name=				"(stargate)"
			sovereign=			"&svIndependent;"
			dockScreen=			"Main"
			dockingPorts=		"4"

			multiHull=			"true"
			immutable=			"true"
			attributes=			"majellen, stargate, uncharted"

			gateEffect=			"&efStargateOut;"

			definiteArticle=	"true"
			>
		<Image imageID="&rsStargate;" imageX="0" imageY="128" imageWidth="192" imageHeight="192" imageFrameCount="12" imageTicksPerFrame="3"/>

		<DockScreens>

			<Main>

				<Panes>
					<Default
							desc=	"You are docked at an alien stargate. These giant structures are used by the Ancient Races to move their starships across the Galaxy. Stargates are the best mode of faster-than-light travel and they are the only method known to humans.">

						<Actions>
							<Action name="Undock" cancel="1" key="U">
								<Exit/>
							</Action>

						</Actions>

					</Default>
				</Panes>
			</Main>

		</DockScreens>

	</StationType>

	<!-- NavBeacon -->

	<StationType UNID="&stNavBeacon;"
			name=				"(navigational beacon)"
			sovereign=			"&svIndependent;"
			dockScreen=			"&dsNavBeacon;"
			noMapLabel=			"true"
			beacon=				"true"
			mass=				"2500"
			>

		<Names noArticle="true">NavBeacon %s-%0%0%0</Names>

		<DockingPorts>
			<Port x="0"		y="24" />
			<Port x="0"		y="-24" />
			<Port x="24"	y="0" />
			<Port x="-24"	y="0" />
		</DockingPorts>

		<ImageVariants>
			<Image imageID="&rsNavBeacon;" imageX="0" imageY="0"   imageWidth="64" imageHeight="64" imageFrameCount="2" imageTicksPerFrame="120" flashTicks="3" />
			<Image imageID="&rsNavBeacon;" imageX="0" imageY="64"  imageWidth="64" imageHeight="64" imageFrameCount="2" imageTicksPerFrame="120" flashTicks="3" />
			<Image imageID="&rsNavBeacon;" imageX="0" imageY="128" imageWidth="64" imageHeight="64" imageFrameCount="2" imageTicksPerFrame="120" flashTicks="3" />
			<Image imageID="&rsNavBeacon;" imageX="0" imageY="192" imageWidth="64" imageHeight="64" imageFrameCount="2" imageTicksPerFrame="120" flashTicks="3" />
		</ImageVariants>

	</StationType>

	<!-- Debug Depot (Obsolete) -->
	
	<StationType UNID="&stDebugDepot;"
			name=				"(debug depot)"
			sovereign=			"&svIndependent;"
			dockScreen=			"Main"
			dockingPorts=		"4"
			scale=				"ship"
			noMapIcon=			"true"
			>
			
		<Image shipwreckID="&scMikeno;"/>
		
		<DockScreens>
			<Main name="Debug Depot">
				<Panes>
					<Default>
						<Actions>
							<Action name="Undock" default="1" cancel="1" key="U">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>
		</DockScreens>
	</StationType>

</TranscendenceModule>
