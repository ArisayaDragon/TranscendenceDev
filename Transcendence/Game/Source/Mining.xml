<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

	<!-- Mined Ore -->

	<StationType UNID="&stMinedOre;"
			name=				"mined ore"
			noArticle=			"true"
			sovereign=			"&svIndependent;"
			dockScreen=			"&dsMinedOre;"

			structuralHitPoints="100"

			scale=				"ship"
			mobile=				"true"
			mass=				"10"
			destroyWhenEmpty=	"true"
			noMapIcon=			"true"
			>

		<ImageVariants>
			<Image			imageID="&rsOreSmall;" imageX="48" imageY="0" imageWidth="24" imageHeight="24" />
			<Image			imageID="&rsOreSmall;" imageX="48" imageY="24" imageWidth="24" imageHeight="24" />
			<Image			imageID="&rsOreSmall;" imageX="48" imageY="48" imageWidth="24" imageHeight="24" />
			<Image			imageID="&rsOreSmall;" imageX="48" imageY="72" imageWidth="24" imageHeight="24" />
		</ImageVariants>

		<DockingPorts
				portCount=		"2"
				portRadius=		"24"
				maxDist=		"3"
				/>

	</StationType>

<!-- TABLES -->

	<ItemTable unid="&tbAsteroidOre;">
		<LocationCriteriaTable>
			<Group criteria="*metallicComp"
				   levelValue="
				  		300,      500,      750,     1000,      2000,
					   4000,     8000,    16000,    32000,     64000,
					 128000,   256000,   512000,  1000000,   2000000,
					4100000,  8200000, 16400000, 32800000,	65500000"
					>
				<RandomItem criteria="* +ore; -notStandard; +metallicComp;" levelFrequency="systemLevel:vruuc|c|cuurv" />
			</Group>
			<Group criteria="*organicComp"
				   levelValue="
				  		300,      500,      750,     1000,      2000,
					   4000,     8000,    16000,    32000,     64000,
					 128000,   256000,   512000,  1000000,   2000000,
					4100000,  8200000, 16400000, 32800000,	65500000"
					>
				<RandomItem criteria="* +ore; -notStandard; +organicComp;" levelFrequency="systemLevel:vruuc|c|cuurv" />
			</Group>
			<Group criteria="*rockyComp"
				   levelValue="
				  		300,      500,      750,     1000,      2000,
					   4000,     8000,    16000,    32000,     64000,
					 128000,   256000,   512000,  1000000,   2000000,
					4100000,  8200000, 16400000, 32800000,	65500000"
					>
				<RandomItem criteria="* +ore; -notStandard; +rockyComp;" levelFrequency="systemLevel:vruuc|c|cuurv" />
			</Group>
			<Group criteria="*waterComp"
				   levelValue="
				  		300,      500,      750,     1000,      2000,
					   4000,     8000,    16000,    32000,     64000,
					 128000,   256000,   512000,  1000000,   2000000,
					4100000,  8200000, 16400000, 32800000,	65500000"
					>
				<RandomItem criteria="* +ore; -notStandard; +waterComp;" levelFrequency="systemLevel:vruuc|c|cuurv" />
			</Group>
		</LocationCriteriaTable>
	</ItemTable>
	
<!-- GLOBAL -->

	<Globals>
		(block Nil
			(setq intAsteroidOnMining (lambda (miningDifficulty)
				(block (theOre)
					; Figure out what ore exists here
					(setq theOre (random (objGetItems gSource "* +Ore;")))

					; Our chance of getting something is based on the probability
					; We adjust it a bit because we don't want it to always succeed

					(if (and theOre
							(leq (random 1 100) (divide (multiply aMineProbability miningDifficulty) 100))
							)
						(block (totalTons minedOre)
							; Figure out how many tons we mined
							(setq totalTons (random 1 50))
							(if (ls totalTons aHP)
								(setq totalTons aHP)
								)
							(if (gr totalTons (itmGetCount theOre))
								(setq totalTons (itmGetCount theOre))
								)

							; Set the amount of ore to mine	
							(setq theOre (itmCreate (itmGetType theOre) totalTons))

							; Create the mined ore
							(setq minedOre (sysCreateStation &stMinedOre; aMinePos))
							(objRemoveItem gSource theOre)
							(objAddItem minedOre theOre)
							(objIncVel minedOre (sysVectorPolarVelocity aMineDir 5))
							)
						)
					)
				))
			)
	</Globals>
	
<!-- DOCK SCREENS -->

	<!-- Mined Ore Dock Screen -->

	<DockScreen UNID="&dsMinedOre;"
			backgroundID=	"&rsMinedOreBkgnd;"
			>

		<InitialPane>
			(if (objGetItems gSource "*")
				"Default"
				"Empty"
				)
		</InitialPane>

		<Panes>
			<Default
					desc=	"You are floating next to boulders of mined ore.">

				<Actions>
					<Action name="Bring Aboard" key="B" default="1" >
						(block Nil
							(if (objGetItems gPlayerShip "*I +MinersHold;")
								(scrShowScreen gScreen &dsRPGLoot; {
									nextScreen: &dsMinedOre;
									})
								(scrShowPane gScreen "NoMinersHold")
								)
							)
					</Action>

					<Action name="Leave" cancel="1" key="L">
						<Exit/>
					</Action>
				</Actions>

			</Default>

			<NoMinersHold>
				<OnPaneInit>
					(scrSetDesc gScreen "Without a miner's cargo hold you find it difficult to bring aboard all the ore. You will only be able to recover part of the ore. Continue?")
				</OnPaneInit>

				<Actions>
					<Action name="Continue" key="C" default="1">
						(block (oreToRemove)
							; Remove 75% of the ore
							(setq oreToRemove Nil)
							(objEnumItems gSource "* +Ore;" theItem
								(block (count)
									(setq count (divide (multiply 75 (itmGetCount theItem)) 100))
									(if (gr count 0)
										(setq oreToRemove (append oreToRemove (list (itmSetCount theItem count))))
										)
									)
								)

							(enum oreToRemove theItem
								(objRemoveItem gSource theItem)
								)

							; Loot
							(scrShowScreen gScreen &dsRPGLoot; {
								nextScreen: &dsMinedOre;
								})
							)
					</Action>

					<Action name="Leave" key="L" cancel="1">
						<Exit/>
					</Action>
				</Actions>
			</NoMinersHold>

			<Empty
					desc=	"You are floating next to boulders of mined ore.">

				<Actions>
					<Action name="Leave" default="1" cancel="1" key="L">
						<Exit/>
					</Action>
				</Actions>
			</Empty>
		</Panes>
	</DockScreen>
	
<!-- RESOURCES -->

	<Image UNID="&rsOreSmall;" bitmap="Resources\OreSmall.jpg" bitmask="Resources\OreSmallMask.bmp" loadOnUse="true" />
	<Image UNID="&rsMinedOreBkgnd;" bitmap="Resources\MinedOreScreen.jpg" loadOnUse="true" />

</TranscendenceModule>