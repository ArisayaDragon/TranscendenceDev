<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>
	
	<!-- Benedict Intro
	
	GLOBAL DATA
	
	q1, q2, ... q{n}: These are set to True if the player has already been given
			answers to the question.
	
	-->

	<DockScreen UNID="&dsBenedictIntro;"
			nestedScreen=		"true"
			inherit=			"&dsDockScreenBase;"
			>

		<Panes>
			<Default>
				<OnPaneInit>
					(block (
						(nextActionPos 0)
						)
						
						;	Set the description
						
						(switch
							(not (typGetData &unidBenedictStoryArc; 'firstDockedAtSisters))
								(scrSetDesc gScreen (typTranslate &dsBenedictIntro; 'IntroFirst))
							
							(not (scrGetData gScreen 'answerQ))
								(scrSetDesc gScreen (typTranslate &dsBenedictIntro; 'IntroReturning))
								
							(scrSetDesc gScreen
								(typTranslate &dsBenedictIntro; (cat (scrGetData gScreen 'answerQ) ":Answer"))
								)
							)
						
						;	Add unanswered questions as actions:
						
						(if (not (typGetData &dsBenedictIntro; 'q1))
							(block Nil
								(scrAddAction gScreen 'q1 nextActionPos
									(typTranslate &dsBenedictIntro; "q1:Label")
									(block Nil
										(scrSetData gScreen 'answerQ 'q1)
										(typSetData &dsBenedictIntro; 'q1 True)
										(scrRefreshScreen gScreen)
										)
									)
								(setq nextActionPos (add nextActionPos 1))
								)
							)
							
						(if (not (typGetData &dsBenedictIntro; 'q2))
							(block Nil
								(scrAddAction gScreen 'q2 nextActionPos
									(typTranslate &dsBenedictIntro; "q2:Label")
									(block Nil
										(scrSetData gScreen 'answerQ 'q2)
										(typSetData &dsBenedictIntro; 'q2 True)
										(scrRefreshScreen gScreen)
										)
									)
								(setq nextActionPos (add nextActionPos 1))
								)
							)
							
						;	Last question always goes to Benedict, but we set the label
						;	based on whether we've talked to him before
							
						(scrSetActionLabel gScreen 'actionBenedict 
							(typTranslate &dsBenedictIntro; 
								(if (typGetData &dsBenedictIntro; 'q3)
									"q3:LabelAgain"
									"q3:Label"
									)
								)
							)
							
						;	Remember the first time we talk to the Sisters.
						
						(if (not (typGetData &unidBenedictStoryArc; 'firstDockedAtSisters))
							(typSetData &unidBenedictStoryArc; 'firstDockedAtSisters (unvGetTick))
							)
							
						;	Allow access to Sanctum

						(objSetData gSource "freeSanctum" True)
						)
				</OnPaneInit>

				<Actions>
					<Action id="actionBenedict">
						(block Nil
						
							;	Remember that we've already talked to Benedict
							(typSetData &dsBenedictIntro; 'q3 True)
							
							;	Continue
							(scrShowPane gScreen "BenedictIntro")
							)
					</Action>
					
					<Action id="actionDone" cancel="1">
						(scrExitScreen gScreen)
					</Action>
				</Actions>
			</Default>
			
			<BenedictIntro>
				<OnPaneInit>
					(scrSetDesc gScreen (typTranslate &dsBenedictIntro; "q3:Answer"))
				</OnPaneInit>
				
				<Actions>
					<Action id="actionContinue" default="1" cancel="1">
						(block (theMission)
						
							;	Exit the screen so when we return, we're back at the main screen
							
							(scrExitScreen gScreen)
							
							;	If we have an open mission or if the first Benedict mission is
							;	available, then show it.
							
							(if	(or (setq theMission (@ (msnFind gSource "oS") 0))
									(setq theMission (msnCreate &msBenedictsDrones; gSource)))
								(scrShowScreen gScreen &dsRPGMission;
									{
									missionObj: theMission
									})
								)
							)
					</Action>
				</Actions>
			</BenedictIntro>
		</Panes>
		
		<Language>
			<Text id="actionDone">"Do[n]e"</Text>
			
			<Text id="IntroFirst">
				(cat
					"You are docked at an abbey of the Sisters of Domina. "
					"A woman wearing a flowing cardinal robe approaches you.\n\n"
							
					"\"Welcome, pilgrim! Your journey to the Galactic Core has just begun. "
					"Your path will be filled with many obstacles, but do not worry: "
					"Domina chooses only those who have the strength to succeed.\""
					)
			</Text>
			
			<Text id="IntroReturning">
				(cat
					"The abbess greets you:\n\n"
					
					"\"Welcome back, %name%! Your journey to the Galactic Core has just begun. "
					"Whatever obstacles you've faced so far are nothing compared to what "
					"awaits you. Take comfort in Domina's guidance.\""
					)
			</Text>
			
			<Text id="q1:Label">"\"Who is [D]omina?\""</Text>
			<Text id="q1:Answer">
				(random (list
					(cat
						"\"Domina speaks to you in your dreams and visions. "
						"She summons those like you to journey to the Core. "
						"Perhaps if you reach her you will understand. "
						"But do not be afraid&#x97;Domina will protect you.\""
						)
					(cat
						"\"Domina speaks to you from her throne at the Galactic Core. "
						"Only she knows the purpose of your journey. Perhaps if you reach her you will understand.\""
						)
					(cat
						"\"Domina is the divine intelligence that guides you. "
						"She waits for you at the Galactic Core for some purpose. "
						"Perhaps if you reach her you will understand.\""
						)
					))
			</Text>
			
			<Text id="q2:Label">"\"How do I reach the [G]alactic Core?\""</Text>
			<Text id="q2:Answer">
				(random (list
					(cat
						"\"The stargates will take you. Seek them out and enter. "
						"But be prepared for many obstacles. You must grow stronger to reach the Core.\""
						)
					(cat
						"\"The stargates will take you. Seek them out and enter. "
						"But remember that the farther you go, the greater the dangers.\""
						)
					))
			</Text>
			
			<Text id="q3:Label">"\"[W]hat obstacles will I face?\""</Text>
			<Text id="q3:Answer">
				(cat
					"\"Star travel is dangerous, even in the Commonwealth. "
					"You'll face pirates, outlaws and worse before you reach the Core. "
					"But we can prepare you.\n\n"
					
					"The abbess signals an unseen companion and a stout man emerges from "
					"the shadows. He marches to the abbess's side, looking past you at "
					"your ship.\n\n"
					
					"The abbess continues: \"This is Benedict, our most valuable friend. "
					"He will help you.\""
					)
			</Text>
			
			<Text id="q3:LabelAgain">"\"I'd like [B]enedict to help\""</Text>
		</Language>
	</DockScreen>

	<!-- Benedict Training
	
	GLOBAL DATA
	
	trainingHabitatMission: If True, we've already pointed the player towards a habitat.
	
	-->

	<DockScreen UNID="&dsBenedictTraining;"
			nestedScreen=		"true"
			inherit=			"&dsDockScreenBase;"
			>

		<Panes>
			<Default>
				<OnPaneInit>
					(block (foundItem targetObj)
						(switch
							
							;	If we've never destroyed an enemy station, then 
							;	send the player out to explore.
							
							(not (plyGetStat gPlayer 'enemyStationsDestroyed))
								(switch
								
									;	If we're in Eridani, point the player to a habitat so they can get
									;	a mission.

									(and (eq (sysGetNode) 'SE)
											(setq targetObj (sysFindObject gSource "TAN +unid:&stCommonwealthSlums;;"))
											(not (typGetData &dsBenedictTraining; 'trainingHabitatMission))
											)
										(block Nil
											(scrSetData gScreen 'targetID (objGetID targetObj))
											(scrSetData gScreen 'action 'pointToHabitat)
											(scrSetDesc gScreen (typTranslate &dsBenedictTraining; 'TrainingHabitatMission))
											)
											
									;	Otherwise, we tell the player to attack a different station
									
									(setq targetObj (sysFindObject gSource "TAEN +populated;"))
										(block Nil
											(scrSetData gScreen 'targetID (objGetID targetObj))
											(scrSetData gScreen 'action 'pointToTarget)
											(scrSetDesc gScreen (typTranslate &dsBenedictTraining; 'TrainingEnemyStation))
											)
											
									;	Otherwise, explore
									
									(scrSetDesc gScreen (typTranslate &dsBenedictTraining; 'TrainingExplore1))
									)
								
							;	If we've never use the map, tell the player about it.
									
							(plyIsMessageEnabled gPlayer 'mapHint)
								(block Nil
									(scrSetDesc gScreen (typTranslate &dsBenedictTraining; 'TrainingExplore1))
									)

							;	If we've never looted a station, then tell the player
							;	how to do that.
						
							(and (not (typGetData &svPlayer; 'tutorialLooted))
									(setq targetObj (sysFindObject gSource "TKEN +populated;"))
									)
								(block Nil
									;	Make sure there is stuff to loot
									
									(if (not (objGetItems targetObj "*UN"))
										(objAddItem targetObj &itCentauriRice; (random 1 4))
										)
										
									;	Send player to loot
									
									(scrSetData gScreen 'targetID (objGetID targetObj))
									(scrSetData gScreen 'action 'pointToDockTarget)
									(scrSetDesc gScreen (typTranslate &dsBenedictTraining; 'TrainingLoot))
									)
								
							;	If we haven't yet installed a device and we've got a device
							;	in our cargo hold, then tell the player how to install it.
						
							(and (not (typGetData &svPlayer; 'tutorialInstalled))
									(or
										(setq foundItem (@
											(filter (objGetItems gPlayerShip "pUN -disposable;") theItem 
												(gr (itmGetLevel theItem) (itmGetLevel (objGetProperty gPlayerShip 'selectedWeapon)))
												)
											0
											))
										(setq foundItem (@
											(filter (objGetItems gPlayerShip "lUN -disposable;") theItem 
												(not (objGetProperty gPlayerShip 'selectedLauncher))
												)
											0
											))
										(setq foundItem (@
											(filter (objGetItems gPlayerShip "sUN") theItem 
												(gr (itmGetLevel theItem) (itmGetLevel (@ (objGetItems gPlayerShip "sI") 0)))
												)
											0
											))
										;(setq foundItem (@
										;	(filter (objGetItems gPlayerShip "aUN") theItem 
										;		(gr (itmGetLevel theItem) 
										;			(map (objGetItems gPlayerShip "aI") 'reduceMax theArmor (itmGetLevel theArmor))
										;			)
										;		)
										;	0
										;	))
										)
									(setq targetObj (@
										(filter (sysFindObject gSource "TAF +populated; S:d") theObj
											(geq (objGetProperty theObj 'installDeviceMaxLevel) (itmGetLevel foundItem))
											)
										0
										))
									)
								(block Nil
									(scrSetData gScreen 'foundItem foundItem)
									(scrSetData gScreen 'targetID (objGetID targetObj))
									(scrSetData gScreen 'action 'pointToDockTarget)
									(scrSetDesc gScreen (typTranslate &dsBenedictTraining; 'TrainingInstallDevice))
									)
						
							;	If we haven't sold anything yet and we have something in our 
							;	cargo hold worth selling, then sell it.
							
							(and (not (typGetData &svPlayer; 'tutorialSold))
									(objGetItems gPlayerShip "*~fU")
									)
								(scrSetDesc gScreen (typTranslate &dsBenedictTraining; 'TrainingSell))
								
							;	Nothing else
								
							(scrSetDesc gScreen (typTranslate &dsBenedictTraining; 'NothingMore))
							)
						)
				</OnPaneInit>

				<Actions>
					<Action id="actionDone" default="1" cancel="1">
						(block (
							(theAction (scrGetData gScreen 'action))
							)
							
							(switch
								(eq theAction 'pointToDockTarget)
									(block (
										(targetObj (objGetObjByID (scrGetData gScreen 'targetID)))
										)
										
										(objSetShowAsDestination targetObj (list 'showHighlight 'autoClearOnDock))
										)
										
								(eq theAction 'pointToHabitat)
									(block (
										(targetObj (objGetObjByID (scrGetData gScreen 'targetID)))
										)
										
										(objSetShowAsDestination targetObj (list 'showHighlight 'autoClearOnDock))
										(typSetData &dsBenedictTraining; 'trainingHabitatMission True)
										)
										
								(eq theAction 'pointToTarget)
									(block (
										(targetObj (objGetObjByID (scrGetData gScreen 'targetID)))
										)
										
										(objSetShowAsDestination targetObj (list 'showHighlight 'autoClearOnDestroy))
										)
								)
							
							(scrExitScreen gScreen 'forceUndock)
							)
					</Action>
				</Actions>
			</Default>
		</Panes>
		
		<Language>
			<Text id="NothingMore">
				(cat
					"\"LATER: I have nothing more to teach you.\""
					)
			</Text>
			<Text id="TrainingEnemyStation">
				(block (
					(targetObj (objGetObjByID (scrGetData gScreen 'targetID)))
					)
					
					(cat
						"\"LATER: Go to " (objGetName targetObj) " and destroy it.\""
						)
					)
			</Text>
			<Text id="TrainingExplore1">
				(cat
					"\"LATER: You're ready to explore! Use your map ([M] key) to see your "
					"position in the star system. Visit planets and asteroids and look for "
					"stations.\n\n"
					"Green stations are friendly; you can dock with them and see what "
					"services they provide. Red stations are enemies. Kill them and loot them.\""
					)
			</Text>
			<Text id="TrainingHabitatMission">
				(block (
					(targetObj (objGetObjByID (scrGetData gScreen 'targetID)))
					)
					
					(cat
						"\"LATER: Go to " (objGetName targetObj) " and see what they have to say.\""
						)
					)
			</Text>
			<Text id="TrainingInstallDevice">
				(block (
					(itemToInstall (scrGetData gScreen 'foundItem))
					(targetObj (objGetObjByID (scrGetData gScreen 'targetID)))
					)
					
					(cat
						"\"The " (itmGetName itemToInstall 0) " in your cargo hold will come in handy. "
						"Go to " (objGetName targetObj) " and have it installed at their dock services.\""
						)
					)
			</Text>
			<Text id="TrainingLoot">
				(block (
					(targetObj (objGetObjByID (scrGetData gScreen 'targetID)))
					)
					
					(cat
						"\"LATER: Go to " (objGetName targetObj) " and loot it.\""
						)
					)
			</Text>
			<Text id="TrainingSell">
				(cat
					"\"You can earn money to buy fuel and upgrade by selling items in your "
					"cargo hold. Go to Starton Eridani and sell some stuff.\""
					)
			</Text>
		</Language>
	</DockScreen>

</TranscendenceModule>
