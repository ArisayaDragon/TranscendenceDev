//	Catalog Generator.lmc
//
//	Generates a photo catalog from a directory of images

{
name: "Catalog Generator"
desc: "Generates a photo catalog from a directory of images."
version: 2

parameters:
	[
		{
		name: "Folder"
		param: "rootFolder"
		type: "string"
		default: "."
		},

		{
		name: "Thumbnail Width"
		param: "thumbnailWidth"
		type: "integer"
		default: 64
		},

		{
		name: "Thumbnail Height"
		param: "thumbnailHeight"
		type: "integer"
		default: 48
		},

		{
		name: "Columns"
		param: "noOfColumns"
		type: "integer"
		default: 4
		},
	]

renderer: Code
	{
	function Renderer ()
		{
		//	Some constants

		var HSpacing = 8;
		var TopSpacing = 8;
		var BottomSpacing = 24;

		//	Figure out how many images there are in the given
		//	directory.

		var imageCount = 0;

		var fileCtx;
		fileCtx = osGetFirstFile(rootFolder);
		while (fileCtx)
			{
			if (!osfilectxIsDirectory(fileCtx))
				imageCount = imageCount + 1;

			fileCtx = osGetNextFile(fileCtx);
			}

		//	Figure out how large to make the canvas

		var Rows = imageCount / noOfColumns;
		if (Rows * noOfColumns < imageCount)
			Rows = Rows + 1;

		var canvasWidth = (thumbnailWidth * noOfColumns) + (HSpacing * (noOfColumns + 1));
		var canvasHeight = TopSpacing + ((thumbnailHeight + BottomSpacing) * Rows);

		//	Create a font

		var labelFont = CreateFont("Tahoma", 10, "");
		var labelFontColor = Color(0x00, 0x00, 0x00);

		//	Initialize the canvas

		SetCanvasSize(canvasWidth, canvasHeight);
		FillRect(GetCanvas(), 0, 0, canvasWidth, canvasHeight, Color(0xff, 0xff, 0xff));

		//	Paint each of the images as a thumbnail

		var x = HSpacing;
		var y = TopSpacing;
		var countInRow = 0;
		fileCtx = osGetFirstFile(rootFolder);
		while (fileCtx)
			{
			if (!osfilectxIsDirectory(fileCtx))
				{
				var image = LoadImage(osfilectxPath(fileCtx));

				//	Figure out the size of the thumbnail

				var scaleW = 1000 * thumbnailWidth / GetImageWidth(image);
				var scaleH = 1000 * thumbnailHeight / GetImageHeight(image);

				var scale;
				if (scaleH < scaleW)
					scale = scaleH;
				else
					scale = scaleW;

				var width = GetImageWidth(image) * scale / 1000;
				var height = GetImageHeight(image) * scale / 1000;

				//	Draw thumbnail

				var xOffset = (thumbnailWidth - width) / 2;
				var yOffset = (thumbnailHeight - height) / 2;
				ScaleImage(image,
						0,
						0,
						GetImageWidth(image),
						GetImageHeight(image),
						GetCanvas(),
						x + xOffset,
						y + yOffset,
						width,
						height);

				//	Draw label

				DrawText(GetCanvas(),
						x,
						y + thumbnailHeight,
						thumbnailWidth,
						BottomSpacing,
						osfilectxFilename(fileCtx),
						labelFont,
						labelFontColor,
						"c");

				countInRow = countInRow + 1;
				if (countInRow == noOfColumns)
					{
					countInRow = 0;
					x = HSpacing;
					y = y + thumbnailHeight + BottomSpacing;
					}
				else
					{
					x = x + thumbnailWidth + HSpacing;
					}

				DeleteCanvas(image);
				}

			fileCtx = osGetNextFile(fileCtx);
			}
		}
	}
}
